{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar FlowTestUserList;\nvar FlowTestUserPage;\nvar FlowTestUserInstance;\nvar FlowTestUserContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserList\n *\n * @param {Twilio.Studio.V2} version - Version of the resource\n * @param {string} sid - The sid\n */\n\n/* jshint ignore:end */\n\nFlowTestUserList = function FlowTestUserList(version, sid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function testUsers\n   * @memberof Twilio.Studio.V2.FlowContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n\n  /* jshint ignore:end */\n  function FlowTestUserListInstance(sid) {\n    return FlowTestUserListInstance.get(sid);\n  }\n\n  FlowTestUserListInstance._version = version; // Path Solution\n\n  FlowTestUserListInstance._solution = {\n    sid: sid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a flow_test_user\n   *\n   * @function get\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns {Twilio.Studio.V2.FlowContext.FlowTestUserContext}\n   */\n\n  /* jshint ignore:end */\n\n  FlowTestUserListInstance.get = function get() {\n    return new FlowTestUserContext(this._version, this._solution.sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FlowTestUserListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FlowTestUserListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FlowTestUserListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FlowTestUserSolution} solution - Path solution\n *\n * @returns FlowTestUserPage\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserPage = function FlowTestUserPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FlowTestUserPage.prototype, Page.prototype);\n\nFlowTestUserPage.prototype.constructor = FlowTestUserPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FlowTestUserInstance\n *\n * @function getInstance\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @param {FlowTestUserPayload} payload - Payload response from the API\n *\n * @returns FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\nFlowTestUserPage.prototype.getInstance = function getInstance(payload) {\n  return new FlowTestUserInstance(this._version, payload, this._solution.sid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowTestUserPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserInstance\n *\n * @property {string} sid - The sid\n * @property {string} testUsers - The test_users\n * @property {string} url - The url\n *\n * @param {V2} version - Version of the resource\n * @param {FlowTestUserPayload} payload - The instance payload\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance = function FlowTestUserInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.testUsers = payload.test_users; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid\n  };\n};\n\nObject.defineProperty(FlowTestUserInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new FlowTestUserContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\nFlowTestUserInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers - The test_users\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowTestUserInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowTestUserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowContext.FlowTestUserContext\n *\n * @param {V2} version - Version of the resource\n * @param {sid} sid - The sid\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext = function FlowTestUserContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = \"/Flows/\".concat(sid, \"/TestUsers\");\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FlowTestUserInstance\n *\n * @function fetch\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a FlowTestUserInstance\n *\n * @function update\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @param {object} opts - Options for request\n * @param {string|list} opts.testUsers - The test_users\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FlowTestUserInstance\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.testUsers)) {\n    throw new Error('Required parameter \"opts.testUsers\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'TestUsers': serialize.map(_.get(opts, 'testUsers'), function (e) {\n      return e;\n    })\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FlowTestUserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowContext.FlowTestUserContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowTestUserContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFlowTestUserContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FlowTestUserList: FlowTestUserList,\n  FlowTestUserPage: FlowTestUserPage,\n  FlowTestUserInstance: FlowTestUserInstance,\n  FlowTestUserContext: FlowTestUserContext\n};","map":null,"metadata":{},"sourceType":"script"}