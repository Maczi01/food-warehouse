{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  var _require = require('./Utility');\n\n  isObject = _require.isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents the XML declaration\n\n  module.exports = XMLDeclaration = /*#__PURE__*/function (_XMLNode) {\n    \"use strict\";\n\n    _inherits(XMLDeclaration, _XMLNode);\n\n    // Initializes a new instance of `XMLDeclaration`\n    // `parent` the document object\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var _this;\n\n      _classCallCheck(this, XMLDeclaration);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLDeclaration).call(this, parent)); // arguments may also be passed as an object\n\n      if (isObject(version)) {\n        var _version = version;\n        version = _version.version;\n        encoding = _version.encoding;\n        standalone = _version.standalone;\n      }\n\n      if (!version) {\n        version = '1.0';\n      }\n\n      _this.type = NodeType.Declaration;\n      _this.version = _this.stringify.xmlVersion(version);\n\n      if (encoding != null) {\n        _this.encoding = _this.stringify.xmlEncoding(encoding);\n      }\n\n      if (standalone != null) {\n        _this.standalone = _this.stringify.xmlStandalone(standalone);\n      }\n\n      return _this;\n    } // Converts to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    _createClass(XMLDeclaration, [{\n      key: \"toString\",\n      value: function toString(options) {\n        return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n      }\n    }]);\n\n    return XMLDeclaration;\n  }(XMLNode);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}