{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\n\nvar scmpCompare = require('./lib/scmpCompare');\n/**\n * Does a constant-time Buffer comparison by not short-circuiting\n * on first sign of non-equivalency.\n *\n * @param {Buffer} a The first Buffer to be compared against the second\n * @param {Buffer} b The second Buffer to be compared against the first\n * @return {Boolean}\n */\n\n\nmodule.exports = function scmp(a, b) {\n  // check that both inputs are buffers\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new Error('Both scmp args must be Buffers');\n  } // return early here if buffer lengths are not equal since timingSafeEqual\n  // will throw if buffer lengths are not equal\n\n\n  if (a.length !== b.length) {\n    return false;\n  } // use crypto.timingSafeEqual if available (since Node.js v6.6.0),\n  // otherwise use our own scmp-internal function.\n\n\n  if (crypto.timingSafeEqual) {\n    return crypto.timingSafeEqual(a, b);\n  }\n\n  return scmpCompare(a, b);\n};","map":null,"metadata":{},"sourceType":"script"}