{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLNode, XMLRaw;\n  NodeType = require('./NodeType');\n  XMLNode = require('./XMLNode'); // Represents a  raw node\n\n  module.exports = XMLRaw = /*#__PURE__*/function (_XMLNode) {\n    \"use strict\";\n\n    _inherits(XMLRaw, _XMLNode);\n\n    // Initializes a new instance of `XMLRaw`\n    // `text` raw text\n    function XMLRaw(parent, text) {\n      var _this;\n\n      _classCallCheck(this, XMLRaw);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLRaw).call(this, parent));\n\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + _this.debugInfo());\n      }\n\n      _this.type = NodeType.Raw;\n      _this.value = _this.stringify.raw(text);\n      return _this;\n    } // Creates and returns a deep clone of `this`\n\n\n    _createClass(XMLRaw, [{\n      key: \"clone\",\n      value: function clone() {\n        return Object.create(this);\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n    }, {\n      key: \"toString\",\n      value: function toString(options) {\n        return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n      }\n    }]);\n\n    return XMLRaw;\n  }(XMLNode);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}