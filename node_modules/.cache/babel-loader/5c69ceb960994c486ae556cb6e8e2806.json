{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _add = _interopRequireDefault(require(\"../run/add\"));\n\nvar _empty = _interopRequireDefault(require(\"../run/empty\"));\n\nvar _prepend = _interopRequireDefault(require(\"../run/prepend\"));\n\nvar _stringFromCodePoints = _interopRequireDefault(require(\"../utils/stringFromCodePoints\"));\n/**\n * prepend glyph into last run of attributed string\n *\n * @param {Object} glyph\n * @param {Object} attributed string\n * @return {Object} attributed string with new glyph\n */\n\n\nvar prepend = function prepend(glyph, string) {\n  var codePoints = R.propOr([], 'codePoints')(glyph);\n  return R.evolve({\n    string: R.concat((0, _stringFromCodePoints[\"default\"])(codePoints)),\n    runs: R.converge(R.concat, [R.compose(R.unapply(R.identity), (0, _prepend[\"default\"])(glyph), R.either(R.head, _empty[\"default\"])), R.compose(R.map((0, _add[\"default\"])(codePoints.length)), R.tail)])\n  })(string);\n};\n\nvar _default = R.curryN(2, prepend);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}