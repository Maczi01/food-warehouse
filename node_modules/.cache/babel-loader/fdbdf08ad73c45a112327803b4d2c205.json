{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar NotificationList;\nvar NotificationPage;\nvar NotificationInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationList\n *\n * @param {Twilio.Notify.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\nNotificationList = function NotificationList(version, serviceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function notifications\n   * @memberof Twilio.Notify.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Notify.V1.ServiceContext.NotificationContext}\n   */\n\n  /* jshint ignore:end */\n  function NotificationListInstance(sid) {\n    return NotificationListInstance.get(sid);\n  }\n\n  NotificationListInstance._version = version; // Path Solution\n\n  NotificationListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  NotificationListInstance._uri = \"/Services/\".concat(serviceSid, \"/Notifications\");\n  /* jshint ignore:start */\n\n  /**\n   * create a NotificationInstance\n   *\n   * @function create\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.body] - The notification body text\n   * @param {notification.priority} [opts.priority] -\n   *          The priority of the notification\n   * @param {number} [opts.ttl] - How long, in seconds, the notification is valid\n   * @param {string} [opts.title] - The notification title\n   * @param {string} [opts.sound] -\n   *          The name of the sound to be played for the notification\n   * @param {string} [opts.action] - The actions to display for the notification\n   * @param {object} [opts.data] -\n   *          The custom key-value pairs of the notification's payload\n   * @param {object} [opts.apn] -\n   *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n   * @param {object} [opts.gcm] -\n   *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n   * @param {object} [opts.sms] -\n   *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n   * @param {object} [opts.facebookMessenger] - Deprecated\n   * @param {object} [opts.fcm] -\n   *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n   * @param {string|list} [opts.segment] - A Segment to notify\n   * @param {object} [opts.alexa] - Deprecated\n   * @param {string|list} [opts.toBinding] -\n   *          The destination address specified as a JSON string\n   * @param {string} [opts.deliveryCallbackUrl] - URL to send webhooks\n   * @param {string|list} [opts.identity] -\n   *          The `identity` value that identifies the new resource's User\n   * @param {string|list} [opts.tag] - A tag that selects the Bindings to notify\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed NotificationInstance\n   */\n\n  /* jshint ignore:end */\n\n  NotificationListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': serialize.map(_.get(opts, 'identity'), function (e) {\n        return e;\n      }),\n      'Tag': serialize.map(_.get(opts, 'tag'), function (e) {\n        return e;\n      }),\n      'Body': _.get(opts, 'body'),\n      'Priority': _.get(opts, 'priority'),\n      'Ttl': _.get(opts, 'ttl'),\n      'Title': _.get(opts, 'title'),\n      'Sound': _.get(opts, 'sound'),\n      'Action': _.get(opts, 'action'),\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Apn': serialize.object(_.get(opts, 'apn')),\n      'Gcm': serialize.object(_.get(opts, 'gcm')),\n      'Sms': serialize.object(_.get(opts, 'sms')),\n      'FacebookMessenger': serialize.object(_.get(opts, 'facebookMessenger')),\n      'Fcm': serialize.object(_.get(opts, 'fcm')),\n      'Segment': serialize.map(_.get(opts, 'segment'), function (e) {\n        return e;\n      }),\n      'Alexa': serialize.object(_.get(opts, 'alexa')),\n      'ToBinding': serialize.map(_.get(opts, 'toBinding'), function (e) {\n        return e;\n      }),\n      'DeliveryCallbackUrl': _.get(opts, 'deliveryCallbackUrl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new NotificationInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  NotificationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  NotificationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return NotificationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {NotificationSolution} solution - Path solution\n *\n * @returns NotificationPage\n */\n\n/* jshint ignore:end */\n\n\nNotificationPage = function NotificationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(NotificationPage.prototype, Page.prototype);\n\nNotificationPage.prototype.constructor = NotificationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of NotificationInstance\n *\n * @function getInstance\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @param {NotificationPayload} payload - Payload response from the API\n *\n * @returns NotificationInstance\n */\n\n/* jshint ignore:end */\n\nNotificationPage.prototype.getInstance = function getInstance(payload) {\n  return new NotificationInstance(this._version, payload, this._solution.serviceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nNotificationPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nNotificationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {string} identities -\n *          The list of identity values of the Users to notify\n * @property {string} tags - The tags that select the Bindings to notify\n * @property {string} segments - The list of Segments to notify\n * @property {notification.priority} priority - The priority of the notification\n * @property {number} ttl - How long, in seconds, the notification is valid\n * @property {string} title - The notification title\n * @property {string} body - The notification body text\n * @property {string} sound -\n *          The name of the sound to be played for the notification\n * @property {string} action - The actions to display for the notification\n * @property {object} data -\n *          The custom key-value pairs of the notification's payload\n * @property {object} apn -\n *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n * @property {object} gcm -\n *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n * @property {object} fcm -\n *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n * @property {object} sms -\n *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n * @property {object} facebookMessenger - Deprecated\n * @property {object} alexa - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {NotificationPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\n\nNotificationInstance = function NotificationInstance(version, payload, serviceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.identities = payload.identities; // jshint ignore:line\n\n  this.tags = payload.tags; // jshint ignore:line\n\n  this.segments = payload.segments; // jshint ignore:line\n\n  this.priority = payload.priority; // jshint ignore:line\n\n  this.ttl = deserialize.integer(payload.ttl); // jshint ignore:line\n\n  this.title = payload.title; // jshint ignore:line\n\n  this.body = payload.body; // jshint ignore:line\n\n  this.sound = payload.sound; // jshint ignore:line\n\n  this.action = payload.action; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n\n  this.apn = payload.apn; // jshint ignore:line\n\n  this.gcm = payload.gcm; // jshint ignore:line\n\n  this.fcm = payload.fcm; // jshint ignore:line\n\n  this.sms = payload.sms; // jshint ignore:line\n\n  this.facebookMessenger = payload.facebook_messenger; // jshint ignore:line\n\n  this.alexa = payload.alexa; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nNotificationInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nNotificationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  NotificationList: NotificationList,\n  NotificationPage: NotificationPage,\n  NotificationInstance: NotificationInstance\n};","map":null,"metadata":{},"sourceType":"script"}