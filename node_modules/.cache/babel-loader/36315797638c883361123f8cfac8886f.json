{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar moduleInfo = require('../../package.json');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar RestException = require('../base/RestException');\n/* jshint ignore:line */\n\n/* jshint ignore:start */\n\n/**\n * Twilio Client to interact with the Rest API\n *\n * @constructor Twilio\n *\n * @property {Twilio.Accounts} accounts - accounts domain\n * @property {Twilio.Api} api - api domain\n * @property {Twilio.Authy} authy - authy domain\n * @property {Twilio.Autopilot} autopilot - autopilot domain\n * @property {Twilio.Chat} chat - chat domain\n * @property {Twilio.Conversations} conversations - conversations domain\n * @property {Twilio.Fax} fax - fax domain\n * @property {Twilio.FlexApi} flexApi - flex_api domain\n * @property {Twilio.Insights} insights - insights domain\n * @property {Twilio.IpMessaging} ipMessaging - ip_messaging domain\n * @property {Twilio.Lookups} lookups - lookups domain\n * @property {Twilio.Messaging} messaging - messaging domain\n * @property {Twilio.Monitor} monitor - monitor domain\n * @property {Twilio.Notify} notify - notify domain\n * @property {Twilio.Numbers} numbers - numbers domain\n * @property {Twilio.Preview} preview - preview domain\n * @property {Twilio.Pricing} pricing - pricing domain\n * @property {Twilio.Proxy} proxy - proxy domain\n * @property {Twilio.Serverless} serverless - serverless domain\n * @property {Twilio.Studio} studio - studio domain\n * @property {Twilio.Sync} sync - sync domain\n * @property {Twilio.Taskrouter} taskrouter - taskrouter domain\n * @property {Twilio.Trunking} trunking - trunking domain\n * @property {Twilio.Verify} verify - verify domain\n * @property {Twilio.Video} video - video domain\n * @property {Twilio.Voice} voice - voice domain\n * @property {Twilio.Wireless} wireless - wireless domain\n * @property {Twilio.Supersim} supersim - supersim domain\n * @property {Twilio.Bulkexports} bulkexports - bulkexports domain\n * @property {Twilio.Api.V2010.AccountContext.AddressList} addresses -\n *          addresses resource\n * @property {Twilio.Api.V2010.AccountContext.ApplicationList} applications -\n *          applications resource\n * @property {Twilio.Api.V2010.AccountContext.AuthorizedConnectAppList} authorizedConnectApps -\n *          authorizedConnectApps resource\n * @property {Twilio.Api.V2010.AccountContext.AvailablePhoneNumberCountryList} availablePhoneNumbers -\n *          availablePhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.BalanceList} balance -\n *          balance resource\n * @property {Twilio.Api.V2010.AccountContext.CallList} calls - calls resource\n * @property {Twilio.Api.V2010.AccountContext.ConferenceList} conferences -\n *          conferences resource\n * @property {Twilio.Api.V2010.AccountContext.ConnectAppList} connectApps -\n *          connectApps resource\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList} incomingPhoneNumbers -\n *          incomingPhoneNumbers resource\n * @property {Twilio.Api.V2010.AccountContext.KeyList} keys - keys resource\n * @property {Twilio.Api.V2010.AccountContext.MessageList} messages -\n *          messages resource\n * @property {Twilio.Api.V2010.AccountContext.NewKeyList} newKeys -\n *          newKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NewSigningKeyList} newSigningKeys -\n *          newSigningKeys resource\n * @property {Twilio.Api.V2010.AccountContext.NotificationList} notifications -\n *          notifications resource\n * @property {Twilio.Api.V2010.AccountContext.OutgoingCallerIdList} outgoingCallerIds -\n *          outgoingCallerIds resource\n * @property {Twilio.Api.V2010.AccountContext.QueueList} queues - queues resource\n * @property {Twilio.Api.V2010.AccountContext.RecordingList} recordings -\n *          recordings resource\n * @property {Twilio.Api.V2010.AccountContext.SigningKeyList} signingKeys -\n *          signingKeys resource\n * @property {Twilio.Api.V2010.AccountContext.SipList} sip - sip resource\n * @property {Twilio.Api.V2010.AccountContext.ShortCodeList} shortCodes -\n *          shortCodes resource\n * @property {Twilio.Api.V2010.AccountContext.TokenList} tokens - tokens resource\n * @property {Twilio.Api.V2010.AccountContext.TranscriptionList} transcriptions -\n *          transcriptions resource\n * @property {Twilio.Api.V2010.AccountContext.UsageList} usage - usage resource\n * @property {Twilio.Api.V2010.AccountContext.ValidationRequestList} validationRequests -\n *          validationRequests resource\n *\n * @param {string} username -\n *          The username used for authentication. This is normally account sid, but if using key/secret auth will be the api key sid.\n * @param {string} password -\n *          The password used for authentication. This is normally auth token, but if using key/secret auth will be the secret.\n * @param {object} [opts] - The options argument\n * @param {RequestClient} [opts.httpClient] -\n *          The client used for http requests. Defaults to RequestClient\n * @param {string} [opts.accountSid] -\n *          The default accountSid. This is set to username if not provided\n * @param {object} [opts.env] - The environment object. Defaults to process.env\n * @param {string} [opts.region] - Twilio region to use. Defaults to none\n * @param {boolean} [opts.lazyLoading] -\n *          Enable lazy loading, loading time will decrease if enabled\n *\n * @returns {Twilio} A new instance of Twilio client\n */\n\n/* jshint ignore:end */\n\n\nfunction Twilio(username, password, opts) {\n  opts = opts || {};\n  var env = opts.env || process.env;\n  this.username = username || env.TWILIO_ACCOUNT_SID;\n  this.password = password || env.TWILIO_AUTH_TOKEN;\n  this.accountSid = opts.accountSid || this.username;\n  this._httpClient = opts.httpClient;\n\n  if (!opts.lazyLoading) {\n    this._httpClient = this.httpClient;\n  }\n\n  this.region = opts.region;\n\n  if (!this.username) {\n    throw new Error('username is required');\n  }\n\n  if (!this.password) {\n    throw new Error('password is required');\n  }\n\n  if (!_.startsWith(this.accountSid, 'AC')) {\n    throw new Error('accountSid must start with AC');\n  } // Domains\n\n\n  this._accounts = undefined;\n  this._api = undefined;\n  this._authy = undefined;\n  this._autopilot = undefined;\n  this._chat = undefined;\n  this._conversations = undefined;\n  this._fax = undefined;\n  this._flexApi = undefined;\n  this._insights = undefined;\n  this._ipMessaging = undefined;\n  this._lookups = undefined;\n  this._messaging = undefined;\n  this._monitor = undefined;\n  this._notify = undefined;\n  this._numbers = undefined;\n  this._preview = undefined;\n  this._pricing = undefined;\n  this._proxy = undefined;\n  this._serverless = undefined;\n  this._studio = undefined;\n  this._sync = undefined;\n  this._taskrouter = undefined;\n  this._trunking = undefined;\n  this._verify = undefined;\n  this._video = undefined;\n  this._voice = undefined;\n  this._wireless = undefined;\n  this._supersim = undefined;\n  this._bulkexports = undefined;\n\n  if (!opts.lazyLoading) {\n    this.accounts;\n    this.api;\n    this.authy;\n    this.autopilot;\n    this.chat;\n    this.conversations;\n    this.fax;\n    this.flexApi;\n    this.insights;\n    this.ipMessaging;\n    this.lookups;\n    this.messaging;\n    this.monitor;\n    this.notify;\n    this.numbers;\n    this.preview;\n    this.pricing;\n    this.proxy;\n    this.serverless;\n    this.studio;\n    this.sync;\n    this.taskrouter;\n    this.trunking;\n    this.verify;\n    this.video;\n    this.voice;\n    this.wireless;\n    this.supersim;\n    this.bulkexports;\n  }\n}\n/* jshint ignore:start */\n\n/**\n * Makes a request to the Twilio API using the configured http client.\n * Authentication information is automatically added if none is provided.\n *\n * @function request\n * @memberof Twilio#\n *\n * @param {object} opts - The options argument\n * @param {string} opts.method - The http method\n * @param {string} opts.uri - The request uri\n * @param {string} [opts.username] - The username used for auth\n * @param {string} [opts.password] - The password used for auth\n * @param {object} [opts.headers] - The request headers\n * @param {object} [opts.params] - The request params\n * @param {object} [opts.data] - The request data\n * @param {int} [opts.timeout] - The request timeout in milliseconds\n * @param {boolean} [opts.allowRedirects] - Should the client follow redirects\n */\n\n/* jshint ignore:end */\n\n\nTwilio.prototype.request = function request(opts) {\n  opts = opts || {};\n\n  if (!opts.method) {\n    throw new Error('method is required');\n  }\n\n  if (!opts.uri) {\n    throw new Error('uri is required');\n  }\n\n  var username = opts.username || this.username;\n  var password = opts.password || this.password;\n  var headers = opts.headers || {};\n  headers['User-Agent'] = util.format('twilio-node/%s (node.js %s)', moduleInfo.version, process.version);\n  headers['Accept-Charset'] = 'utf-8';\n\n  if (opts.method === 'POST' && !headers['Content-Type']) {\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  if (!headers.Accept) {\n    headers.Accept = 'application/json';\n  }\n\n  var uri = opts.uri;\n\n  if (this.region) {\n    var parts = _.split(uri, '.');\n\n    if (parts.length > 1 && !_.isEqual(parts[1], this.region)) {\n      uri = _.join(_.concat([parts[0], this.region], _.slice(parts, 1)), '.');\n    }\n  }\n\n  return this.httpClient.request({\n    method: opts.method,\n    uri: uri,\n    username: username,\n    password: password,\n    headers: headers,\n    params: opts.params,\n    data: opts.data,\n    timeout: opts.timeout,\n    allowRedirects: opts.allowRedirects\n  });\n};\n/* jshint ignore:start */\n\n/**\n * Validates that a request to the new SSL certificate is successful.\n *\n * @throws {RestException} if the request fails\n *\n * @function validateSslCert\n * @memberof Twilio#\n */\n\n/* jshint ignore:end */\n\n\nTwilio.prototype.validateSslCert = function validateSslCert() {\n  return this.httpClient.request({\n    method: 'GET',\n    uri: 'https://api.twilio.com:8443/2010-04-01/.json'\n  }).then(function (response) {\n    if (response.statusCode < 200 || response.statusCode >= 300) {\n      throw new RestException(response);\n    }\n\n    return response;\n  });\n};\n\nObject.defineProperty(Twilio.prototype, 'httpClient', {\n  get: function get() {\n    if (!this._httpClient) {\n      var RequestClient = require('../base/RequestClient');\n      /* jshint ignore:line */\n\n\n      this._httpClient = new RequestClient();\n    }\n\n    return this._httpClient;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'accounts', {\n  get: function get() {\n    if (!this._accounts) {\n      var Accounts = require('./Accounts');\n      /* jshint ignore:line */\n\n\n      this._accounts = new Accounts(this);\n    }\n\n    return this._accounts;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'api', {\n  get: function get() {\n    if (!this._api) {\n      var Api = require('./Api');\n      /* jshint ignore:line */\n\n\n      this._api = new Api(this);\n    }\n\n    return this._api;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'authy', {\n  get: function get() {\n    if (!this._authy) {\n      var Authy = require('./Authy');\n      /* jshint ignore:line */\n\n\n      this._authy = new Authy(this);\n    }\n\n    return this._authy;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'autopilot', {\n  get: function get() {\n    if (!this._autopilot) {\n      var Autopilot = require('./Autopilot');\n      /* jshint ignore:line */\n\n\n      this._autopilot = new Autopilot(this);\n    }\n\n    return this._autopilot;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'chat', {\n  get: function get() {\n    if (!this._chat) {\n      var Chat = require('./Chat');\n      /* jshint ignore:line */\n\n\n      this._chat = new Chat(this);\n    }\n\n    return this._chat;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'conversations', {\n  get: function get() {\n    if (!this._conversations) {\n      var Conversations = require('./Conversations');\n      /* jshint ignore:line */\n\n\n      this._conversations = new Conversations(this);\n    }\n\n    return this._conversations;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'fax', {\n  get: function get() {\n    if (!this._fax) {\n      var Fax = require('./Fax');\n      /* jshint ignore:line */\n\n\n      this._fax = new Fax(this);\n    }\n\n    return this._fax;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'flexApi', {\n  get: function get() {\n    if (!this._flexApi) {\n      var FlexApi = require('./FlexApi');\n      /* jshint ignore:line */\n\n\n      this._flexApi = new FlexApi(this);\n    }\n\n    return this._flexApi;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'insights', {\n  get: function get() {\n    if (!this._insights) {\n      var Insights = require('./Insights');\n      /* jshint ignore:line */\n\n\n      this._insights = new Insights(this);\n    }\n\n    return this._insights;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'ipMessaging', {\n  get: function get() {\n    if (!this._ipMessaging) {\n      var IpMessaging = require('./IpMessaging');\n      /* jshint ignore:line */\n\n\n      this._ipMessaging = new IpMessaging(this);\n    }\n\n    return this._ipMessaging;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'lookups', {\n  get: function get() {\n    if (!this._lookups) {\n      var Lookups = require('./Lookups');\n      /* jshint ignore:line */\n\n\n      this._lookups = new Lookups(this);\n    }\n\n    return this._lookups;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'messaging', {\n  get: function get() {\n    if (!this._messaging) {\n      var Messaging = require('./Messaging');\n      /* jshint ignore:line */\n\n\n      this._messaging = new Messaging(this);\n    }\n\n    return this._messaging;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'monitor', {\n  get: function get() {\n    if (!this._monitor) {\n      var Monitor = require('./Monitor');\n      /* jshint ignore:line */\n\n\n      this._monitor = new Monitor(this);\n    }\n\n    return this._monitor;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'notify', {\n  get: function get() {\n    if (!this._notify) {\n      var Notify = require('./Notify');\n      /* jshint ignore:line */\n\n\n      this._notify = new Notify(this);\n    }\n\n    return this._notify;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'numbers', {\n  get: function get() {\n    if (!this._numbers) {\n      var Numbers = require('./Numbers');\n      /* jshint ignore:line */\n\n\n      this._numbers = new Numbers(this);\n    }\n\n    return this._numbers;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'preview', {\n  get: function get() {\n    if (!this._preview) {\n      var Preview = require('./Preview');\n      /* jshint ignore:line */\n\n\n      this._preview = new Preview(this);\n    }\n\n    return this._preview;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'pricing', {\n  get: function get() {\n    if (!this._pricing) {\n      var Pricing = require('./Pricing');\n      /* jshint ignore:line */\n\n\n      this._pricing = new Pricing(this);\n    }\n\n    return this._pricing;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'proxy', {\n  get: function get() {\n    if (!this._proxy) {\n      var Proxy = require('./Proxy');\n      /* jshint ignore:line */\n\n\n      this._proxy = new Proxy(this);\n    }\n\n    return this._proxy;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'serverless', {\n  get: function get() {\n    if (!this._serverless) {\n      var Serverless = require('./Serverless');\n      /* jshint ignore:line */\n\n\n      this._serverless = new Serverless(this);\n    }\n\n    return this._serverless;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'studio', {\n  get: function get() {\n    if (!this._studio) {\n      var Studio = require('./Studio');\n      /* jshint ignore:line */\n\n\n      this._studio = new Studio(this);\n    }\n\n    return this._studio;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'sync', {\n  get: function get() {\n    if (!this._sync) {\n      var Sync = require('./Sync');\n      /* jshint ignore:line */\n\n\n      this._sync = new Sync(this);\n    }\n\n    return this._sync;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'taskrouter', {\n  get: function get() {\n    if (!this._taskrouter) {\n      var Taskrouter = require('./Taskrouter');\n      /* jshint ignore:line */\n\n\n      this._taskrouter = new Taskrouter(this);\n    }\n\n    return this._taskrouter;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'trunking', {\n  get: function get() {\n    if (!this._trunking) {\n      var Trunking = require('./Trunking');\n      /* jshint ignore:line */\n\n\n      this._trunking = new Trunking(this);\n    }\n\n    return this._trunking;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'verify', {\n  get: function get() {\n    if (!this._verify) {\n      var Verify = require('./Verify');\n      /* jshint ignore:line */\n\n\n      this._verify = new Verify(this);\n    }\n\n    return this._verify;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'video', {\n  get: function get() {\n    if (!this._video) {\n      var Video = require('./Video');\n      /* jshint ignore:line */\n\n\n      this._video = new Video(this);\n    }\n\n    return this._video;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'voice', {\n  get: function get() {\n    if (!this._voice) {\n      var Voice = require('./Voice');\n      /* jshint ignore:line */\n\n\n      this._voice = new Voice(this);\n    }\n\n    return this._voice;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'wireless', {\n  get: function get() {\n    if (!this._wireless) {\n      var Wireless = require('./Wireless');\n      /* jshint ignore:line */\n\n\n      this._wireless = new Wireless(this);\n    }\n\n    return this._wireless;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'supersim', {\n  get: function get() {\n    if (!this._supersim) {\n      var Supersim = require('./Supersim');\n      /* jshint ignore:line */\n\n\n      this._supersim = new Supersim(this);\n    }\n\n    return this._supersim;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'bulkexports', {\n  get: function get() {\n    if (!this._bulkexports) {\n      var Bulkexports = require('./Bulkexports');\n      /* jshint ignore:line */\n\n\n      this._bulkexports = new Bulkexports(this);\n    }\n\n    return this._bulkexports;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'addresses', {\n  get: function get() {\n    return this.api.account.addresses;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'applications', {\n  get: function get() {\n    return this.api.account.applications;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'authorizedConnectApps', {\n  get: function get() {\n    return this.api.account.authorizedConnectApps;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'availablePhoneNumbers', {\n  get: function get() {\n    return this.api.account.availablePhoneNumbers;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'balance', {\n  get: function get() {\n    return this.api.account.balance;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'calls', {\n  get: function get() {\n    return this.api.account.calls;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'conferences', {\n  get: function get() {\n    return this.api.account.conferences;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'connectApps', {\n  get: function get() {\n    return this.api.account.connectApps;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'incomingPhoneNumbers', {\n  get: function get() {\n    return this.api.account.incomingPhoneNumbers;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'keys', {\n  get: function get() {\n    return this.api.account.keys;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'messages', {\n  get: function get() {\n    return this.api.account.messages;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'newKeys', {\n  get: function get() {\n    return this.api.account.newKeys;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'newSigningKeys', {\n  get: function get() {\n    return this.api.account.newSigningKeys;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'notifications', {\n  get: function get() {\n    return this.api.account.notifications;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'outgoingCallerIds', {\n  get: function get() {\n    return this.api.account.outgoingCallerIds;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'queues', {\n  get: function get() {\n    return this.api.account.queues;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'recordings', {\n  get: function get() {\n    return this.api.account.recordings;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'signingKeys', {\n  get: function get() {\n    return this.api.account.signingKeys;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'sip', {\n  get: function get() {\n    return this.api.account.sip;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'shortCodes', {\n  get: function get() {\n    return this.api.account.shortCodes;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'tokens', {\n  get: function get() {\n    return this.api.account.tokens;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'transcriptions', {\n  get: function get() {\n    return this.api.account.transcriptions;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'usage', {\n  get: function get() {\n    return this.api.account.usage;\n  }\n});\nObject.defineProperty(Twilio.prototype, 'validationRequests', {\n  get: function get() {\n    return this.api.account.validationRequests;\n  }\n});\nmodule.exports = Twilio;","map":null,"metadata":{},"sourceType":"script"}