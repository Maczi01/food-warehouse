{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar Request = function Request(opts) {\n  opts = opts || {};\n  this.method = opts.method || this.ANY;\n  this.url = opts.url || this.ANY;\n  this.auth = opts.auth || this.ANY;\n  this.params = opts.params || this.ANY;\n  this.data = opts.data || this.ANY;\n  this.headers = opts.headers || this.ANY;\n  this.ca = opts.ca;\n};\n\nRequest.prototype.ANY = '*';\n\nRequest.prototype.attributeEqual = function (lhs, rhs) {\n  if (lhs === this.ANY || rhs === this.ANY) {\n    return true;\n  }\n\n  lhs = lhs || undefined;\n  rhs = rhs || undefined;\n  return _.isEqual(lhs, rhs);\n};\n\nRequest.prototype.isEqual = function (other) {\n  return this.attributeEqual(this.method, other.method) && this.attributeEqual(this.url, other.url) && this.attributeEqual(this.auth, other.auth) && this.attributeEqual(this.params, other.params) && this.attributeEqual(this.data, other.data) && this.attributeEqual(this.headers, other.headers);\n};\n\nRequest.prototype.toString = function () {\n  var auth = '';\n\n  if (this.auth && this.auth !== this.ANY) {\n    auth = this.auth + ' ';\n  }\n\n  var params = '';\n\n  if (this.params && this.params !== this.ANY) {\n    params = '?' + _.join(_.chain(_.keys(this.params)).map(function (key) {\n      return key + '=' + this.params[key];\n    }.bind(this)).value(), '&');\n  }\n\n  var data = '';\n\n  if (this.data && this.data !== this.ANY) {\n    if (this.method === 'GET') {\n      data = '\\n -G';\n    }\n\n    data = data + '\\n' + _.join(_.map(this.data, function (value, key) {\n      return ' -d ' + key + '=' + value;\n    }), '\\n');\n  }\n\n  var headers = '';\n\n  if (this.headers && this.headers !== this.ANY) {\n    headers = '\\n' + _.join(_.map(this.headers, function (value, key) {\n      return ' -H ' + key + '=' + value;\n    }), '\\n');\n  }\n\n  return auth + this.method + ' ' + this.url + params + data + headers;\n};\n\nmodule.exports = Request;","map":null,"metadata":{},"sourceType":"script"}