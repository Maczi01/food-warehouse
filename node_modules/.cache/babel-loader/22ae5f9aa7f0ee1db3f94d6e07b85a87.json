{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\src\\\\providers\\\\LanguageProvider.js\";\n\nimport React, { useState } from 'react';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport English from '../views/en';\nimport Polish from '../views/pl';\nimport Germany from '../views/de';\n\nvar LanguageProvider = function LanguageProvider(props) {\n  // const [locale, setLocale] = useState('en')\n  // const [language, setLanguage] = useState(English)\n  //\n  // function changeLanguage(language) {\n  //     setLocale(language);\n  //     switch (language) {\n  //         case('en'):\n  //             setLanguage(English)\n  //             break;\n  //         case('pl'):\n  //             setLanguage(Polish)\n  //             break;\n  //         default:\n  //             setLanguage(Germany)\n  //     }\n  // }\n  //\n  // const handleChange = e => {\n  //     changeLanguage(e.target.value);\n  // };\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    messages: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange,\n    defaultValue: locale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Polski\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"English\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" \", props.children));\n};\n\nexport default LanguageProvider;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react1/src/providers/LanguageProvider.js"],"names":["React","useState","IntlProvider","FormattedMessage","English","Polish","Germany","LanguageProvider","props","locale","language","handleChange","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,EAAsBC,gBAAtB,QAA6C,YAA7C;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEC,MAAtB;AAA8B,IAAA,QAAQ,EAAEC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,QAAQ,EAAEC,YAAlB;AAAgC,IAAA,YAAY,EAAEF,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOD,KAAK,CAACI,QAAb,CARJ,CADJ;AAYH,CAnCD;;AAqCA,eAAeL,gBAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {IntlProvider, FormattedMessage} from 'react-intl'\r\n\r\nimport English from '../views/en'\r\nimport Polish from '../views/pl'\r\nimport Germany from '../views/de'\r\n\r\nconst LanguageProvider = (props) => {\r\n\r\n    // const [locale, setLocale] = useState('en')\r\n    // const [language, setLanguage] = useState(English)\r\n    //\r\n    // function changeLanguage(language) {\r\n    //     setLocale(language);\r\n    //     switch (language) {\r\n    //         case('en'):\r\n    //             setLanguage(English)\r\n    //             break;\r\n    //         case('pl'):\r\n    //             setLanguage(Polish)\r\n    //             break;\r\n    //         default:\r\n    //             setLanguage(Germany)\r\n    //     }\r\n    // }\r\n    //\r\n    // const handleChange = e => {\r\n    //     changeLanguage(e.target.value);\r\n    // };\r\n\r\n    return (\r\n        <IntlProvider locale={locale} messages={language}>\r\n            <select onChange={handleChange} defaultValue={locale}>\r\n                <option value=\"pl\">Polski</option>\r\n                <option value=\"en\">English</option>\r\n            </select>\r\n\r\n            {/*<button onClick={() => changeLanguage('en')}> English</button>*/}\r\n            {/*<button onClick={() => changeLanguage('pl')}> Polski</button>*/}\r\n            <div> {props.children}</div>\r\n        </IntlProvider>\r\n    )\r\n}\r\n\r\nexport default LanguageProvider"]},"metadata":{},"sourceType":"module"}