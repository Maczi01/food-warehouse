{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar UsageList;\nvar UsagePage;\nvar UsageInstance;\nvar UsageContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageList\n *\n * @param {Twilio.Preview.Wireless} version - Version of the resource\n * @param {string} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\nUsageList = function UsageList(version, simSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function usage\n   * @memberof Twilio.Preview.Wireless.SimContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n\n  /* jshint ignore:end */\n  function UsageListInstance(sid) {\n    return UsageListInstance.get(sid);\n  }\n\n  UsageListInstance._version = version; // Path Solution\n\n  UsageListInstance._solution = {\n    simSid: simSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a usage\n   *\n   * @function get\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns {Twilio.Preview.Wireless.SimContext.UsageContext}\n   */\n\n  /* jshint ignore:end */\n\n  UsageListInstance.get = function get() {\n    return new UsageContext(this._version, this._solution.simSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Wireless.SimContext.UsageList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UsageListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UsageListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UsageListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsagePage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsagePage\n *\n * @param {Wireless} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UsageSolution} solution - Path solution\n *\n * @returns UsagePage\n */\n\n/* jshint ignore:end */\n\n\nUsagePage = function UsagePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UsagePage.prototype, Page.prototype);\n\nUsagePage.prototype.constructor = UsagePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UsageInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @param {UsagePayload} payload - Payload response from the API\n *\n * @returns UsageInstance\n */\n\n/* jshint ignore:end */\n\nUsagePage.prototype.getInstance = function getInstance(payload) {\n  return new UsageInstance(this._version, payload, this._solution.simSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsagePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsagePage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsagePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageInstance\n *\n * @property {string} simSid - The sim_sid\n * @property {string} simUniqueName - The sim_unique_name\n * @property {string} accountSid - The account_sid\n * @property {object} period - The period\n * @property {object} commandsUsage - The commands_usage\n * @property {object} commandsCosts - The commands_costs\n * @property {object} dataUsage - The data_usage\n * @property {object} dataCosts - The data_costs\n * @property {string} url - The url\n *\n * @param {Wireless} version - Version of the resource\n * @param {UsagePayload} payload - The instance payload\n * @param {sid} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\n\nUsageInstance = function UsageInstance(version, payload, simSid) {\n  this._version = version; // Marshaled Properties\n\n  this.simSid = payload.sim_sid; // jshint ignore:line\n\n  this.simUniqueName = payload.sim_unique_name; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.period = payload.period; // jshint ignore:line\n\n  this.commandsUsage = payload.commands_usage; // jshint ignore:line\n\n  this.commandsCosts = payload.commands_costs; // jshint ignore:line\n\n  this.dataUsage = payload.data_usage; // jshint ignore:line\n\n  this.dataCosts = payload.data_costs; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    simSid: simSid\n  };\n};\n\nObject.defineProperty(UsageInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new UsageContext(this._version, this._solution.simSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n\n/* jshint ignore:end */\n\nUsageInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsageInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUsageInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UsageContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Wireless.SimContext.UsageContext\n *\n * @param {Wireless} version - Version of the resource\n * @param {sid_like} simSid - The sim_sid\n */\n\n/* jshint ignore:end */\n\n\nUsageContext = function UsageContext(version, simSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    simSid: simSid\n  };\n  this._uri = \"/Sims/\".concat(simSid, \"/Usage\");\n};\n/* jshint ignore:start */\n\n/**\n * fetch a UsageInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.end] - The end\n * @param {string} [opts.start] - The start\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UsageInstance\n */\n\n/* jshint ignore:end */\n\n\nUsageContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'End': _.get(opts, 'end'),\n    'Start': _.get(opts, 'start')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UsageInstance(this._version, payload, this._solution.simSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Wireless.SimContext.UsageContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUsageContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUsageContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UsageList: UsageList,\n  UsagePage: UsagePage,\n  UsageInstance: UsageInstance,\n  UsageContext: UsageContext\n};","map":null,"metadata":{},"sourceType":"script"}