{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\src\\\\providers\\\\LanguageProvider.js\";\n\nimport React, { useState } from 'react';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport English from '../views/en';\nimport Polish from '../views/pl';\nimport Germany from '../views/de';\n\nvar LanguageProvider = function LanguageProvider(props) {\n  var _useState = useState('en'),\n      _useState2 = _slicedToArray(_useState, 2),\n      locale = _useState2[0],\n      setLocale = _useState2[1];\n\n  var _useState3 = useState(English),\n      _useState4 = _slicedToArray(_useState3, 2),\n      language = _useState4[0],\n      setLanguage = _useState4[1];\n\n  function changeLanguage(language) {\n    setLocale(language);\n\n    switch (language) {\n      case 'en':\n        setLanguage(English);\n        break;\n\n      case 'pl':\n        setLanguage(Polish);\n        break;\n\n      default:\n        setLanguage(Germany);\n    }\n  }\n\n  var handleChange = function handleChange(e) {\n    changeLanguage(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    messages: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange,\n    defaultValue: locale,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Polski\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"English\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" \", props.children));\n};\n\nexport default LanguageProvider;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react1/src/providers/LanguageProvider.js"],"names":["React","useState","IntlProvider","FormattedMessage","English","Polish","Germany","LanguageProvider","props","locale","setLocale","language","setLanguage","changeLanguage","handleChange","e","target","value","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,EAAsBC,gBAAtB,QAA6C,YAA7C;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,kBAEJP,QAAQ,CAAC,IAAD,CAFJ;AAAA;AAAA,MAEzBQ,MAFyB;AAAA,MAEjBC,SAFiB;;AAAA,mBAGAT,QAAQ,CAACG,OAAD,CAHR;AAAA;AAAA,MAGzBO,QAHyB;AAAA,MAGfC,WAHe;;AAKhC,WAASC,cAAT,CAAwBF,QAAxB,EAAkC;AAC9BD,IAAAA,SAAS,CAACC,QAAD,CAAT;;AACA,YAAQA,QAAR;AACI,WAAK,IAAL;AACIC,QAAAA,WAAW,CAACR,OAAD,CAAX;AACA;;AACJ,WAAK,IAAL;AACIQ,QAAAA,WAAW,CAACP,MAAD,CAAX;AACA;;AACJ;AACIO,QAAAA,WAAW,CAACN,OAAD,CAAX;AARR;AAUH;;AAED,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACtBF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFD;;AAIA,sBACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAER,MAAtB;AAA8B,IAAA,QAAQ,EAAEE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,QAAQ,EAAEG,YAAlB;AAAgC,IAAA,YAAY,EAAEL,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOD,KAAK,CAACU,QAAb,CARJ,CADJ;AAYH,CAnCD;;AAqCA,eAAeX,gBAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {IntlProvider, FormattedMessage} from 'react-intl'\r\n\r\nimport English from '../views/en'\r\nimport Polish from '../views/pl'\r\nimport Germany from '../views/de'\r\n\r\nconst LanguageProvider = (props) => {\r\n\r\n    const [locale, setLocale] = useState('en')\r\n    const [language, setLanguage] = useState(English)\r\n\r\n    function changeLanguage(language) {\r\n        setLocale(language);\r\n        switch (language) {\r\n            case('en'):\r\n                setLanguage(English)\r\n                break;\r\n            case('pl'):\r\n                setLanguage(Polish)\r\n                break;\r\n            default:\r\n                setLanguage(Germany)\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        changeLanguage(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <IntlProvider locale={locale} messages={language}>\r\n            <select onChange={handleChange} defaultValue={locale}>\r\n                <option value=\"pl\">Polski</option>\r\n                <option value=\"en\">English</option>\r\n            </select>\r\n\r\n            {/*<button onClick={() => changeLanguage('en')}> English</button>*/}\r\n            {/*<button onClick={() => changeLanguage('pl')}> Polski</button>*/}\r\n            <div> {props.children}</div>\r\n        </IntlProvider>\r\n    )\r\n}\r\n\r\nexport default LanguageProvider"]},"metadata":{},"sourceType":"module"}