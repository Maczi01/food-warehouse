{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  // Represents a map of nodes accessed by a string key\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = function () {\n    var XMLNamedNodeMap = /*#__PURE__*/function () {\n      \"use strict\";\n\n      // Initializes a new instance of `XMLNamedNodeMap`\n      // This is just a wrapper around an ordinary\n      // JS object.\n      // `nodes` the object containing nodes.\n      function XMLNamedNodeMap(nodes) {\n        _classCallCheck(this, XMLNamedNodeMap);\n\n        this.nodes = nodes;\n      } // Creates and returns a deep clone of `this`\n\n\n      _createClass(XMLNamedNodeMap, [{\n        key: \"clone\",\n        value: function clone() {\n          // this class should not be cloned since it wraps\n          // around a given object. The calling function should check\n          // whether the wrapped object is null and supply a new object\n          // (from the clone).\n          return this.nodes = null;\n        } // DOM Level 1\n\n      }, {\n        key: \"getNamedItem\",\n        value: function getNamedItem(name) {\n          return this.nodes[name];\n        }\n      }, {\n        key: \"setNamedItem\",\n        value: function setNamedItem(node) {\n          var oldNode;\n          oldNode = this.nodes[node.nodeName];\n          this.nodes[node.nodeName] = node;\n          return oldNode || null;\n        }\n      }, {\n        key: \"removeNamedItem\",\n        value: function removeNamedItem(name) {\n          var oldNode;\n          oldNode = this.nodes[name];\n          delete this.nodes[name];\n          return oldNode || null;\n        }\n      }, {\n        key: \"item\",\n        value: function item(index) {\n          return this.nodes[Object.keys(this.nodes)[index]] || null;\n        } // DOM level 2 functions to be implemented later\n\n      }, {\n        key: \"getNamedItemNS\",\n        value: function getNamedItemNS(namespaceURI, localName) {\n          throw new Error(\"This DOM method is not implemented.\");\n        }\n      }, {\n        key: \"setNamedItemNS\",\n        value: function setNamedItemNS(node) {\n          throw new Error(\"This DOM method is not implemented.\");\n        }\n      }, {\n        key: \"removeNamedItemNS\",\n        value: function removeNamedItemNS(namespaceURI, localName) {\n          throw new Error(\"This DOM method is not implemented.\");\n        }\n      }]);\n\n      return XMLNamedNodeMap;\n    }();\n\n    ; // DOM level 1\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function get() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n    return XMLNamedNodeMap;\n  }.call(this);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}