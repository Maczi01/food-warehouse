{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SubscribeRulesList;\nvar SubscribeRulesPage;\nvar SubscribeRulesInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the SubscribeRulesList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesList\n *\n * @param {Twilio.Video.V1} version - Version of the resource\n * @param {string} roomSid - The SID of the Room resource for the Subscribe Rules\n * @param {string} participantSid -\n *          The SID of the Participant resource for the Subscribe Rules\n */\n\n/* jshint ignore:end */\n\nSubscribeRulesList = function SubscribeRulesList(version, roomSid, participantSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function subscribeRules\n   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesContext}\n   */\n\n  /* jshint ignore:end */\n  function SubscribeRulesListInstance(sid) {\n    return SubscribeRulesListInstance.get(sid);\n  }\n\n  SubscribeRulesListInstance._version = version; // Path Solution\n\n  SubscribeRulesListInstance._solution = {\n    roomSid: roomSid,\n    participantSid: participantSid\n  };\n  SubscribeRulesListInstance._uri = \"/Rooms/\".concat(roomSid, \"/Participants/\").concat(participantSid, \"/SubscribeRules\");\n  /* jshint ignore:start */\n\n  /**\n   * fetch a SubscribeRulesInstance\n   *\n   * @function fetch\n   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesList#\n   *\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SubscribeRulesInstance\n   */\n\n  /* jshint ignore:end */\n\n  SubscribeRulesListInstance.fetch = function fetch(callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version.fetch({\n      uri: this._uri,\n      method: 'GET'\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SubscribeRulesInstance(this._version, payload, this._solution.roomSid, this._solution.participantSid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * update a SubscribeRulesInstance\n   *\n   * @function update\n   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {object} [opts.rules] - A JSON-encoded array of subscribe rules\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SubscribeRulesInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  SubscribeRulesListInstance.update = function update(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Rules': serialize.object(_.get(opts, 'rules'))\n    });\n\n    var promise = this._version.update({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SubscribeRulesInstance(this._version, payload, this._solution.roomSid, this._solution.participantSid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SubscribeRulesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SubscribeRulesListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SubscribeRulesListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SubscribeRulesPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SubscribeRulesSolution} solution - Path solution\n *\n * @returns SubscribeRulesPage\n */\n\n/* jshint ignore:end */\n\n\nSubscribeRulesPage = function SubscribeRulesPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SubscribeRulesPage.prototype, Page.prototype);\n\nSubscribeRulesPage.prototype.constructor = SubscribeRulesPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SubscribeRulesInstance\n *\n * @function getInstance\n * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesPage#\n *\n * @param {SubscribeRulesPayload} payload - Payload response from the API\n *\n * @returns SubscribeRulesInstance\n */\n\n/* jshint ignore:end */\n\nSubscribeRulesPage.prototype.getInstance = function getInstance(payload) {\n  return new SubscribeRulesInstance(this._version, payload, this._solution.roomSid, this._solution.participantSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSubscribeRulesPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSubscribeRulesPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SubscribeRulesContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesInstance\n *\n * @property {string} participantSid -\n *          The SID of the Participant resource for the Subscribe Rules\n * @property {string} roomSid -\n *          The SID of the Room resource for the Subscribe Rules\n * @property {string} rules -\n *          A collection of Subscribe Rules that describe how to include or exclude matching tracks\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n *\n * @param {V1} version - Version of the resource\n * @param {SubscribeRulesPayload} payload - The instance payload\n * @param {sid} roomSid - The SID of the Room resource for the Subscribe Rules\n * @param {sid} participantSid -\n *          The SID of the Participant resource for the Subscribe Rules\n */\n\n/* jshint ignore:end */\n\n\nSubscribeRulesInstance = function SubscribeRulesInstance(version, payload, roomSid, participantSid) {\n  this._version = version; // Marshaled Properties\n\n  this.participantSid = payload.participant_sid; // jshint ignore:line\n\n  this.roomSid = payload.room_sid; // jshint ignore:line\n\n  this.rules = payload.rules; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    roomSid: roomSid,\n    participantSid: participantSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RoomContext.ParticipantContext.SubscribeRulesInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSubscribeRulesInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSubscribeRulesInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SubscribeRulesList: SubscribeRulesList,\n  SubscribeRulesPage: SubscribeRulesPage,\n  SubscribeRulesInstance: SubscribeRulesInstance\n};","map":null,"metadata":{},"sourceType":"script"}