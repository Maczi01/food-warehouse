{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar PhoneNumberList;\nvar PhoneNumberPage;\nvar PhoneNumberInstance;\nvar PhoneNumberContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberList\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberList\n *\n * @param {Twilio.Lookups.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nPhoneNumberList = function PhoneNumberList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function phoneNumbers\n   * @memberof Twilio.Lookups.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n  function PhoneNumberListInstance(sid) {\n    return PhoneNumberListInstance.get(sid);\n  }\n\n  PhoneNumberListInstance._version = version; // Path Solution\n\n  PhoneNumberListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a phone_number\n   *\n   * @function get\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @param {string} phoneNumber - The phone number to fetch in E.164 format\n   *\n   * @returns {Twilio.Lookups.V1.PhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n\n  PhoneNumberListInstance.get = function get(phoneNumber) {\n    return new PhoneNumberContext(this._version, phoneNumber);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Lookups.V1.PhoneNumberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  PhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PhoneNumberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberPage\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PhoneNumberSolution} solution - Path solution\n *\n * @returns PhoneNumberPage\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage = function PhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PhoneNumberPage.prototype, Page.prototype);\n\nPhoneNumberPage.prototype.constructor = PhoneNumberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of PhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @param {PhoneNumberPayload} payload - Payload response from the API\n *\n * @returns PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new PhoneNumberInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberInstance\n *\n * @property {object} callerName - The name of the phone number's owner\n * @property {string} countryCode - The ISO country code for the phone number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} nationalFormat - The phone number, in national format\n * @property {object} carrier - The telecom company that provides the phone number\n * @property {object} addOns -\n *          A JSON string with the results of the Add-ons you specified\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {PhoneNumberPayload} payload - The instance payload\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance = function PhoneNumberInstance(version, payload, phoneNumber) {\n  this._version = version; // Marshaled Properties\n\n  this.callerName = payload.caller_name; // jshint ignore:line\n\n  this.countryCode = payload.country_code; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.nationalFormat = payload.national_format; // jshint ignore:line\n\n  this.carrier = payload.carrier; // jshint ignore:line\n\n  this.addOns = payload.add_ons; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    phoneNumber: phoneNumber || this.phoneNumber\n  };\n};\n\nObject.defineProperty(PhoneNumberInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new PhoneNumberContext(this._version, this._solution.phoneNumber);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nPhoneNumberInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PhoneNumberContext\n *\n * @constructor Twilio.Lookups.V1.PhoneNumberContext\n *\n * @param {V1} version - Version of the resource\n * @param {phone_number} phoneNumber - The phone number to fetch in E.164 format\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext = function PhoneNumberContext(version, phoneNumber) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    phoneNumber: phoneNumber\n  };\n  this._uri = \"/PhoneNumbers/\".concat(phoneNumber);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a PhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.countryCode] - The ISO country code of the phone number\n * @param {string|list} [opts.type] - The type of information to return\n * @param {string|list} [opts.addOns] -\n *          The unique_name of an Add-on you would like to invoke\n * @param {object} [opts.addOnsData] -\n *          Data specific to the add-on you would like to invoke\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'CountryCode': _.get(opts, 'countryCode'),\n    'Type': serialize.map(_.get(opts, 'type'), function (e) {\n      return e;\n    }),\n    'AddOns': serialize.map(_.get(opts, 'addOns'), function (e) {\n      return e;\n    })\n  });\n\n  _.extend(data, serialize.prefixedCollapsibleMap(opts.addOnsData, 'AddOns'));\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PhoneNumberInstance(this._version, payload, this._solution.phoneNumber));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Lookups.V1.PhoneNumberContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PhoneNumberList: PhoneNumberList,\n  PhoneNumberPage: PhoneNumberPage,\n  PhoneNumberInstance: PhoneNumberInstance,\n  PhoneNumberContext: PhoneNumberContext\n};","map":null,"metadata":{},"sourceType":"script"}