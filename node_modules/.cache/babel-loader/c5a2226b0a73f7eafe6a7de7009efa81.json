{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _slice = _interopRequireDefault(require(\"../run/slice\"));\n\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\n\nvar _subtract = _interopRequireDefault(require(\"../run/subtract\"));\n\nvar _mapIndexed = _interopRequireDefault(require(\"../utils/mapIndexed\"));\n/**\n * Slice array of runs\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Array}  runs\n * @return {Array} sliced runs\n */\n\n\nvar sliceRuns = function sliceRuns(start, end) {\n  return function (runs) {\n    var firstRun = function firstRun(a) {\n      return (0, _slice[\"default\"])(start - a.start, end - a.start, a);\n    };\n\n    var lastRun = function lastRun(a) {\n      return (0, _slice[\"default\"])(0, end - a.start, a);\n    };\n\n    var intermediateRun = R.identity;\n    var res = (0, _mapIndexed[\"default\"])([R.o((0, _subtract[\"default\"])(start), firstRun), // Slice first run\n    R.o((0, _subtract[\"default\"])(start), intermediateRun), // Slice intermediate runs\n    R.o((0, _subtract[\"default\"])(start), lastRun) // Slice last run\n    ])(runs);\n    return res;\n  };\n};\n/**\n * Slice attributed string between two indices\n *\n * @param  {number}  start offset\n * @param  {number}  end offset\n * @param  {Object}  attributedString\n * @return {Object} attributedString\n */\n\n\nvar slice = function slice(start, end, string) {\n  return R.ifElse(R.pathEq(['string', 'length'], 0), R.identity, R.evolve({\n    string: R.slice(start, end),\n    runs: R.compose(sliceRuns(start, end), (0, _filter[\"default\"])(start, end))\n  }))(string);\n};\n\nvar _default = R.curryN(3, slice);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}