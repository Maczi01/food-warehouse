{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDNotation, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents a NOTATION entry in the DTD\n\n  module.exports = XMLDTDNotation = function () {\n    var XMLDTDNotation = /*#__PURE__*/function (_XMLNode) {\n      \"use strict\";\n\n      _inherits(XMLDTDNotation, _XMLNode);\n\n      // Initializes a new instance of `XMLDTDNotation`\n      // `parent` the parent `XMLDocType` element\n      // `name` the name of the notation\n      // `value` an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      function XMLDTDNotation(parent, name, value) {\n        var _this;\n\n        _classCallCheck(this, XMLDTDNotation);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLDTDNotation).call(this, parent));\n\n        if (name == null) {\n          throw new Error(\"Missing DTD notation name. \" + _this.debugInfo(name));\n        }\n\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public or system identifiers are required for an external entity. \" + _this.debugInfo(name));\n        }\n\n        _this.name = _this.stringify.name(name);\n        _this.type = NodeType.NotationDeclaration;\n\n        if (value.pubID != null) {\n          _this.pubID = _this.stringify.dtdPubID(value.pubID);\n        }\n\n        if (value.sysID != null) {\n          _this.sysID = _this.stringify.dtdSysID(value.sysID);\n        }\n\n        return _this;\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n\n      _createClass(XMLDTDNotation, [{\n        key: \"toString\",\n        value: function toString(options) {\n          return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n        }\n      }]);\n\n      return XMLDTDNotation;\n    }(XMLNode);\n\n    ; // DOM level 1\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function get() {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function get() {\n        return this.sysID;\n      }\n    });\n    return XMLDTDNotation;\n  }.call(this);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}