{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkersRealTimeStatisticsList;\nvar WorkersRealTimeStatisticsPage;\nvar WorkersRealTimeStatisticsInstance;\nvar WorkersRealTimeStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsList = function WorkersRealTimeStatisticsList(version, workspaceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function realTimeStatistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkersRealTimeStatisticsListInstance(sid) {\n    return WorkersRealTimeStatisticsListInstance.get(sid);\n  }\n\n  WorkersRealTimeStatisticsListInstance._version = version; // Path Solution\n\n  WorkersRealTimeStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a workers_real_time_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkersRealTimeStatisticsListInstance.get = function get() {\n    return new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkersRealTimeStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkersRealTimeStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkersRealTimeStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkersRealTimeStatisticsSolution} solution - Path solution\n *\n * @returns WorkersRealTimeStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsPage = function WorkersRealTimeStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkersRealTimeStatisticsPage.prototype, Page.prototype);\n\nWorkersRealTimeStatisticsPage.prototype.constructor = WorkersRealTimeStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkersRealTimeStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @param {WorkersRealTimeStatisticsPayload} payload -\n *          Payload response from the API\n *\n * @returns WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkersRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersRealTimeStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} activityStatistics -\n *          The number of current Workers by Activity\n * @property {number} totalWorkers - The total number of Workers\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the Workers\n * @property {string} url - The absolute URL of the Workers statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkersRealTimeStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the Workers\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsInstance = function WorkersRealTimeStatisticsInstance(version, payload, workspaceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.activityStatistics = payload.activity_statistics; // jshint ignore:line\n\n  this.totalWorkers = deserialize.integer(payload.total_workers); // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n};\n\nObject.defineProperty(WorkersRealTimeStatisticsInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new WorkersRealTimeStatisticsContext(this._version, this._solution.workspaceSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkersRealTimeStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkersRealTimeStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkersRealTimeStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext = function WorkersRealTimeStatisticsContext(version, workspaceSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid\n  };\n  this._uri = \"/Workspaces/\".concat(workspaceSid, \"/Workers/RealTimeStatistics\");\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkersRealTimeStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkersRealTimeStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkersRealTimeStatisticsInstance(this._version, payload, this._solution.workspaceSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkersRealTimeStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkersRealTimeStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkersRealTimeStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkersRealTimeStatisticsList: WorkersRealTimeStatisticsList,\n  WorkersRealTimeStatisticsPage: WorkersRealTimeStatisticsPage,\n  WorkersRealTimeStatisticsInstance: WorkersRealTimeStatisticsInstance,\n  WorkersRealTimeStatisticsContext: WorkersRealTimeStatisticsContext\n};","map":null,"metadata":{},"sourceType":"script"}