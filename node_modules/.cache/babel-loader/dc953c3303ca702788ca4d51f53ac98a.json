{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar PaymentList;\nvar PaymentPage;\nvar PaymentInstance;\nvar PaymentContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {string} callSid - The SID of the Call the resource is associated with.\n */\n\n/* jshint ignore:end */\n\nPaymentList = function PaymentList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function payments\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n\n  /* jshint ignore:end */\n  function PaymentListInstance(sid) {\n    return PaymentListInstance.get(sid);\n  }\n\n  PaymentListInstance._version = version; // Path Solution\n\n  PaymentListInstance._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  PaymentListInstance._uri = \"/Accounts/\".concat(accountSid, \"/Calls/\").concat(callSid, \"/Payments.json\");\n  /* jshint ignore:start */\n\n  /**\n   * create a PaymentInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.idempotencyKey -\n   *          A unique token for each payment session that should be provided to maintain idempotency of the session.\n   * @param {string} opts.statusCallback -\n   *          The URL we should call to send status of payment session.\n   * @param {payment.bank_account_type} [opts.bankAccountType] -\n   *          If Payment source is ACH, type of bank account.\n   * @param {number} [opts.chargeAmount] -\n   *          If this field is present and greater than `0.0` payment source will be charged.\n   * @param {string} [opts.currency] - Currency `charge_amount` is in.\n   * @param {string} [opts.description] - Decription of the charge.\n   * @param {string} [opts.input] -\n   *          Kind of medium customer would enter payment source information in.\n   * @param {number} [opts.minPostalCodeLength] -\n   *          If postal code is expected, minimum length of the postal code.\n   * @param {object} [opts.parameter] -\n   *          Additonal data to be sent over to payment provider.\n   * @param {string} [opts.paymentConnector] -\n   *          Payment connector that you would like Twilio to use for processing payments.\n   * @param {payment.payment_method} [opts.paymentMethod] - Payment source type.\n   * @param {boolean} [opts.postalCode] -\n   *          Whether to expect postal code during payment source data gathering.\n   * @param {boolean} [opts.securityCode] -\n   *          Whether to expect security code during payment source data gathering.\n   * @param {number} [opts.timeout] -\n   *          The number of seconds that we should allow customer to enter payment information\n   * @param {payment.token_type} [opts.tokenType] -\n   *          If tokenization of payment source is desired, this represents type of token.\n   * @param {string} [opts.validCardTypes] -\n   *          List of card types accepted with each card types separated by space.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed PaymentInstance\n   */\n\n  /* jshint ignore:end */\n\n  PaymentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.idempotencyKey)) {\n      throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n    }\n\n    if (_.isUndefined(opts.statusCallback)) {\n      throw new Error('Required parameter \"opts.statusCallback\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'BankAccountType': _.get(opts, 'bankAccountType'),\n      'ChargeAmount': _.get(opts, 'chargeAmount'),\n      'Currency': _.get(opts, 'currency'),\n      'Description': _.get(opts, 'description'),\n      'Input': _.get(opts, 'input'),\n      'MinPostalCodeLength': _.get(opts, 'minPostalCodeLength'),\n      'Parameter': serialize.object(_.get(opts, 'parameter')),\n      'PaymentConnector': _.get(opts, 'paymentConnector'),\n      'PaymentMethod': _.get(opts, 'paymentMethod'),\n      'PostalCode': serialize.bool(_.get(opts, 'postalCode')),\n      'SecurityCode': serialize.bool(_.get(opts, 'securityCode')),\n      'Timeout': _.get(opts, 'timeout'),\n      'TokenType': _.get(opts, 'tokenType'),\n      'ValidCardTypes': _.get(opts, 'validCardTypes')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a payment\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @param {string} sid - The SID of Payments session\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.PaymentContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  PaymentListInstance.get = function get(sid) {\n    return new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  PaymentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  PaymentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return PaymentListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {PaymentSolution} solution - Path solution\n *\n * @returns PaymentPage\n */\n\n/* jshint ignore:end */\n\n\nPaymentPage = function PaymentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(PaymentPage.prototype, Page.prototype);\n\nPaymentPage.prototype.constructor = PaymentPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of PaymentInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @param {PaymentPayload} payload - Payload response from the API\n *\n * @returns PaymentInstance\n */\n\n/* jshint ignore:end */\n\nPaymentPage.prototype.getInstance = function getInstance(payload) {\n  return new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPaymentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance\n *\n * @property {string} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @property {string} callSid -\n *          The SID of the Call the resource is associated with.\n * @property {string} sid - The SID of the Payments resource.\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {PaymentPayload} payload - The instance payload\n * @param {sid} accountSid -\n *          The SID of the Account that created the Payments resource.\n * @param {sid} callSid - The SID of the Call the resource is associated with.\n * @param {sid} sid - The SID of Payments session\n */\n\n/* jshint ignore:end */\n\n\nPaymentInstance = function PaymentInstance(version, payload, accountSid, callSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(PaymentInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new PaymentContext(this._version, this._solution.accountSid, this._solution.callSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token for each payment session that should be provided to maintain idempotency of the session.\n * @param {string} opts.statusCallback -\n *          The URL we should call to send status of payment session.\n * @param {payment.capture} [opts.capture] -\n *          Specific payment source information to expect.\n * @param {payment.status} [opts.status] -\n *          Instruction to complete or cancel the transaction.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n\n/* jshint ignore:end */\n\nPaymentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nPaymentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the PaymentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.PaymentContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The SID of the Account that will update the resource\n * @param {sid} callSid - The SID of the call that will create the resource.\n * @param {sid} sid - The SID of Payments session\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext = function PaymentContext(version, accountSid, callSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid,\n    sid: sid\n  };\n  this._uri = \"/Accounts/\".concat(accountSid, \"/Calls/\").concat(callSid, \"/Payments/\").concat(sid, \".json\");\n};\n/* jshint ignore:start */\n\n/**\n * update a PaymentInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.idempotencyKey -\n *          A unique token for each payment session that should be provided to maintain idempotency of the session.\n * @param {string} opts.statusCallback -\n *          The URL we should call to send status of payment session.\n * @param {payment.capture} [opts.capture] -\n *          Specific payment source information to expect.\n * @param {payment.status} [opts.status] -\n *          Instruction to complete or cancel the transaction.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed PaymentInstance\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts.idempotencyKey)) {\n    throw new Error('Required parameter \"opts.idempotencyKey\" missing.');\n  }\n\n  if (_.isUndefined(opts.statusCallback)) {\n    throw new Error('Required parameter \"opts.statusCallback\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'IdempotencyKey': _.get(opts, 'idempotencyKey'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'Capture': _.get(opts, 'capture'),\n    'Status': _.get(opts, 'status')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new PaymentInstance(this._version, payload, this._solution.accountSid, this._solution.callSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.PaymentContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nPaymentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nPaymentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  PaymentList: PaymentList,\n  PaymentPage: PaymentPage,\n  PaymentInstance: PaymentInstance,\n  PaymentContext: PaymentContext\n};","map":null,"metadata":{},"sourceType":"script"}