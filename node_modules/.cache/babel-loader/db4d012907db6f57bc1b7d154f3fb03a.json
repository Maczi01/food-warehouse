{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar VerificationCheckList;\nvar VerificationCheckPage;\nvar VerificationCheckInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the VerificationCheckList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.VerificationCheckList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\nVerificationCheckList = function VerificationCheckList(version, serviceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function verificationChecks\n   * @memberof Twilio.Verify.V2.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.VerificationCheckContext}\n   */\n\n  /* jshint ignore:end */\n  function VerificationCheckListInstance(sid) {\n    return VerificationCheckListInstance.get(sid);\n  }\n\n  VerificationCheckListInstance._version = version; // Path Solution\n\n  VerificationCheckListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  VerificationCheckListInstance._uri = \"/Services/\".concat(serviceSid, \"/VerificationCheck\");\n  /* jshint ignore:start */\n\n  /**\n   * create a VerificationCheckInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.VerificationCheckList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.code - The verification string\n   * @param {string} [opts.to] - The phone number or email to verify\n   * @param {string} [opts.verificationSid] -\n   *          A SID that uniquely identifies the Verification Check\n   * @param {string} [opts.amount] -\n   *          The amount of the associated PSD2 compliant transaction.\n   * @param {string} [opts.payee] -\n   *          The payee of the associated PSD2 compliant transaction\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed VerificationCheckInstance\n   */\n\n  /* jshint ignore:end */\n\n  VerificationCheckListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.code)) {\n      throw new Error('Required parameter \"opts.code\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Code': _.get(opts, 'code'),\n      'To': _.get(opts, 'to'),\n      'VerificationSid': _.get(opts, 'verificationSid'),\n      'Amount': _.get(opts, 'amount'),\n      'Payee': _.get(opts, 'payee')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new VerificationCheckInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.VerificationCheckList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  VerificationCheckListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  VerificationCheckListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return VerificationCheckListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the VerificationCheckPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.VerificationCheckPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {VerificationCheckSolution} solution - Path solution\n *\n * @returns VerificationCheckPage\n */\n\n/* jshint ignore:end */\n\n\nVerificationCheckPage = function VerificationCheckPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(VerificationCheckPage.prototype, Page.prototype);\n\nVerificationCheckPage.prototype.constructor = VerificationCheckPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of VerificationCheckInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.VerificationCheckPage#\n *\n * @param {VerificationCheckPayload} payload - Payload response from the API\n *\n * @returns VerificationCheckInstance\n */\n\n/* jshint ignore:end */\n\nVerificationCheckPage.prototype.getInstance = function getInstance(payload) {\n  return new VerificationCheckInstance(this._version, payload, this._solution.serviceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.VerificationCheckPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nVerificationCheckPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nVerificationCheckPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the VerificationCheckContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.VerificationCheckInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} to - The phone number or email being verified\n * @property {verification_check.channel} channel - The verification method to use\n * @property {string} status - The status of the verification resource\n * @property {boolean} valid - Whether the verification was successful\n * @property {string} amount -\n *          The amount of the associated PSD2 compliant transaction.\n * @property {string} payee -\n *          The payee of the associated PSD2 compliant transaction\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the Verification Check resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Verification Check resource was last updated\n *\n * @param {V2} version - Version of the resource\n * @param {VerificationCheckPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\n\nVerificationCheckInstance = function VerificationCheckInstance(version, payload, serviceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.to = payload.to; // jshint ignore:line\n\n  this.channel = payload.channel; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.valid = payload.valid; // jshint ignore:line\n\n  this.amount = payload.amount; // jshint ignore:line\n\n  this.payee = payload.payee; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.VerificationCheckInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nVerificationCheckInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nVerificationCheckInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  VerificationCheckList: VerificationCheckList,\n  VerificationCheckPage: VerificationCheckPage,\n  VerificationCheckInstance: VerificationCheckInstance\n};","map":null,"metadata":{},"sourceType":"script"}