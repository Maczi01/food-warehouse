{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar HostedNumberOrderList;\nvar HostedNumberOrderPage;\nvar HostedNumberOrderInstance;\nvar HostedNumberOrderContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderList = function HostedNumberOrderList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function hostedNumberOrders\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n\n  /* jshint ignore:end */\n  function HostedNumberOrderListInstance(sid) {\n    return HostedNumberOrderListInstance.get(sid);\n  }\n\n  HostedNumberOrderListInstance._version = version; // Path Solution\n\n  HostedNumberOrderListInstance._solution = {};\n  HostedNumberOrderListInstance._uri = \"/HostedNumberOrders\";\n  /* jshint ignore:start */\n\n  /**\n   * Streams HostedNumberOrderInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  HostedNumberOrderListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists HostedNumberOrderInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {hosted_number_order.status} [opts.status] -\n   *          The Status of this HostedNumberOrder.\n   * @param {string} [opts.phoneNumber] - An E164 formatted phone number.\n   * @param {string} [opts.incomingPhoneNumberSid] - IncomingPhoneNumber sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'IncomingPhoneNumberSid': _.get(opts, 'incomingPhoneNumberSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of HostedNumberOrderInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a HostedNumberOrderInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.phoneNumber - An E164 formatted phone number.\n   * @param {boolean} opts.smsCapability - Specify SMS capability to host.\n   * @param {string} [opts.accountSid] - Account Sid.\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description of this resource.\n   * @param {string} [opts.uniqueName] -\n   *          A unique, developer assigned name of this HostedNumberOrder.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {string} [opts.smsUrl] - SMS URL.\n   * @param {string} [opts.smsMethod] - SMS Method.\n   * @param {string} [opts.smsFallbackUrl] - SMS Fallback URL.\n   * @param {string} [opts.smsFallbackMethod] - SMS Fallback Method.\n   * @param {string} [opts.statusCallbackUrl] - Status Callback URL.\n   * @param {string} [opts.statusCallbackMethod] - Status Callback Method.\n   * @param {string} [opts.smsApplicationSid] - SMS Application Sid.\n   * @param {string} [opts.addressSid] - Address sid.\n   * @param {string} [opts.email] - Email.\n   * @param {hosted_number_order.verification_type} [opts.verificationType] -\n   *          Verification Type.\n   * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.phoneNumber)) {\n      throw new Error('Required parameter \"opts.phoneNumber\" missing.');\n    }\n\n    if (_.isUndefined(opts.smsCapability)) {\n      throw new Error('Required parameter \"opts.smsCapability\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'SmsCapability': serialize.bool(_.get(opts, 'smsCapability')),\n      'AccountSid': _.get(opts, 'accountSid'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n        return e;\n      }),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'VerificationType': _.get(opts, 'verificationType'),\n      'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a hosted_number_order\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @param {string} sid - HostedNumberOrder sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.HostedNumberOrderContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.get = function get(sid) {\n    return new HostedNumberOrderContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  HostedNumberOrderListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  HostedNumberOrderListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return HostedNumberOrderListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {HostedNumberOrderSolution} solution - Path solution\n *\n * @returns HostedNumberOrderPage\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderPage = function HostedNumberOrderPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(HostedNumberOrderPage.prototype, Page.prototype);\n\nHostedNumberOrderPage.prototype.constructor = HostedNumberOrderPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of HostedNumberOrderInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @param {HostedNumberOrderPayload} payload - Payload response from the API\n *\n * @returns HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderPage.prototype.getInstance = function getInstance(payload) {\n  return new HostedNumberOrderInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHostedNumberOrderPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderInstance\n *\n * @property {string} sid - HostedNumberOrder sid.\n * @property {string} accountSid - Account Sid.\n * @property {string} incomingPhoneNumberSid - IncomingPhoneNumber sid.\n * @property {string} addressSid - Address sid.\n * @property {string} signingDocumentSid - LOA document sid.\n * @property {string} phoneNumber - An E164 formatted phone number.\n * @property {PhoneNumberCapabilities} capabilities -\n *          A mapping of phone number capabilities.\n * @property {string} friendlyName - A human readable description of this resource.\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @property {hosted_number_order.status} status -\n *          The Status of this HostedNumberOrder.\n * @property {string} failureReason -\n *          Why a hosted_number_order reached status \"action-required\"\n * @property {Date} dateCreated - The date this HostedNumberOrder was created.\n * @property {Date} dateUpdated - The date this HostedNumberOrder was updated.\n * @property {number} verificationAttempts -\n *          The number of attempts made to verify ownership of the phone number.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {string} url - The URL of this HostedNumberOrder.\n * @property {hosted_number_order.verification_type} verificationType -\n *          The method used for verifying ownership of the number to be hosted.\n * @property {string} verificationDocumentSid - Verification Document Sid.\n * @property {string} extension -\n *          Phone extension to use for ownership verification call.\n * @property {number} callDelay -\n *          Seconds (0-30) to delay ownership verification call by.\n * @property {string} verificationCode -\n *          The digits passed during the ownership verification call.\n * @property {string} verificationCallSids -\n *          List of IDs for ownership verification calls.\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {HostedNumberOrderPayload} payload - The instance payload\n * @param {sid} sid - HostedNumberOrder sid.\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance = function HostedNumberOrderInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.incomingPhoneNumberSid = payload.incoming_phone_number_sid; // jshint ignore:line\n\n  this.addressSid = payload.address_sid; // jshint ignore:line\n\n  this.signingDocumentSid = payload.signing_document_sid; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.capabilities = payload.capabilities; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.failureReason = payload.failure_reason; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.verificationAttempts = deserialize.integer(payload.verification_attempts); // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.verificationType = payload.verification_type; // jshint ignore:line\n\n  this.verificationDocumentSid = payload.verification_document_sid; // jshint ignore:line\n\n  this.extension = payload.extension; // jshint ignore:line\n\n  this.callDelay = deserialize.integer(payload.call_delay); // jshint ignore:line\n\n  this.verificationCode = payload.verification_code; // jshint ignore:line\n\n  this.verificationCallSids = payload.verification_call_sids; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(HostedNumberOrderInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new HostedNumberOrderContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\nHostedNumberOrderInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nHostedNumberOrderInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the HostedNumberOrderContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.HostedNumberOrderContext\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - HostedNumberOrder sid.\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext = function HostedNumberOrderContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = \"/HostedNumberOrders/\".concat(sid);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a HostedNumberOrderInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a HostedNumberOrderInstance\n *\n * @function remove\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a HostedNumberOrderInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {string} [opts.uniqueName] -\n *          A unique, developer assigned name of this HostedNumberOrder.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {hosted_number_order.status} [opts.status] -\n *          The Status of this HostedNumberOrder.\n * @param {string} [opts.verificationCode] - A verification code.\n * @param {hosted_number_order.verification_type} [opts.verificationType] -\n *          Verification Type.\n * @param {string} [opts.verificationDocumentSid] - Verification Document Sid\n * @param {string} [opts.extension] -\n *          Digits to dial after connecting the verification call.\n * @param {number} [opts.callDelay] -\n *          The number of seconds, between 0 and 60, to delay before initiating the verification call.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed HostedNumberOrderInstance\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n      return e;\n    }),\n    'Status': _.get(opts, 'status'),\n    'VerificationCode': _.get(opts, 'verificationCode'),\n    'VerificationType': _.get(opts, 'verificationType'),\n    'VerificationDocumentSid': _.get(opts, 'verificationDocumentSid'),\n    'Extension': _.get(opts, 'extension'),\n    'CallDelay': _.get(opts, 'callDelay')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new HostedNumberOrderInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.HostedNumberOrderContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nHostedNumberOrderContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nHostedNumberOrderContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  HostedNumberOrderList: HostedNumberOrderList,\n  HostedNumberOrderPage: HostedNumberOrderPage,\n  HostedNumberOrderInstance: HostedNumberOrderInstance,\n  HostedNumberOrderContext: HostedNumberOrderContext\n};","map":null,"metadata":{},"sourceType":"script"}