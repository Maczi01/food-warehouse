{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar BundleList = require('./regulatoryCompliance/bundle').BundleList;\n\nvar EndUserList = require('./regulatoryCompliance/endUser').EndUserList;\n\nvar EndUserTypeList = require('./regulatoryCompliance/endUserType').EndUserTypeList;\n\nvar RegulationList = require('./regulatoryCompliance/regulation').RegulationList;\n\nvar SupportingDocumentList = require('./regulatoryCompliance/supportingDocument').SupportingDocumentList;\n\nvar SupportingDocumentTypeList = require('./regulatoryCompliance/supportingDocumentType').SupportingDocumentTypeList;\n\nvar RegulatoryComplianceList;\n/* jshint ignore:start */\n\n/**\n * Initialize the RegulatoryComplianceList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nRegulatoryComplianceList = function RegulatoryComplianceList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function regulatoryCompliance\n   * @memberof Twilio.Numbers.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext}\n   */\n\n  /* jshint ignore:end */\n  function RegulatoryComplianceListInstance(sid) {\n    return RegulatoryComplianceListInstance.get(sid);\n  }\n\n  RegulatoryComplianceListInstance._version = version; // Path Solution\n\n  RegulatoryComplianceListInstance._solution = {}; // Components\n\n  RegulatoryComplianceListInstance._bundles = undefined;\n  RegulatoryComplianceListInstance._endUsers = undefined;\n  RegulatoryComplianceListInstance._endUserTypes = undefined;\n  RegulatoryComplianceListInstance._regulations = undefined;\n  RegulatoryComplianceListInstance._supportingDocuments = undefined;\n  RegulatoryComplianceListInstance._supportingDocumentTypes = undefined;\n  Object.defineProperty(RegulatoryComplianceListInstance, 'bundles', {\n    get: function bundles() {\n      if (!this._bundles) {\n        this._bundles = new BundleList(this._version);\n      }\n\n      return this._bundles;\n    }\n  });\n  Object.defineProperty(RegulatoryComplianceListInstance, 'endUsers', {\n    get: function endUsers() {\n      if (!this._endUsers) {\n        this._endUsers = new EndUserList(this._version);\n      }\n\n      return this._endUsers;\n    }\n  });\n  Object.defineProperty(RegulatoryComplianceListInstance, 'endUserTypes', {\n    get: function endUserTypes() {\n      if (!this._endUserTypes) {\n        this._endUserTypes = new EndUserTypeList(this._version);\n      }\n\n      return this._endUserTypes;\n    }\n  });\n  Object.defineProperty(RegulatoryComplianceListInstance, 'regulations', {\n    get: function regulations() {\n      if (!this._regulations) {\n        this._regulations = new RegulationList(this._version);\n      }\n\n      return this._regulations;\n    }\n  });\n  Object.defineProperty(RegulatoryComplianceListInstance, 'supportingDocuments', {\n    get: function supportingDocuments() {\n      if (!this._supportingDocuments) {\n        this._supportingDocuments = new SupportingDocumentList(this._version);\n      }\n\n      return this._supportingDocuments;\n    }\n  });\n  Object.defineProperty(RegulatoryComplianceListInstance, 'supportingDocumentTypes', {\n    get: function supportingDocumentTypes() {\n      if (!this._supportingDocumentTypes) {\n        this._supportingDocumentTypes = new SupportingDocumentTypeList(this._version);\n      }\n\n      return this._supportingDocumentTypes;\n    }\n  });\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n  RegulatoryComplianceListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RegulatoryComplianceListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RegulatoryComplianceListInstance;\n};\n\nmodule.exports = {\n  RegulatoryComplianceList: RegulatoryComplianceList\n};","map":null,"metadata":{},"sourceType":"script"}