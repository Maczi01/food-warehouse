{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"./copy\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\nvar _prepend = _interopRequireDefault(require(\"../indices/prepend\"));\n\nvar _fromCodePoint = _interopRequireDefault(require(\"../glyph/fromCodePoint\"));\n/**\n * Prepend glyph to run\n *\n * @param  {Object}  glyph\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar prependGlyph = function prependGlyph(glyph, run) {\n  var runScale = (0, _scale[\"default\"])(run);\n  var glyphLength = R.length(glyph.codePoints);\n  return R.evolve({\n    end: R.add(glyphLength),\n    glyphIndices: (0, _prepend[\"default\"])(glyphLength),\n    glyphs: R.prepend(glyph),\n    positions: R.prepend({\n      xAdvance: glyph.advanceWidth * runScale\n    })\n  })(run);\n};\n/**\n * Prepend glyph or code point on run\n *\n * @param  {Object | number}  glyph | codePoint\n * @param  {Object}  run\n * @return {Object} run with glyph\n */\n\n\nvar prepend = function prepend(value, run) {\n  if (!value) return (0, _copy[\"default\"])(run);\n  var font = (0, _getFont[\"default\"])(run);\n  var glyph = (0, _isNumber[\"default\"])(value) ? (0, _fromCodePoint[\"default\"])(value, font) : value;\n  return prependGlyph(glyph, run);\n};\n\nvar _default = R.curryN(2, prepend);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}