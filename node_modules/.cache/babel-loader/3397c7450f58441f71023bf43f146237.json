{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar FlowValidateList;\nvar FlowValidatePage;\nvar FlowValidateInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowValidateList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowValidateList\n *\n * @param {Twilio.Studio.V2} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nFlowValidateList = function FlowValidateList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function flowValidate\n   * @memberof Twilio.Studio.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Studio.V2.FlowValidateContext}\n   */\n\n  /* jshint ignore:end */\n  function FlowValidateListInstance(sid) {\n    return FlowValidateListInstance.get(sid);\n  }\n\n  FlowValidateListInstance._version = version; // Path Solution\n\n  FlowValidateListInstance._solution = {};\n  FlowValidateListInstance._uri = \"/Flows/Validate\";\n  /* jshint ignore:start */\n\n  /**\n   * update a FlowValidateInstance\n   *\n   * @function update\n   * @memberof Twilio.Studio.V2.FlowValidateList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName - The friendly_name\n   * @param {flow_validate.status} opts.status - The status\n   * @param {object} opts.definition - The definition\n   * @param {string} [opts.commitMessage] - The commit_message\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FlowValidateInstance\n   */\n\n  /* jshint ignore:end */\n\n  FlowValidateListInstance.update = function update(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.friendlyName)) {\n      throw new Error('Required parameter \"opts.friendlyName\" missing.');\n    }\n\n    if (_.isUndefined(opts.status)) {\n      throw new Error('Required parameter \"opts.status\" missing.');\n    }\n\n    if (_.isUndefined(opts.definition)) {\n      throw new Error('Required parameter \"opts.definition\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Status': _.get(opts, 'status'),\n      'Definition': serialize.object(_.get(opts, 'definition')),\n      'CommitMessage': _.get(opts, 'commitMessage')\n    });\n\n    var promise = this._version.update({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FlowValidateInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Studio.V2.FlowValidateList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FlowValidateListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FlowValidateListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FlowValidateListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowValidatePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowValidatePage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FlowValidateSolution} solution - Path solution\n *\n * @returns FlowValidatePage\n */\n\n/* jshint ignore:end */\n\n\nFlowValidatePage = function FlowValidatePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FlowValidatePage.prototype, Page.prototype);\n\nFlowValidatePage.prototype.constructor = FlowValidatePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FlowValidateInstance\n *\n * @function getInstance\n * @memberof Twilio.Studio.V2.FlowValidatePage#\n *\n * @param {FlowValidatePayload} payload - Payload response from the API\n *\n * @returns FlowValidateInstance\n */\n\n/* jshint ignore:end */\n\nFlowValidatePage.prototype.getInstance = function getInstance(payload) {\n  return new FlowValidateInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowValidatePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowValidatePage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowValidatePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FlowValidateContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Studio.V2.FlowValidateInstance\n *\n * @property {boolean} valid - The valid\n *\n * @param {V2} version - Version of the resource\n * @param {FlowValidatePayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nFlowValidateInstance = function FlowValidateInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.valid = payload.valid; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Studio.V2.FlowValidateInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFlowValidateInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFlowValidateInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FlowValidateList: FlowValidateList,\n  FlowValidatePage: FlowValidatePage,\n  FlowValidateInstance: FlowValidateInstance\n};","map":null,"metadata":{},"sourceType":"script"}