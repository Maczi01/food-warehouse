{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _omit = _interopRequireDefault(require(\"../run/omit\"));\n\nvar _flatten = _interopRequireDefault(require(\"../run/flatten\"));\n\nvar _empty = _interopRequireDefault(require(\"../attributedString/empty\"));\n\nvar omitFont = R.evolve({\n  runs: R.map((0, _omit[\"default\"])('font'))\n});\n/**\n * Performs font substitution and script itemization on attributed string\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} processed attributed string\n */\n\nvar preprocessRuns = function preprocessRuns(engines, options) {\n  return R.ifElse(R.isNil, _empty[\"default\"], R.applySpec({\n    string: R.prop('string'),\n    runs: R.compose(_flatten[\"default\"], R.flatten, R.pluck('runs'), R.juxt([engines.fontSubstitution(options), // font substitution\n    engines.scriptItemizer(options), // script itemization\n    omitFont]))\n  }));\n};\n\nvar _default = preprocessRuns;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}