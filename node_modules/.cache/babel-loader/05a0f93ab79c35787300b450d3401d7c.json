{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _inherits = require(\"C:\\\\Users\\\\Admin\\\\Desktop\\\\react1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData'); // Represents a processing instruction\n\n  module.exports = XMLProcessingInstruction = /*#__PURE__*/function (_XMLCharacterData) {\n    \"use strict\";\n\n    _inherits(XMLProcessingInstruction, _XMLCharacterData);\n\n    // Initializes a new instance of `XMLProcessingInstruction`\n    // `parent` the parent node\n    // `target` instruction target\n    // `value` instruction value\n    function XMLProcessingInstruction(parent, target, value) {\n      var _this;\n\n      _classCallCheck(this, XMLProcessingInstruction);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLProcessingInstruction).call(this, parent));\n\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + _this.debugInfo());\n      }\n\n      _this.type = NodeType.ProcessingInstruction;\n      _this.target = _this.stringify.insTarget(target);\n      _this.name = _this.target;\n\n      if (value) {\n        _this.value = _this.stringify.insValue(value);\n      }\n\n      return _this;\n    } // Creates and returns a deep clone of `this`\n\n\n    _createClass(XMLProcessingInstruction, [{\n      key: \"clone\",\n      value: function clone() {\n        return Object.create(this);\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n    }, {\n      key: \"toString\",\n      value: function toString(options) {\n        return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n      }\n    }, {\n      key: \"isEqualNode\",\n      value: function isEqualNode(node) {\n        if (!_get(_getPrototypeOf(XMLProcessingInstruction.prototype), \"isEqualNode\", this).call(this, node)) {\n          return false;\n        }\n\n        if (node.target !== this.target) {\n          return false;\n        }\n\n        return true;\n      }\n    }]);\n\n    return XMLProcessingInstruction;\n  }(XMLCharacterData);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}