{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar BrandedCallList;\nvar BrandedCallPage;\nvar BrandedCallInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedCallList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedCallList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nBrandedCallList = function BrandedCallList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function brandedCalls\n   * @memberof Twilio.Preview.TrustedComms#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedCallContext}\n   */\n\n  /* jshint ignore:end */\n  function BrandedCallListInstance(sid) {\n    return BrandedCallListInstance.get(sid);\n  }\n\n  BrandedCallListInstance._version = version; // Path Solution\n\n  BrandedCallListInstance._solution = {};\n  BrandedCallListInstance._uri = \"/Business/BrandedCalls\";\n  /* jshint ignore:start */\n\n  /**\n   * create a BrandedCallInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.TrustedComms.BrandedCallList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.from - Twilio number from which to brand the call\n   * @param {string} opts.to - The terminating Phone Number\n   * @param {string} opts.reason - The business reason for this phone call\n   * @param {string} [opts.callSid] - The Call sid this Branded Call should link to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BrandedCallInstance\n   */\n\n  /* jshint ignore:end */\n\n  BrandedCallListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts.from)) {\n      throw new Error('Required parameter \"opts.from\" missing.');\n    }\n\n    if (_.isUndefined(opts.to)) {\n      throw new Error('Required parameter \"opts.to\" missing.');\n    }\n\n    if (_.isUndefined(opts.reason)) {\n      throw new Error('Required parameter \"opts.reason\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'From': _.get(opts, 'from'),\n      'To': _.get(opts, 'to'),\n      'Reason': _.get(opts, 'reason'),\n      'CallSid': _.get(opts, 'callSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BrandedCallInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedCallList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  BrandedCallListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BrandedCallListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BrandedCallListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedCallPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedCallPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BrandedCallSolution} solution - Path solution\n *\n * @returns BrandedCallPage\n */\n\n/* jshint ignore:end */\n\n\nBrandedCallPage = function BrandedCallPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BrandedCallPage.prototype, Page.prototype);\n\nBrandedCallPage.prototype.constructor = BrandedCallPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of BrandedCallInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedCallPage#\n *\n * @param {BrandedCallPayload} payload - Payload response from the API\n *\n * @returns BrandedCallInstance\n */\n\n/* jshint ignore:end */\n\nBrandedCallPage.prototype.getInstance = function getInstance(payload) {\n  return new BrandedCallInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedCallPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBrandedCallPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBrandedCallPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedCallContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedCallInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} bgColor - Background color of the current phone call\n * @property {string} brandSid - Brand Sid.\n * @property {string} brandedChannelSid - Branded Channel Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} callSid - A string that uniquely identifies this phone call.\n * @property {string} caller - Caller name of the current phone call\n * @property {Date} createdAt - The date this current phone call was created\n * @property {string} fontColor - Font color of the current phone call\n * @property {string} from - The originating phone number\n * @property {string} logo - Logo URL of the caller\n * @property {string} phoneNumberSid - Phone Number Sid.\n * @property {string} reason - The business reason for this current phone call\n * @property {string} sid -\n *          A string that uniquely identifies this current branded phone call.\n * @property {string} status - The status of the current phone call\n * @property {string} to - The terminating phone number\n * @property {string} url - The URL of this resource.\n * @property {string} useCase - The use case for the current phone call\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {BrandedCallPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nBrandedCallInstance = function BrandedCallInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.bgColor = payload.bg_color; // jshint ignore:line\n\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n\n  this.brandedChannelSid = payload.branded_channel_sid; // jshint ignore:line\n\n  this.businessSid = payload.business_sid; // jshint ignore:line\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.caller = payload.caller; // jshint ignore:line\n\n  this.createdAt = deserialize.iso8601DateTime(payload.created_at); // jshint ignore:line\n\n  this.fontColor = payload.font_color; // jshint ignore:line\n\n  this.from = payload.from; // jshint ignore:line\n\n  this.logo = payload.logo; // jshint ignore:line\n\n  this.phoneNumberSid = payload.phone_number_sid; // jshint ignore:line\n\n  this.reason = payload.reason; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.to = payload.to; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.useCase = payload.use_case; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedCallInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBrandedCallInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBrandedCallInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BrandedCallList: BrandedCallList,\n  BrandedCallPage: BrandedCallPage,\n  BrandedCallInstance: BrandedCallInstance\n};","map":null,"metadata":{},"sourceType":"script"}