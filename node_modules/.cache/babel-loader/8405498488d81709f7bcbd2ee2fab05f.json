{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar AwsList = require('./credential/aws').AwsList;\n\nvar PublicKeyList = require('./credential/publicKey').PublicKeyList;\n\nvar CredentialList;\n/* jshint ignore:start */\n\n/**\n * Initialize the CredentialList\n *\n * @constructor Twilio.Accounts.V1.CredentialList\n *\n * @param {Twilio.Accounts.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCredentialList = function CredentialList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function credentials\n   * @memberof Twilio.Accounts.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Accounts.V1.CredentialContext}\n   */\n\n  /* jshint ignore:end */\n  function CredentialListInstance(sid) {\n    return CredentialListInstance.get(sid);\n  }\n\n  CredentialListInstance._version = version; // Path Solution\n\n  CredentialListInstance._solution = {}; // Components\n\n  CredentialListInstance._publicKey = undefined;\n  CredentialListInstance._aws = undefined;\n  Object.defineProperty(CredentialListInstance, 'publicKey', {\n    get: function publicKey() {\n      if (!this._publicKey) {\n        this._publicKey = new PublicKeyList(this._version);\n      }\n\n      return this._publicKey;\n    }\n  });\n  Object.defineProperty(CredentialListInstance, 'aws', {\n    get: function aws() {\n      if (!this._aws) {\n        this._aws = new AwsList(this._version);\n      }\n\n      return this._aws;\n    }\n  });\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Accounts.V1.CredentialList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n  CredentialListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CredentialListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CredentialListInstance;\n};\n\nmodule.exports = {\n  CredentialList: CredentialList\n};","map":null,"metadata":{},"sourceType":"script"}