{"ast":null,"code":"'use strict';\n\nvar builder = require('xmlbuilder');\n/* jshint ignore:line */\n\n/* jshint ignore:start */\n\n/**\n * Parent TwiML object\n */\n\n/* jshint ignore:end */\n\n\nfunction TwiML() {\n  this.response = builder.create('Response', {\n    stringify: {\n      attValue: function attValue(value) {\n        if (Array.isArray(value)) {\n          value = value.join(' ');\n        }\n\n        return this.attEscape('' + value || '');\n      }\n    }\n  }).dec('1.0', 'UTF-8');\n}\n/* jshint ignore:start */\n\n/**\n * Because child elements have properties named after their class names, we need\n * to translate that when we want to access that at the parent prototype level.\n * So this will translate something like Say to 'say' and VoiceResponse to\n * 'response'.\n */\n\n/* jshint ignore:end */\n\n\nTwiML.prototype._getXml = function _getPropertyName() {\n  return this[this._propertyName];\n};\n/* jshint ignore:start */\n\n/**\n * Convert to TwiML\n *\n * @returns TwiML XML\n */\n\n/* jshint ignore:end */\n\n\nTwiML.prototype.toString = function toString() {\n  return this._getXml().end();\n};\n/* jshint ignore:start */\n\n/**\n * Add text under the TwiML node\n *\n * @param {string} content\n */\n\n/* jshint ignore:end */\n\n\nTwiML.prototype.addText = function addText(content) {\n  this._getXml().txt(content);\n};\n/* jshint ignore:start */\n\n/**\n * Add an arbitrary tag as a child.\n *\n * @param {string} content\n */\n\n/* jshint ignore:end */\n\n\nTwiML.prototype.addChild = function addChild(tagName, attributes) {\n  return new GenericNode(this._getXml().ele(tagName, attributes));\n};\n/* jshint ignore:start */\n\n/**\n * Generic node\n */\n\n/* jshint ignore:end */\n\n\nfunction GenericNode(node) {\n  // must match variable name for _getPropertyName\n  this.node = node;\n  this._propertyName = 'node';\n} // \"Inherit\" from TwiML\n\n\nGenericNode.prototype = Object.create(TwiML.prototype);\nGenericNode.prototype.constructor = GenericNode;\nmodule.exports = TwiML;","map":null,"metadata":{},"sourceType":"script"}