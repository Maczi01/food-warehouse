{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar FormList;\nvar FormPage;\nvar FormInstance;\nvar FormContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FormList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.FormList\n *\n * @param {Twilio.Authy.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nFormList = function FormList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function forms\n   * @memberof Twilio.Authy.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Authy.V1.FormContext}\n   */\n\n  /* jshint ignore:end */\n  function FormListInstance(sid) {\n    return FormListInstance.get(sid);\n  }\n\n  FormListInstance._version = version; // Path Solution\n\n  FormListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a form\n   *\n   * @function get\n   * @memberof Twilio.Authy.V1.FormList#\n   *\n   * @param {string} formType - The Type of this Form\n   *\n   * @returns {Twilio.Authy.V1.FormContext}\n   */\n\n  /* jshint ignore:end */\n\n  FormListInstance.get = function get(formType) {\n    return new FormContext(this._version, formType);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Authy.V1.FormList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FormListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FormListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FormListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.FormPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FormSolution} solution - Path solution\n *\n * @returns FormPage\n */\n\n/* jshint ignore:end */\n\n\nFormPage = function FormPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FormPage.prototype, Page.prototype);\n\nFormPage.prototype.constructor = FormPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FormInstance\n *\n * @function getInstance\n * @memberof Twilio.Authy.V1.FormPage#\n *\n * @param {FormPayload} payload - Payload response from the API\n *\n * @returns FormInstance\n */\n\n/* jshint ignore:end */\n\nFormPage.prototype.getInstance = function getInstance(payload) {\n  return new FormInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.FormPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFormPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.FormInstance\n *\n * @property {form.form_types} formType - The Type of this Form\n * @property {object} forms -\n *          Object that contains the available forms for this type.\n * @property {object} formMeta -\n *          Additional information for the available forms for this type.\n * @property {string} url - The URL to access the forms for this type.\n *\n * @param {V1} version - Version of the resource\n * @param {FormPayload} payload - The instance payload\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n\n/* jshint ignore:end */\n\n\nFormInstance = function FormInstance(version, payload, formType) {\n  this._version = version; // Marshaled Properties\n\n  this.formType = payload.form_type; // jshint ignore:line\n\n  this.forms = payload.forms; // jshint ignore:line\n\n  this.formMeta = payload.form_meta; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    formType: formType || this.formType\n  };\n};\n\nObject.defineProperty(FormInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new FormContext(this._version, this._solution.formType);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.FormInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n\n/* jshint ignore:end */\n\nFormInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.FormInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFormInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Authy.V1.FormContext\n *\n * @param {V1} version - Version of the resource\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n\n/* jshint ignore:end */\n\n\nFormContext = function FormContext(version, formType) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    formType: formType\n  };\n  this._uri = \"/Forms/\".concat(formType);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Authy.V1.FormContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n\n/* jshint ignore:end */\n\n\nFormContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FormInstance(this._version, payload, this._solution.formType));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Authy.V1.FormContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFormContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FormList: FormList,\n  FormPage: FormPage,\n  FormInstance: FormInstance,\n  FormContext: FormContext\n};","map":null,"metadata":{},"sourceType":"script"}