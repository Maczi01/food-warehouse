{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar StyleSheetList;\nvar StyleSheetPage;\nvar StyleSheetInstance;\nvar StyleSheetContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Autopilot.V1.AssistantContext.StyleSheetList\n *\n * @param {Twilio.Autopilot.V1} version - Version of the resource\n * @param {string} assistantSid -\n *          The SID of the Assistant that is the parent of the resource\n */\n\n/* jshint ignore:end */\n\nStyleSheetList = function StyleSheetList(version, assistantSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function styleSheet\n   * @memberof Twilio.Autopilot.V1.AssistantContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Autopilot.V1.AssistantContext.StyleSheetContext}\n   */\n\n  /* jshint ignore:end */\n  function StyleSheetListInstance(sid) {\n    return StyleSheetListInstance.get(sid);\n  }\n\n  StyleSheetListInstance._version = version; // Path Solution\n\n  StyleSheetListInstance._solution = {\n    assistantSid: assistantSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a style_sheet\n   *\n   * @function get\n   * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetList#\n   *\n   * @returns {Twilio.Autopilot.V1.AssistantContext.StyleSheetContext}\n   */\n\n  /* jshint ignore:end */\n\n  StyleSheetListInstance.get = function get() {\n    return new StyleSheetContext(this._version, this._solution.assistantSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  StyleSheetListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  StyleSheetListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return StyleSheetListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Autopilot.V1.AssistantContext.StyleSheetPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {StyleSheetSolution} solution - Path solution\n *\n * @returns StyleSheetPage\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetPage = function StyleSheetPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(StyleSheetPage.prototype, Page.prototype);\n\nStyleSheetPage.prototype.constructor = StyleSheetPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of StyleSheetInstance\n *\n * @function getInstance\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetPage#\n *\n * @param {StyleSheetPayload} payload - Payload response from the API\n *\n * @returns StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\nStyleSheetPage.prototype.getInstance = function getInstance(payload) {\n  return new StyleSheetInstance(this._version, payload, this._solution.assistantSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetPage.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStyleSheetPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Autopilot.V1.AssistantContext.StyleSheetInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} assistantSid -\n *          The SID of the Assistant that is the parent of the resource\n * @property {string} url - The absolute URL of the StyleSheet resource\n * @property {object} data - The JSON string that describes the style sheet object\n *\n * @param {V1} version - Version of the resource\n * @param {StyleSheetPayload} payload - The instance payload\n * @param {sid} assistantSid -\n *          The SID of the Assistant that is the parent of the resource\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance = function StyleSheetInstance(version, payload, assistantSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    assistantSid: assistantSid\n  };\n};\n\nObject.defineProperty(StyleSheetInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new StyleSheetContext(this._version, this._solution.assistantSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\nStyleSheetInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] -\n *          The JSON string that describes the style sheet object\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetInstance.prototype.toJSON = function toJSON() {\n  var clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nStyleSheetInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the StyleSheetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Autopilot.V1.AssistantContext.StyleSheetContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} assistantSid -\n *          The SID of the Assistant with the StyleSheet resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext = function StyleSheetContext(version, assistantSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    assistantSid: assistantSid\n  };\n  this._uri = \"/Assistants/\".concat(assistantSid, \"/StyleSheet\");\n};\n/* jshint ignore:start */\n\n/**\n * fetch a StyleSheetInstance\n *\n * @function fetch\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a StyleSheetInstance\n *\n * @function update\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.styleSheet] -\n *          The JSON string that describes the style sheet object\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed StyleSheetInstance\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'StyleSheet': serialize.object(_.get(opts, 'styleSheet'))\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new StyleSheetInstance(this._version, payload, this._solution.assistantSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Autopilot.V1.AssistantContext.StyleSheetContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nStyleSheetContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nStyleSheetContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  StyleSheetList: StyleSheetList,\n  StyleSheetPage: StyleSheetPage,\n  StyleSheetInstance: StyleSheetInstance,\n  StyleSheetContext: StyleSheetContext\n};","map":null,"metadata":{},"sourceType":"script"}