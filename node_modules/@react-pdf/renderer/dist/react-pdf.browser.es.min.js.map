{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/constants.js","../src/font/emoji.js","../src/font/hyphenation.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/standard.js","../src/font/index.js","../src/render/save.js","../src/utils/url.js","../src/render/setLink.js","../src/render/restore.js","../src/node/isSvg.js","../src/node/isText.js","../src/node/isPage.js","../src/node/isLink.js","../src/node/isNote.js","../src/node/isImage.js","../src/node/isCanvas.js","../src/render/clipNode.js","../src/render/renderPath.js","../src/render/renderRect.js","../src/render/renderLine.js","../src/render/renderEllipse.js","../src/render/renderCircle.js","../src/render/renderSvgText.js","../src/svg/parsePoints.js","../src/render/renderPolyline.js","../src/render/renderPolygon.js","../src/utils/warning.js","../src/render/renderSvgImage.js","../src/render/applyTransformations.js","../src/node/isPath.js","../src/node/isRect.js","../src/node/isLine.js","../src/node/isTspan.js","../src/node/isGroup.js","../src/node/isCircle.js","../src/node/isTextInstance.js","../src/node/isEllipse.js","../src/node/isPolygon.js","../src/node/isPolyline.js","../src/svg/normalizePath.js","../src/svg/getBoundingBox.js","../src/render/renderSvg.js","../src/render/renderGroup.js","../src/render/renderText.js","../src/render/renderPage.js","../src/render/renderNote.js","../src/utils/matchPercent.js","../src/image/resolveObjectFit.js","../src/render/renderImage.js","../src/canvas/painter.js","../src/render/renderCanvas.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/render/renderRulers.js","../src/render/addMetadata.js","../src/render/renderDebug.js","../src/render/renderBorders.js","../src/render/renderBackground.js","../src/render/index.js","../src/render/setDestination.js","../src/utils/upperFirst.js","../src/text/transformText.js","../src/utils/capitalize.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/svg/layoutText.js","../src/node/isDefs.js","../src/svg/getDefs.js","../src/svg/replaceDefs.js","../src/svg/parseViewbox.js","../src/svg/inheritProps.js","../src/stylesheet/transformColors.js","../src/layout/resolveSvg.js","../src/svg/parseAspectRatio.js","../src/svg/getContainer.js","../src/layout/resolveZIndex.js","../src/layout/resolveRulers.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/utils/firstPass.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/utils/castArray.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/text/splitText.js","../src/node/splitNode.js","../src/node/createInstance.js","../src/node/shouldBreak.js","../src/node/getNodesHeight.js","../src/node/getPadding.js","../src/text/ignorableChars.js","../src/text/getAttributedString.js","../src/text/layoutText.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/getMargin.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/node/setYogaValue.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setAlignItems.js","../src/node/setFlexShrink.js","../src/node/setAlignContent.js","../src/node/setFlexDirection.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/svg/measureSvg.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/node/setPositionType.js","../src/node/setDisplay.js","../src/node/setJustifyContent.js","../src/node/setFlexWrap.js","../src/node/setOverflow.js","../src/node/setAspectRatio.js","../src/layout/resolvePagination.js","../src/text/lineIndexAtHeight.js","../src/text/heightAtLineIndex.js","../src/page/getContentArea.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/layout/resolveLinkSubstitution.js","../src/layout/index.js","../src/utils/asyncCompose.js","../src/renderer.js","../src/utils/propsEqual.js","../src/stylesheet/index.js","../src/index.js","../src/canvas.js","../src/dom.js"],"sourcesContent":["export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\nexport const SVG = 'SVG';\nexport const GROUP = 'G';\nexport const PATH = 'PATH';\nexport const RECT = 'RECT';\nexport const LINE = 'LINE';\nexport const CIRCLE = 'CIRCLE';\nexport const ELLIPSE = 'ELLIPSE';\nexport const POLYGON = 'POLYGON';\nexport const POLYLINE = 'POLYLINE';\nexport const DEFS = 'DEFS';\nexport const TSPAN = 'TSPAN';\nexport const CLIP_PATH = 'CLIP_PATH';\nexport const STOP = 'STOP';\nexport const LINEAR_GRADIENT = 'LINEAR_GRADIENT';\nexport const RADIAL_GRADIENT = 'RADIAL_GRADIENT';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const SVG_INHERITED_PROPS = [\n  'x',\n  'y',\n  'clipPath',\n  'clipRule',\n  'opacity',\n  'fill',\n  'fillOpacity',\n  'fillRule',\n  'stroke',\n  'strokeLinecap',\n  'strokeLinejoin',\n  'strokeOpacity',\n  'strokeWidth',\n  'textAnchor',\n  ...INHERITED_PROPERTIES,\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isNumber = R.is(Number);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst isFlexGrow = key => key === 'flexGrow';\n\nconst isFlexShrink = key => key === 'flexShrink';\n\nconst isFlexBasis = key => key === 'flexBasis';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/Color$/)) {\n      return match[4] || value;\n    } else if (key.match(/Style$/)) {\n      return match[3] || value;\n    } else if (key.match(/Width$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/Top$/)) {\n      return match[0];\n    } else if (key.match(/Right$/)) {\n      return match[1] || match[0];\n    } else if (key.match(/Bottom$/)) {\n      return match[2] || match[0];\n    } else if (key.match(/Left$/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/X$/)) {\n      return match[0] || value;\n    } else if (key.match(/Y$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/X$/)) {\n      result = match[0] || value;\n    } else if (key.match(/Y$/)) {\n      result = match[1] || match[0] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst processFlexGrow = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[0];\n};\n\nconst processFlexShrink = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[1];\n};\n\nconst processFlexBasis = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[2];\n};\n\nconst keepSame = (key, value) => value;\n\nconst matchNumber = R.when(R.is(String), R.test(/^-?\\d*\\.?\\d*$/));\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\nconst transformStyle = R.compose(\n  castFloat,\n  R.cond([\n    [isBorderStyle, processBorders],\n    [isBoxModelStyle, processBoxModel],\n    [isObjectPositionStyle, processObjectPosition],\n    [isTransformOriginStyle, processTransformOrigin],\n    [isFontWeightStyle, processFontWeight],\n    [isFlexGrow, processFlexGrow],\n    [isFlexShrink, processFlexShrink],\n    [isFlexBasis, processFlexBasis],\n    [R.T, keepSame],\n  ]),\n);\n\n/**\n * Transforms already expanded styles shortcuts into appropiate values\n * Ex. marginTopWidth: '2 solid red' -> marginTopWidth: 2\n *\n * @param {Object} styles expanded object\n * @returns {Object} transformed styles\n */\nconst transformStyles = R.mapObjIndexed(R.flip(transformStyle));\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\n\nlet fonts = {};\n\nconst register = data => {\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nconst save = (ctx, node) => {\n  ctx.save();\n  return node;\n};\n\nexport default R.curryN(2, save);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\nconst DEST_REGEXP = /^#.+/;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (isSrcId(value)) return value; // don't modify it if it is an id\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n\nexport const isSrcId = src => src.match(DEST_REGEXP);\n\nexport const setLink = node => {\n  if (!node.src) {\n    return;\n  }\n\n  const { top, left, width, height } = node.getAbsoluteLayout();\n  const instanceMethod = isSrcId(node.src) ? 'goTo' : 'link';\n  const nodeSrc = isSrcId(node.src) ? node.src.slice(1) : node.src;\n\n  node.root.instance[instanceMethod](left, top, width, height, nodeSrc);\n};\n\nexport const setDestination = node => {\n  if (!node.props.id) {\n    return;\n  }\n\n  const { top } = node.getAbsoluteLayout();\n  node.root.instance.addNamedDestination(node.props.id, 'XYZ', null, top, null);\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst DEST_REGEXP = /^#.+/;\n\nconst isSrcId = R.test(DEST_REGEXP);\n\nconst getSource = R.compose(\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nconst setLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n  const instanceMethod = isSrcId(src) ? 'goTo' : 'link';\n  const value = isSrcId(src) ? src.slice(1) : getURL(src);\n\n  if (value) {\n    ctx[instanceMethod](left, top, width, height, value);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, setLink);\n","import * as R from 'ramda';\n\nconst restore = (ctx, node) => {\n  ctx.restore();\n  return node;\n};\n\nexport default R.curryN(2, restore);\n","import * as R from 'ramda';\n\nimport { SVG } from '../constants';\n\n/**\n * Checks if node is svg\n *\n * @param {Object} node\n * @returns {Boolean} is node svg?\n */\nconst isSvg = R.propEq('type', SVG);\n\nexport default isSvg;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { LINK, TEXT } from '../constants';\n\n/**\n * Checks if node has valid source prop\n *\n * @param {Object} node\n * @returns {Boolean} does node have source prop?\n */\nconst hasSource = R.either(\n  R.hasPath(['props', 'src']),\n  R.hasPath(['props', 'href']),\n);\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.either(\n  R.propEq('type', LINK),\n  R.both(R.propEq('type', TEXT), hasSource),\n);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import * as R from 'ramda';\n\nconst renderPath = ctx =>\n  R.tap(node => {\n    const d = R.path(['props', 'd'], node);\n    if (d) ctx.path(node.props.d);\n  });\n\nexport default renderPath;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst renderRect = ctx => node => {\n  const x = getProp(0, 'x', node);\n  const y = getProp(0, 'y', node);\n  const rx = getProp(0, 'rx', node);\n  const ry = getProp(0, 'ry', node);\n  const width = getProp(0, 'width', node);\n  const height = getProp(0, 'height', node);\n\n  if (!width || !height) return node;\n\n  if (rx && ry) {\n    const krx = rx * KAPPA;\n    const kry = ry * KAPPA;\n\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(\n      x - rx + width + krx,\n      y,\n      x + width,\n      y + ry - kry,\n      x + width,\n      y + ry,\n    );\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(\n      x + width,\n      y + height - ry + kry,\n      x - rx + width + krx,\n      y + height,\n      x - rx + width,\n      y + height,\n    );\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(\n      x + rx - krx,\n      y + height,\n      x,\n      y + height - ry + kry,\n      x,\n      y + height - ry,\n    );\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n\n  return node;\n};\n\nexport default renderRect;\n","import * as R from 'ramda';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderLine = ctx => node => {\n  const x1 = getProp('x1', node);\n  const y1 = getProp('y1', node);\n  const x2 = getProp('x2', node);\n  const y2 = getProp('y2', node);\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n\n  return node;\n};\n\nexport default renderLine;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nexport const drawEllipse = (ctx, cx, cy, rx, ry) => {\n  const x = cx - rx;\n  const y = cy - ry;\n  const ox = rx * KAPPA;\n  const oy = ry * KAPPA;\n  const xe = x + rx * 2;\n  const ye = y + ry * 2;\n  const xm = x + rx;\n  const ym = y + ry;\n\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nconst renderEllipse = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const rx = getProp('rx', node);\n    const ry = getProp('ry', node);\n\n    drawEllipse(ctx, cx, cy, rx, ry);\n  });\n\nexport default renderEllipse;\n","import * as R from 'ramda';\n\nimport { drawEllipse } from './renderEllipse';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderCircle = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const r = getProp('r', node);\n\n    drawEllipse(ctx, cx, cy, r, r);\n  });\n\nexport default renderCircle;\n","import * as R from 'ramda';\n\nimport runWidth from '@react-pdf/textkit/run/advanceWidth';\nimport lineWidth from '@react-pdf/textkit/attributedString/advanceWidth';\n\nconst renderRun = (ctx, run) => {\n  const runAdvanceWidth = runWidth(run);\n  const { font, fontSize, color, opacity } = run.attributes;\n\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || (font.COLR && font.CPAL)) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (let i = 0; i < run.glyphs.length; i++) {\n      const position = run.positions[i];\n      const glyph = run.glyphs[i];\n\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n\n      glyph.render(ctx, fontSize);\n\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      ctx._addGlyphs(run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nconst renderSpan = (ctx, line, textAnchor) => {\n  ctx.save();\n\n  const x = R.pathOr(0, ['box', 'x'], line);\n  const y = R.pathOr(0, ['box', 'y'], line);\n  const width = lineWidth(line);\n\n  switch (textAnchor) {\n    case 'middle':\n      ctx.translate(x - width / 2, y);\n      break;\n    case 'end':\n      ctx.translate(x - width, y);\n      break;\n    default:\n      ctx.translate(x, y);\n      break;\n  }\n\n  for (const run of line.runs) {\n    renderRun(ctx, run);\n  }\n\n  ctx.restore();\n};\n\nconst renderSvgText = ctx => node => {\n  for (const span of node.children) {\n    renderSpan(ctx, span.lines[0], span.props.textAnchor);\n  }\n\n  return node;\n};\n\nexport default renderSvgText;\n","import * as R from 'ramda';\n\nconst isOdd = x => x % 2 !== 0;\n\nconst lengthIsOdd = R.o(isOdd, R.prop('length'));\n\nconst parsePoints = R.compose(\n  R.splitEvery(2),\n  R.map(parseFloat),\n  R.when(lengthIsOdd, R.slice(0, -1)),\n  R.split(/\\s+/),\n  R.replace(/(\\d)-(\\d)/g, '$1 -$2'),\n  R.replace(/,/g, ' '),\n  R.trim,\n);\n\nexport default parsePoints;\n","import * as R from 'ramda';\n\nimport parsePoints from '../svg/parsePoints';\n\nexport const drawPolyline = ctx => points => {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(p => ctx.lineTo(p[0], p[1]));\n  }\n};\n\nconst renderPolyline = ctx =>\n  R.tap(\n    R.compose(\n      drawPolyline(ctx),\n      parsePoints,\n      R.pathOr('', ['props', 'points']),\n    ),\n  );\n\nexport default renderPolyline;\n","import * as R from 'ramda';\n\nimport renderPolyline from './renderPolyline';\n\nconst closePath = ctx => R.tap(() => ctx.closePath());\n\nconst renderPolygon = ctx =>\n  R.compose(\n    closePath(ctx),\n    renderPolyline(ctx),\n  );\n\nexport default renderPolygon;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport warning from '../utils/warning';\n\nconst drawImage = ctx => node => {\n  const { x, y } = node.props;\n  const { width, height, opacity } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(node.image.data, x + paddingLeft, y + paddingTop, {\n          width,\n          height,\n        });\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.href}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*(,|\\s)\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*(,|\\s)\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[3]) return matchGeneric[3];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform =\n    (node.style && node.style.transform) ||\n    (node.props && node.props.transform) ||\n    '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport { PATH } from '../constants';\n\n/**\n * Checks if node is path\n *\n * @param {Object} node\n * @returns {Boolean} is node path?\n */\nconst isPath = R.propEq('type', PATH);\n\nexport default isPath;\n","import * as R from 'ramda';\n\nimport { RECT } from '../constants';\n\n/**\n * Checks if node is rect\n *\n * @param {Object} node\n * @returns {Boolean} is node rect?\n */\nconst isRect = R.propEq('type', RECT);\n\nexport default isRect;\n","import * as R from 'ramda';\n\nimport { LINE } from '../constants';\n\n/**\n * Checks if node is line\n *\n * @param {Object} node\n * @returns {Boolean} is node line?\n */\nconst isLine = R.propEq('type', LINE);\n\nexport default isLine;\n","import * as R from 'ramda';\n\nimport { TSPAN } from '../constants';\n\n/**\n * Checks if node is tspan\n *\n * @param {Object} node\n * @returns {Boolean} is node tspan?\n */\nconst isTspan = R.propEq('type', TSPAN);\n\nexport default isTspan;\n","import * as R from 'ramda';\n\nimport { GROUP } from '../constants';\n\n/**\n * Checks if node is group\n *\n * @param {Object} node\n * @returns {Boolean} is node group?\n */\nconst isGroup = R.propEq('type', GROUP);\n\nexport default isGroup;\n","import * as R from 'ramda';\n\nimport { CIRCLE } from '../constants';\n\n/**\n * Checks if node is circle\n *\n * @param {Object} node\n * @returns {Boolean} is node circle?\n */\nconst isCircle = R.propEq('type', CIRCLE);\n\nexport default isCircle;\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import * as R from 'ramda';\n\nimport { ELLIPSE } from '../constants';\n\n/**\n * Checks if node is ellipse\n *\n * @param {Object} node\n * @returns {Boolean} is node ellipse?\n */\nconst isEllipse = R.propEq('type', ELLIPSE);\n\nexport default isEllipse;\n","import * as R from 'ramda';\n\nimport { POLYGON } from '../constants';\n\n/**\n * Checks if node is polygon\n *\n * @param {Object} node\n * @returns {Boolean} is node polygon?\n */\nconst isPolygon = R.propEq('type', POLYGON);\n\nexport default isPolygon;\n","import * as R from 'ramda';\n\nimport { POLYLINE } from '../constants';\n\n/**\n * Checks if node is polyline\n *\n * @param {Object} node\n * @returns {Boolean} is node polyline?\n */\nconst isPolyline = R.propEq('type', POLYLINE);\n\nexport default isPolyline;\n","import arcToCurve from 'svg-arc-to-cubic-bezier';\n\n// From https://github.com/jkroso/normalize-svg-path/blob/master/index.js\n// Copied here because an import issue with 'svg-arc-to-cubic-bezier'\nconst normalizePath = path => {\n  const result = [];\n\n  let prev;\n  let bezierX = 0;\n  let bezierY = 0;\n  let startX = 0;\n  let startY = 0;\n  let quadX = null;\n  let quadY = null;\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0, len = path.length; i < len; i++) {\n    let seg = path[i];\n    const command = seg[0];\n\n    switch (command) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n      case 'A':\n        const curves = arcToCurve({\n          px: x,\n          py: y,\n          cx: seg[6],\n          cy: seg[7],\n          rx: seg[1],\n          ry: seg[2],\n          xAxisRotation: seg[3],\n          largeArcFlag: seg[4],\n          sweepFlag: seg[5],\n        });\n\n        // null-curves\n        if (!curves.length) continue;\n\n        for (let j = 0, c; j < curves.length; j++) {\n          c = curves[j];\n          seg = ['C', c.x1, c.y1, c.x2, c.y2, c.x, c.y];\n          if (j < curves.length - 1) result.push(seg);\n        }\n\n        break;\n      case 'S':\n        // default control point\n        let cx = x;\n        let cy = y;\n        if (prev === 'C' || prev === 'S') {\n          cx += cx - bezierX; // reflect the previous command's control\n          cy += cy - bezierY; // point relative to the current point\n        }\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        break;\n      case 'T':\n        if (prev === 'Q' || prev === 'T') {\n          quadX = x * 2 - quadX; // as with 'S' reflect previous control point\n          quadY = y * 2 - quadY;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n        break;\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n        break;\n      case 'L':\n        seg = line(x, y, seg[1], seg[2]);\n        break;\n      case 'H':\n        seg = line(x, y, seg[1], y);\n        break;\n      case 'V':\n        seg = line(x, y, x, seg[1]);\n        break;\n      case 'Z':\n        seg = line(x, y, startX, startY);\n        break;\n      default:\n        break;\n    }\n\n    // update state\n    prev = command;\n    x = seg[seg.length - 2];\n    y = seg[seg.length - 1];\n    if (seg.length > 4) {\n      bezierX = seg[seg.length - 4];\n      bezierY = seg[seg.length - 3];\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n    result.push(seg);\n  }\n\n  return result;\n};\n\nconst line = (x1, y1, x2, y2) => {\n  return ['C', x1, y1, x2, y2, x2, y2];\n};\n\nconst quadratic = (x1, y1, cx, cy, x2, y2) => {\n  return [\n    'C',\n    x1 / 3 + (2 / 3) * cx,\n    y1 / 3 + (2 / 3) * cy,\n    x2 / 3 + (2 / 3) * cx,\n    y2 / 3 + (2 / 3) * cy,\n    x2,\n    y2,\n  ];\n};\n\nexport default normalizePath;\n","import * as R from 'ramda';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\n\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isPath from '../node/isPath';\nimport isCircle from '../node/isCircle';\nimport isPolygon from '../node/isPolygon';\nimport isEllipse from '../node/isEllipse';\nimport isPolyline from '../node/isPolyline';\nimport normalizePath from '../svg/normalizePath';\nimport parsePoints from './parsePoints';\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nconst getPathBoundingBox = node => {\n  const path = R.compose(\n    normalizePath,\n    absPath,\n    parsePath,\n    R.pathOr('', ['props', 'd']),\n  )(node);\n\n  if (!path.length) return [0, 0, 0, 0];\n\n  const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (let i = 0, l = path.length; i < l; i++) {\n    const points = path[i].slice(1);\n\n    for (let j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nconst getCircleBoundingBox = node => {\n  const r = R.pathOr(0, ['props', 'r'], node);\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nconst getEllipseBoundingBox = node => {\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n  const rx = R.pathOr(0, ['props', 'rx'], node);\n  const ry = R.pathOr(0, ['props', 'ry'], node);\n\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nconst getLineBoundingBox = node => {\n  const x1 = R.pathOr(0, ['props', 'x1'], node);\n  const y1 = R.pathOr(0, ['props', 'y1'], node);\n  const x2 = R.pathOr(0, ['props', 'x2'], node);\n  const y2 = R.pathOr(0, ['props', 'y2'], node);\n\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nconst getRectBoundingBox = node => {\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n  const width = R.pathOr(0, ['props', 'width'], node);\n  const height = R.pathOr(0, ['props', 'height'], node);\n\n  return [x, y, x + width, y + height];\n};\n\nconst max = R.reduce(R.max, -Infinity);\nconst min = R.reduce(R.min, Infinity);\n\nconst getPolylineBoundingBox = node => {\n  const points = R.compose(\n    parsePoints,\n    R.pathOr([], ['props', 'points']),\n  )(node);\n\n  const xValues = R.pluck(0, points);\n  const yValues = R.pluck(1, points);\n\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nconst getBoundingBox = R.cond([\n  [isRect, getRectBoundingBox],\n  [isLine, getLineBoundingBox],\n  [isPath, getPathBoundingBox],\n  [isCircle, getCircleBoundingBox],\n  [isEllipse, getEllipseBoundingBox],\n  [isPolygon, getPolylineBoundingBox],\n  [isPolyline, getPolylineBoundingBox],\n  [R.T, R.always([0, 0, 0, 0])],\n]);\n\nexport default getBoundingBox;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport renderPath from './renderPath';\nimport renderRect from './renderRect';\nimport renderLine from './renderLine';\nimport renderCircle from './renderCircle';\nimport renderSvgText from './renderSvgText';\nimport renderEllipse from './renderEllipse';\nimport renderPolygon from './renderPolygon';\nimport renderPolyline from './renderPolyline';\nimport renderSvgImage from './renderSvgImage';\nimport applyTransformations from './applyTransformations';\nimport isPath from '../node/isPath';\nimport isText from '../node/isText';\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isTspan from '../node/isTspan';\nimport isImage from '../node/isImage';\nimport isGroup from '../node/isGroup';\nimport isCircle from '../node/isCircle';\nimport isTextInstance from '../node/isTextInstance';\nimport renderGroup from './renderGroup';\nimport isEllipse from '../node/isEllipse';\nimport isPolygon from '../node/isPolygon';\nimport isPolyline from '../node/isPolyline';\nimport getBoundingBox from '../svg/getBoundingBox';\nimport { LINEAR_GRADIENT, RADIAL_GRADIENT } from '../constants';\n\nconst warnUnsupportedNode = R.tap(node => {\n  console.warn(`SVG node of type ${node.type} is not currenty supported`);\n});\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst setStrokeWidth = ctx => node => {\n  const lineWidth = getProp(0, 'strokeWidth', node);\n  if (lineWidth) ctx.lineWidth(lineWidth);\n  return node;\n};\n\nconst setStrokeColor = ctx => node => {\n  const strokeColor = getProp(null, 'stroke', node);\n  if (strokeColor) ctx.strokeColor(strokeColor);\n  return node;\n};\n\nconst setOpacity = ctx => node => {\n  const opacity = getProp(null, 'opacity', node);\n  if (opacity) ctx.opacity(opacity);\n  return node;\n};\n\nconst setFillOpacity = ctx => node => {\n  const fillOpacity = getProp(null, 'fillOpacity', node);\n  if (fillOpacity) ctx.fillOpacity(fillOpacity);\n  return node;\n};\n\nconst setStrokeOpacity = ctx => node => {\n  const strokeOpacity = getProp(null, 'strokeOpacity', node);\n  if (strokeOpacity) ctx.strokeOpacity(strokeOpacity);\n  return node;\n};\n\nconst setLineJoin = ctx => node => {\n  const lineJoin = getProp(null, 'strokeLinejoin', node);\n  if (lineJoin) ctx.lineJoin(lineJoin);\n  return node;\n};\n\nconst setLineCap = ctx => node => {\n  const lineCap = getProp(null, 'strokeLinecap', node);\n  if (lineCap) ctx.lineCap(lineCap);\n  return node;\n};\n\nconst setLineDash = ctx => node => {\n  const value = getProp(null, 'strokeDasharray', node);\n\n  if (value) {\n    const dashArray = R.compose(\n      R.map(R.o(parseFloat, R.trim)),\n      R.split(','),\n    )(value);\n\n    ctx.dash(dashArray[0], { space: dashArray[1] });\n  }\n  return node;\n};\n\nconst hasLinearGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  LINEAR_GRADIENT,\n);\n\nconst hasRadialGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  RADIAL_GRADIENT,\n);\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nconst setLinearGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const x1 = R.pathOr(0, ['props', 'x1'], gradient);\n    const y1 = R.pathOr(0, ['props', 'y1'], gradient);\n    const x2 = R.pathOr(1, ['props', 'x2'], gradient);\n    const y2 = R.pathOr(0, ['props', 'y2'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gx1 = m0 * x1 + m4;\n    const gy1 = m3 * y1 + m5;\n    const gx2 = m0 * x2 + m4;\n    const gy2 = m3 * y2 + m5;\n\n    const grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nconst setRadialGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const cx = R.pathOr(0.5, ['props', 'cx'], gradient);\n    const cy = R.pathOr(0.5, ['props', 'cy'], gradient);\n    const fx = R.pathOr(cx, ['props', 'fx'], gradient);\n    const fy = R.pathOr(cy, ['props', 'fy'], gradient);\n    const r = R.pathOr(0.5, ['props', 'r'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gr = r * m0;\n    const gcx = m0 * cx + m4;\n    const gcy = m3 * cy + m5;\n    const gfx = m0 * fx + m4;\n    const gfy = m3 * fy + m5;\n\n    const grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\nconst setFillColor = ctx =>\n  R.tap(node => {\n    const fillColor = getProp(null, 'fill', node);\n    if (fillColor) ctx.fillColor(fillColor);\n  });\n\nconst setFill = ctx =>\n  R.cond([\n    [hasLinearGradientFill, setLinearGradientFill(ctx)],\n    [hasRadialGradientFill, setRadialGradientFill(ctx)],\n    [R.T, setFillColor(ctx)],\n  ]);\n\nconst draw = ctx => node => {\n  const props = R.propOr({}, 'props', node);\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n\n  return node;\n};\n\nconst renderNode = ctx =>\n  R.cond([\n    [isTspan, R.identity],\n    [isTextInstance, R.identity],\n    [isPath, renderPath(ctx)],\n    [isRect, renderRect(ctx)],\n    [isLine, renderLine(ctx)],\n    [isGroup, renderGroup(ctx)],\n    [isText, renderSvgText(ctx)],\n    [isCircle, renderCircle(ctx)],\n    [isImage, renderSvgImage(ctx)],\n    [isEllipse, renderEllipse(ctx)],\n    [isPolygon, renderPolygon(ctx)],\n    [isPolyline, renderPolyline(ctx)],\n    [R.T, warnUnsupportedNode],\n  ]);\n\nconst drawNode = ctx =>\n  R.compose(\n    draw(ctx),\n    renderNode(ctx),\n    applyTransformations(ctx),\n    setOpacity(ctx),\n    setFillOpacity(ctx),\n    setStrokeOpacity(ctx),\n    setFill(ctx),\n    setStrokeColor(ctx),\n    setStrokeWidth(ctx),\n    setLineJoin(ctx),\n    setLineDash(ctx),\n    setLineCap(ctx),\n  );\n\nconst clipPath = ctx => node => {\n  const value = R.path(['props', 'clipPath'], node);\n\n  if (value) {\n    R.compose(\n      () => ctx.clip(),\n      R.forEach(renderNode(ctx)),\n      R.propOr([], 'children'),\n    )(value);\n  }\n\n  return node;\n};\n\nconst drawChildren = ctx => node =>\n  R.compose(\n    R.map(\n      R.compose(\n        restore(ctx),\n        drawChildren(ctx),\n        drawNode(ctx),\n        clipPath(ctx),\n        save(ctx),\n      ),\n    ),\n    R.propOr([], 'children'),\n  )(node);\n\nconst defaultsZero = R.pathOr(0);\n\nconst preserveAspectRatio = ctx => node => {\n  const { width, height } = node.box;\n  const { viewBox, preserveAspectRatio = {} } = node.props;\n  const { meetOrSlice = 'meet', align = 'xMidYMid' } = preserveAspectRatio;\n\n  if (viewBox == null || width == null || height == null) return node;\n\n  const x = viewBox ? viewBox.minX : 0;\n  const y = viewBox ? viewBox.minY : 0;\n  const logicalWidth = viewBox ? viewBox.maxX : width;\n  const logicalHeight = viewBox ? viewBox.maxY : height;\n\n  const logicalRatio = logicalWidth / logicalHeight;\n  const physicalRatio = width / height;\n  const scaleX = width / logicalWidth;\n  const scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return node;\n  }\n\n  if (\n    (logicalRatio < physicalRatio && meetOrSlice === 'meet') ||\n    (logicalRatio >= physicalRatio && meetOrSlice === 'slice')\n  ) {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height) / 2,\n          -y,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height),\n          -y,\n        );\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width) / 2,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width),\n        );\n    }\n  }\n\n  return node;\n};\n\nconst moveToOrigin = ctx => node => {\n  const { top, left } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n\n  ctx.translate(left + paddingLeft, top + paddingTop);\n\n  return node;\n};\n\nconst renderSvg = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawChildren(ctx),\n    preserveAspectRatio(ctx),\n    moveToOrigin(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderSvg);\n","import * as R from 'ramda';\n\nconst renderGroup = () => R.identity;\n\nexport default renderGroup;\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\nconst addMetadata = (ctx, doc) => {\n  const getProp = getDocumentProp(doc);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return doc;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx\n      .fillColor(CONTENT_COLOR)\n      .opacity(0.5)\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + paddingTop + borderTopWidth,\n        width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth,\n        height -\n          paddingTop -\n          paddingBottom -\n          borderTopWidth -\n          borderBottomWidth,\n      )\n      .fill();\n  });\n\nconst debugPadding = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n    // Padding top\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + borderTopWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingTop,\n      )\n      .fill();\n\n    // Padding left\n    ctx\n      .rect(\n        left + borderLeftWidth,\n        top + borderTopWidth,\n        paddingLeft,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding right\n    ctx\n      .rect(\n        left + width - paddingRight - borderRightWidth,\n        top + borderTopWidth,\n        paddingRight,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding bottom\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + height - paddingBottom - borderBottomWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingBottom,\n      )\n      .fill();\n  });\n\nconst debugMargin = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n    // Margin left\n    ctx\n      .rect(\n        left - marginLeft,\n        top - marginTop,\n        marginLeft,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin right\n    ctx\n      .rect(\n        left + width,\n        top - marginTop,\n        marginRight,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n  });\n\nconst debugText = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n\n    const roundedWidth = Math.round(width + marginLeft + marginRight);\n    const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n    ctx\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        left - marginLeft,\n        Math.max(top - marginTop - 4, 1),\n      );\n  });\n\nconst debugOrigin = ctx =>\n  R.tap(node => {\n    if (node.origin) {\n      ctx\n        .circle(node.origin.left, node.origin.top, 3)\n        .fill('red')\n        .circle(node.origin.left, node.origin.top, 5)\n        .stroke('red');\n    }\n  });\n\nconst renderDebug = ctx =>\n  R.tap(\n    R.when(\n      shouldDebug,\n      R.compose(\n        restore(ctx),\n        debugOrigin(ctx),\n        debugText(ctx),\n        debugMargin(ctx),\n        debugPadding(ctx),\n        debugContent(ctx),\n        save(ctx),\n      ),\n    ),\n  );\n\nexport default renderDebug;\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport setLink from './setLink';\nimport restore from './restore';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isLink from '../node/isLink';\nimport isNote from '../node/isNote';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport renderSvg from './renderSvg';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport setDestination from './setDestination';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst shouldRenderChildren = v => !isText(v) && !isSvg(v);\n\nconst renderChildren = ctx => node => {\n  save(ctx, node);\n\n  ctx.translate(node.box.left, node.box.top);\n\n  R.compose(\n    R.forEach(renderNode(ctx)),\n    R.pathOr([], ['children']),\n  )(node);\n\n  restore(ctx, node);\n\n  return node;\n};\n\nconst renderNode = ctx => node =>\n  R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    setDestination(ctx),\n    R.when(shouldRenderChildren, renderChildren(ctx)),\n    R.when(R.either(isText, isLink), setLink(ctx)),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [isSvg, renderSvg(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, doc) => {\n  addMetadata(ctx)(doc);\n  renderDocument(ctx)(doc);\n\n  ctx.end();\n  Font.reset(); // TODO: move outside\n\n  return ctx;\n};\n\nexport default render;\n","import * as R from 'ramda';\n\nconst setDestination = ctx =>\n  R.tap(node => {\n    if (node.props.id) {\n      ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n    }\n  });\n\nexport default setDestination;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default R.memoizeWith(R.identity, upperFirst);\n","import capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nexport default transformText;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport transformText from '../text/transformText';\nimport isTextInstance from '../node/isTextInstance';\nimport fontSubstitution from '../text/fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nconst layoutOptions = {\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n};\n\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  const fragments = [];\n\n  const {\n    fill = 'black',\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    opacity,\n  } = instance.props;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    opacity,\n    fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill,\n  };\n\n  instance.children.forEach(child => {\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  return fragments;\n};\n\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nconst AlmostInfinity = 999999999999;\n\nconst layoutTspan = node => {\n  const attributedString = getAttributedString(node);\n\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n\n  const container = { x, y, width: AlmostInfinity, height: AlmostInfinity };\n\n  const lines = R.compose(\n    R.reduce(R.concat, []),\n    engine,\n  )(attributedString, container, layoutOptions);\n\n  return R.assoc('lines', lines, node);\n};\n\nconst layoutText = R.evolve({\n  children: R.map(layoutTspan),\n});\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport { DEFS } from '../constants';\n\n/**\n * Checks if node is svg defs\n *\n * @param {Object} node\n * @returns {Boolean} is node svg defs?\n */\nconst isDefs = R.propEq('type', DEFS);\n\nexport default isDefs;\n","import * as R from 'ramda';\n\nimport isDefs from '../node/isDefs';\n\nconst getChildren = R.propOr([], 'children');\n\nconst getId = R.path(['props', 'id']);\n\nconst getDefs = R.compose(\n  R.map(R.prop(0)),\n  R.groupBy(getId),\n  getChildren,\n  R.defaultTo({}),\n  R.find(isDefs),\n  getChildren,\n);\n\nexport default getDefs;\n","import * as R from 'ramda';\n\nimport getDefs from './getDefs';\nimport isDefs from '../node/isDefs';\n\nconst isNotDefs = R.complement(isDefs);\n\nconst detachDefs = R.evolve({\n  children: R.filter(isNotDefs),\n});\n\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nconst replaceDef = defs =>\n  R.compose(\n    R.when(\n      R.test(URL_REGEX),\n      R.compose(\n        R.prop(R.__, defs),\n        R.prop(1),\n        R.match(URL_REGEX),\n      ),\n    ),\n    R.defaultTo(''),\n  );\n\nconst parseNodeDefs = defs => node =>\n  R.compose(\n    R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs),\n      }),\n    }),\n    R.evolve({ children: R.map(parseNodeDefs(defs)) }),\n  )(node);\n\nconst parseDefs = root => {\n  const defs = getDefs(root);\n  return R.evolve({ children: R.map(parseNodeDefs(defs)) }, root);\n};\n\nconst replaceDefs = R.compose(\n  detachDefs,\n  parseDefs,\n);\n\nexport default replaceDefs;\n","const parseViewbox = value => {\n  if (!value) return null;\n  const values = value.split(/[,\\s]+/).map(parseFloat);\n  if (values.length !== 4) return null;\n  return { minX: values[0], minY: values[1], maxX: values[2], maxY: values[3] };\n};\n\nexport default parseViewbox;\n","import * as R from 'ramda';\n\nimport { SVG_INHERITED_PROPS } from '../constants';\n\nconst getInheritProps = R.compose(\n  R.pick(SVG_INHERITED_PROPS),\n  R.propOr({}, 'props'),\n);\n\nconst inheritProps = node => {\n  const props = getInheritProps(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        inheritProps,\n        R.evolve({\n          props: R.merge(props),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default inheritProps;\n","import * as R from 'ramda';\nimport colorString from 'color-string';\nimport hlsToHex from 'hsl-to-hex';\n\nconst isRgb = R.test(/rgb/g);\nconst isRgba = R.test(/rgba/g);\nconst isHsl = R.test(/hsl/g);\nconst isHsla = R.test(/hsla/g);\n\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseRgb = R.compose(\n  colorString.to.hex,\n  colorString.get.rgb,\n);\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseHsl = R.compose(\n  R.toUpper,\n  R.apply(hlsToHex),\n  R.map(Math.round),\n  colorString.get.hsl,\n);\n\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nexport const transformColor = value =>\n  R.cond([\n    [isRgba, parseRgb],\n    [isRgb, parseRgb],\n    [isHsla, parseHsl],\n    [isHsl, parseHsl],\n    [R.T, R.always(value)],\n  ])(value);\n\n/**\n * Transform rbg and cmyk colors to hexa\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformColors = styles => R.map(transformColor, styles);\n\nexport default transformColors;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\n\nimport layoutText from '../svg/layoutText';\nimport replaceDefs from '../svg/replaceDefs';\nimport getContainer from '../svg/getContainer';\nimport parseViewbox from '../svg/parseViewbox';\nimport inheritProps from '../svg/inheritProps';\nimport matchPercent from '../utils/matchPercent';\nimport isTextInstance from '../node/isTextInstance';\nimport parseAspectRatio from '../svg/parseAspectRatio';\nimport { transformColor } from '../stylesheet/transformColors';\n\nconst STYLE_PROPS = [\n  'width',\n  'height',\n  'color',\n  'stroke',\n  'strokeWidth',\n  'opacity',\n  'fillOpacity',\n  'strokeOpacity',\n  'fill',\n  'fillRule',\n  'clipPath',\n  'offset',\n  'transform',\n  'strokeLinejoin',\n  'strokeLinecap',\n  'strokeDasharray',\n];\n\nconst VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nconst HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\n\nconst transformPercent = container =>\n  R.mapObjIndexed((value, key) => {\n    const match = matchPercent(value);\n\n    if (match && VERTICAL_PROPS.includes(key)) {\n      return match.percent * container.height;\n    }\n\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n      return match.percent * container.width;\n    }\n\n    return value;\n  });\n\nconst parsePercent = value => {\n  const match = matchPercent(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nconst parseProps = container =>\n  R.compose(\n    R.evolve({\n      props: R.o(\n        R.evolve({\n          x: parseFloat,\n          x1: parseFloat,\n          x2: parseFloat,\n          y: parseFloat,\n          y1: parseFloat,\n          y2: parseFloat,\n          r: parseFloat,\n          rx: parseFloat,\n          ry: parseFloat,\n          cx: parseFloat,\n          cy: parseFloat,\n          width: parseFloat,\n          height: parseFloat,\n          offset: parsePercent,\n          fill: transformColor,\n          opacity: parsePercent,\n          stroke: transformColor,\n          stopOpacity: parsePercent,\n          stopColor: transformColor,\n        }),\n        transformPercent(container),\n      ),\n    }),\n  );\n\nconst mergeStyles = node => {\n  const style = R.propOr({}, 'style', node);\n  return R.evolve({ props: R.merge(style) }, node);\n};\n\nconst removeNoneValues = R.evolve({\n  props: R.map(R.when(R.equals('none'), R.always(null))),\n});\n\nconst pickStyleProps = node => {\n  const styleProps = R.o(R.pick(STYLE_PROPS), R.propOr({}, 'props'))(node);\n  return R.evolve({ style: R.merge(styleProps) }, node);\n};\n\nconst parseSvgProps = R.evolve({\n  props: R.evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: parseViewbox,\n    preserveAspectRatio: parseAspectRatio,\n  }),\n});\n\nconst wrapBetweenTspan = node => ({\n  type: 'TSPAN',\n  props: {},\n  children: [node],\n});\n\nconst addMissingTspan = R.when(\n  isText,\n  R.evolve({\n    children: R.map(R.when(isTextInstance, wrapBetweenTspan)),\n  }),\n);\n\nconst resolveSvgNode = container =>\n  R.compose(\n    parseProps(container),\n    addMissingTspan,\n    removeNoneValues,\n    mergeStyles,\n  );\n\nconst resolveChildren = container => node =>\n  R.evolve({\n    children: R.map(\n      R.compose(\n        resolveChildren(container),\n        resolveSvgNode(container),\n      ),\n    ),\n  })(node);\n\nconst parseText = node =>\n  R.ifElse(\n    isText,\n    layoutText,\n    R.evolve({\n      children: R.map(parseText),\n    }),\n  )(node);\n\nconst resolveSvgRoot = node => {\n  const container = getContainer(node);\n\n  return R.compose(\n    replaceDefs,\n    parseText,\n    parseSvgProps,\n    pickStyleProps,\n    inheritProps,\n    resolveChildren(container),\n  )(node);\n};\n\nconst resolveSvg = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveSvg) }),\n    R.when(isSvg, resolveSvgRoot),\n  )(node);\n\nexport default resolveSvg;\n","const parseAspectRatio = value => {\n  const match = value\n    .replace(/[\\s\\r\\t\\n]+/gm, ' ')\n    .replace(/^defer\\s/, '')\n    .split(' ');\n\n  const align = match[0] || 'xMidYMid';\n  const meetOrSlice = match[1] || 'meet';\n\n  return { align, meetOrSlice };\n};\n\nexport default parseAspectRatio;\n","import parseViewBox from './parseViewbox';\n\nconst getContainer = node => {\n  const viewbox = parseViewBox(node.props.viewBox);\n\n  if (viewbox) {\n    return { width: viewbox.maxX, height: viewbox.maxY };\n  }\n\n  if (node.props.width && node.props.height) {\n    return {\n      width: parseFloat(node.props.width),\n      height: parseFloat(node.props.height),\n    };\n  }\n\n  return { width: 0, height: 0 };\n};\n\nexport default getContainer;\n","import * as R from 'ramda';\nimport { SVG, DOCUMENT } from '../constants';\n\nconst getZIndex = R.path(['style', 'zIndex']);\n\nconst isType = R.propEq('type');\n\nconst shouldNotSort = R.anyPass([isType(DOCUMENT), isType(SVG)]);\n\nconst sortZIndex = (a, b) => {\n  const za = getZIndex(a);\n  const zb = getZIndex(b);\n\n  if (!za && !zb) return 0;\n  if (!za) return 1;\n  if (!zb) return -1;\n\n  return zb - za;\n};\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveZIndex) }),\n    R.unless(shouldNotSort, R.evolve({ children: R.sort(sortZIndex) })),\n  )(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(adjustPageSize),\n});\n\nexport default resolveRulers;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\n\nimport firstPass from '../utils/firstPass';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  firstPass(\n    R.path(['props', 'src']),\n    R.path(['props', 'source']),\n    R.path(['props', 'href']),\n  ),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\n/**\n * Resolves async src if passed\n *\n * @param {string | Function} src\n * @returns {object} resolved src\n */\nconst resolveSrc = async src =>\n  typeof src === 'function' ? { uri: await src() } : src;\n\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    const source = await resolveSrc(src);\n    node.image = await resolveImage(source, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(R.is(Array));\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\nexport default castArray;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n  flex: {\n    flexGrow: true,\n    flexShrink: true,\n    flexBasis: true,\n  },\n};\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (styleShorthands[key]) {\n      const expandedProps = styleShorthands[key];\n\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\nconst MM_FACTOR = (1 / 25.4) * DPI;\n\nconst CM_FACTOR = (1 / 2.54) * DPI;\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * MM_FACTOR;\n    case 'cm':\n      return scalar.value * CM_FACTOR;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport isLink from '../node/isLink';\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport transformColors from '../stylesheet/transformColors';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\nconst LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline',\n};\n\n/**\n * Filter styles with `none` value\n *\n * @param {Object} style object\n * @returns {Object} style without none values\n */\nconst filterNoneValues = R.reject(R.equals('none'));\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} node\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformColors,\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    filterNoneValues,\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = container => node =>\n  R.o(\n    R.when(isLink, R.evolve({ style: R.merge(LINK_STYLES) })),\n    R.evolve({\n      style: resolveStyles(container),\n      children: R.map(resolveNodeStyles(container)),\n    }),\n  )(node);\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const box = R.prop('box', page);\n  const style = R.prop('style', page);\n  const container = R.isEmpty(box) ? style : box;\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(container)),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(resolvePageStyles),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(resolveNodeOrigin),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = page => {\n  const size = getPageSize(page);\n  return R.evolve({ style: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = R.evolve({\n  children: R.map(\n    R.compose(\n      resolvePageSize,\n      assocIfNil('style', {}),\n    ),\n  ),\n});\n\nexport default resolvePageSizes;\n","import * as R from 'ramda';\n\nimport lineIndexAtHeight from './lineIndexAtHeight';\nimport heightAtLineIndex from './heightAtLineIndex';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getWidows = R.pathOr(2, ['props', 'widows']);\n\nconst getOrphans = R.pathOr(2, ['props', 'orphans']);\n\nconst getLineBreak = (node, height) => {\n  const top = getTop(node);\n  const widows = getWidows(node);\n  const orphans = getOrphans(node);\n  const linesQuantity = node.lines.length;\n  const slicedLine = lineIndexAtHeight(node, height - top);\n\n  if (slicedLine === 0) {\n    return 0;\n  } else if (linesQuantity < orphans) {\n    return linesQuantity;\n  } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  } else if (linesQuantity === orphans + widows) {\n    return orphans;\n  } else if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n\n  return slicedLine;\n};\n\nconst splitText = (node, height) => {\n  const slicedLineIndex = getLineBreak(node, height);\n  const currentHeight = heightAtLineIndex(node, slicedLineIndex);\n  const nextHeight = node.box.height - currentHeight;\n\n  const current = R.evolve(\n    {\n      lines: R.slice(0, slicedLineIndex),\n      style: R.evolve({\n        marginBottom: zero,\n        paddingBottom: zero,\n        borderBottomWidth: zero,\n        borderBottomLeftRadius: zero,\n        borderBottomRightRadius: zero,\n      }),\n      box: {\n        height: R.always(currentHeight),\n        borderBottomWidth: zero,\n      },\n    },\n    node,\n  );\n\n  const next = R.evolve(\n    {\n      lines: R.slice(slicedLineIndex, Infinity),\n      style: R.evolve({\n        marginTop: zero,\n        paddingTop: zero,\n        borderTopWidth: zero,\n        borderTopLeftRadius: zero,\n        borderTopRightRadius: zero,\n      }),\n      box: {\n        top: zero,\n        height: R.always(nextHeight),\n        borderTopWidth: zero,\n      },\n    },\n    node,\n  );\n\n  return [current, next];\n};\n\nexport default splitText;\n","import * as R from 'ramda';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst hasFixedHeight = R.hasPath(['style', 'height']);\n\nconst subtractHeight = value =>\n  R.o(R.subtract(R.__, value), R.path(['box', 'height']));\n\nconst splitNode = (node, height) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n\n  // TODO: We should keep style untouched\n  const current = R.evolve({\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero,\n    }),\n    box: {\n      height: R.always(height - nodeTop),\n      borderBottomWidth: zero,\n    },\n  })(node);\n\n  const nextHeight = R.ifElse(\n    hasFixedHeight,\n    subtractHeight(height - nodeTop),\n    R.always(null),\n  )(node);\n\n  // TODO: We should keep style untouched\n  const next = R.evolve({\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero,\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero,\n    },\n  })(node);\n\n  return [current, next];\n};\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\nimport { TEXT_INSTANCE } from '../constants';\n\nconst isString = R.is(String);\n\nconst isNumber = R.is(Number);\n\nconst isNotString = R.complement(isString);\n\n/**\n * Transforms a react element instance to internal element format\n *\n * @param {Object} React element\n * @returns {Object} parsed react element\n */\nconst createInstance = element => {\n  if (isString(element) || isNumber(element))\n    return { type: TEXT_INSTANCE, value: `${element}` };\n\n  if (isNotString(element.type))\n    return createInstance(element.type(element.props));\n\n  const {\n    type,\n    props: { style = {}, children = [], ...props },\n  } = element;\n\n  const nextChildren = R.compose(\n    R.map(createInstance),\n    castArray,\n  )(children);\n\n  return {\n    type,\n    style,\n    props,\n    box: {},\n    children: nextChildren,\n  };\n};\n\nexport default createInstance;\n","import * as R from 'ramda';\n\nimport isSvg from './isSvg';\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isSvg, isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport transformText from './transformText';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst isNotSvg = R.complement(isSvg);\n\nconst hasLines = node =>\n  node.props.fixed ? !R.isEmpty(node.lines) : !!node.lines;\n\nconst shouldLayoutText = node => isText(node) && !hasLines(node);\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({\n      children: R.map(R.when(isNotSvg, resolveTextLayout)),\n    }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  if (isSvg(node)) return node;\n\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = isNotNil(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [\n          R.T,\n          R.always(attr === 'items' ? Yoga.ALIGN_STRETCH : Yoga.ALIGN_AUTO),\n        ],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import setAlign from './setAlign';\n\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignItems = setAlign('items');\n\nexport default setAlignItems;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getAspectRatio = viewbox => {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node, width, widthMode, height, heightMode) => {\n  const aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY ||\n    widthMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    return { width, height: width / aspectRatio };\n  }\n\n  if (heightMode === Yoga.MEASURE_MODE_EXACTLY) {\n    return { width: height * aspectRatio };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureCanvas);\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setAlignItems from '../node/setAlignItems';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureSvg from '../svg/measureSvg';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setAlignItems(node.style.alignItems),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  if (isSvg(node)) {\n    yogaNode.setMeasureFunc(measureSvg(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isNotSvg = R.complement(isSvg);\nconst isNotTextInstance = R.complement(isTextInstance);\nconst isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = node =>\n  R.evolve({\n    children: R.map(resolvePageDimensions),\n  })(node);\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport splitText from '../text/splitText';\nimport splitNode from '../node/splitNode';\nimport createInstance from '../node/createInstance';\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport { resolvePageDimensions } from './resolveDimensions';\n\n// Prevent splitting elements by low decimal numbers\nconst SAFTY_THRESHOLD = 0.001;\n\nconst assingChildren = R.assoc('children');\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst isFixed = R.pathEq(['props', 'fixed'], true);\n\nconst allFixed = R.all(isFixed);\n\nconst isDynamic = R.hasPath(['props', 'render']);\n\nconst relayoutPage = R.compose(\n  resolveTextLayout,\n  resolveInheritance,\n  resolvePageDimensions,\n);\n\nconst splitView = (node, height) => {\n  const [currentNode, nextNode] = splitNode(node, height);\n  const [currentChilds, nextChildren] = splitChildren(height, node);\n\n  return [\n    assingChildren(currentChilds)(currentNode),\n    assingChildren(nextChildren)(nextNode),\n  ];\n};\n\nconst split = R.ifElse(isText, splitText, splitView);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const futureNodes = nodes.slice(i + 1);\n    const futureFixedNodes = R.filter(isFixed, futureNodes);\n\n    const nodeTop = getTop(child);\n    const nodeHeight = getHeight(child);\n    const isOutside = isElementOutside(height, child);\n    const shouldBreak = shouldNodeBreak(child, futureNodes, height);\n    const shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (shouldBreak) {\n      const next = R.evolve({\n        box: { top: R.subtract(R.__, height) },\n        props: R.evolve({ break: R.always(false) }),\n      })(child);\n\n      currentChildren.push(...futureFixedNodes);\n      nextChildren.push(next, ...futureNodes);\n      break;\n    }\n\n    if (shouldSplit) {\n      const [currentChild, nextChild] = split(child, height);\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitPage = (page, pageNumber) => {\n  const contentArea = getContentArea(page);\n  const height = R.path(['style', 'height'], page);\n  const dynamicPage = resolveDynamicPage({ pageNumber }, page);\n\n  const [currentChilds, nextChilds] = splitNodes(\n    contentArea,\n    dynamicPage.children,\n  );\n\n  const currentPage = R.compose(\n    relayoutPage,\n    assingChildren(currentChilds),\n    R.assocPath(['box', 'height'], height),\n  )(page);\n\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n\n  const nextPage = R.compose(\n    relayoutPage,\n    assingChildren(nextChilds),\n    R.dissocPath(['box', 'height']),\n  )(page);\n\n  return [currentPage, nextPage];\n};\n\nconst shouldResolveDynamicNodes = node =>\n  R.either(\n    isDynamic,\n    R.compose(\n      R.any(shouldResolveDynamicNodes),\n      R.propOr([], 'children'),\n    ),\n  )(node);\n\nconst resolveDynamicPage = (props, page) =>\n  R.when(\n    shouldResolveDynamicNodes,\n    R.compose(\n      relayoutPage,\n      resolveDynamicNodes(props),\n    ),\n  )(page);\n\nconst resolveDynamicNodes = props => node => {\n  const isNodeDynamic = R.always(isDynamic(node));\n\n  const resolveRender = () => {\n    const res = node.props.render(props);\n    return [createInstance(res)];\n  };\n\n  return R.evolve(\n    {\n      children: R.ifElse(\n        isNodeDynamic,\n        resolveRender,\n        R.map(resolveDynamicNodes(props)),\n      ),\n      lines: R.when(isNodeDynamic, R.always([])),\n    },\n    node,\n  );\n};\n\nconst paginate = (page, pageNumber) => {\n  if (!page) return [];\n\n  let splittedPage = splitPage(page, pageNumber);\n\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length);\n\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageIndices = (page, pageNumber, pages) => {\n  const totalPages = pages.length;\n  return resolveDynamicPage({ pageNumber: pageNumber + 1, totalPages }, page);\n};\n\nconst resolvePagination = doc => {\n  let pages = [];\n  let pageNumber = 1;\n\n  for (let i = 0; i < doc.children.length; i++) {\n    const page = doc.children[i];\n    const subpages = paginate(page, pageNumber);\n\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(resolvePageIndices);\n\n  return assingChildren(pages, doc);\n};\n\nexport default resolvePagination;\n","/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {Number} height\n */\nconst lineIndexAtHeight = (node, height) => {\n  let y = 0;\n\n  if (!node.lines) return 0;\n\n  for (let i = 0; i < node.lines.length; i++) {\n    const line = node.lines[i];\n    if (y + line.box.height > height) return i;\n    y += line.box.height;\n  }\n\n  return node.lines.length;\n};\n\nexport default lineIndexAtHeight;\n","/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nconst heightAtLineIndex = (node, index) => {\n  let counter = 0;\n\n  if (!node.lines) return counter;\n\n  for (let i = 0; i < index; i++) {\n    const line = node.lines[i];\n\n    if (!line) break;\n\n    counter += line.box.height;\n  }\n\n  return counter;\n};\n\nexport default heightAtLineIndex;\n","import * as R from 'ramda';\n\nimport getPadding from '../node/getPadding';\n\nconst getContentArea = page => {\n  const { paddingTop } = getPadding(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingTop;\n};\n\nexport default getContentArea;\n","import * as R from 'ramda';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} document root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(removeMargins),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page => {\n  const container = R.pathOr({}, ['props', 'size'], page);\n\n  return R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(container),\n      paddingRight: resolvePageHorizontalPadding(container),\n      paddingTop: resolvePageVerticalPadding(container),\n      paddingBottom: resolvePageVerticalPadding(container),\n    }),\n  })(page);\n};\n\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(resolvePagePaddings),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(resolvePagePercentHeight),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a string child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","// import * as R from 'ramda';\n\nimport resolveSvg from './resolveSvg';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolvePagination from './resolvePagination';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport asyncCompose from '../utils/asyncCompose';\n\n// const startTimer = name => R.tap(() => console.time(name));\n// const endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst layout = asyncCompose(\n  resolveZIndex,\n  resolveRulers,\n  resolveOrigins,\n  resolvePagination,\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveDimensions,\n  resolveSvg,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizes,\n);\n\nexport default layout;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = ({ onChange = () => {} }) => {\n  return ReactFiberReconciler({\n    schedulePassiveEffects,\n\n    cancelPassiveEffects,\n\n    supportsMutation: true,\n\n    isPrimaryRenderer: false,\n\n    warnsIfNotActing: false,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit: onChange,\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n      } else {\n        parentInstance.children.push(child);\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n    },\n  });\n};\n\nexport default createRenderer;\n","/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport Font from './font';\nimport renderPDF from './render';\nimport layoutDocument from './layout';\nimport createRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n  SVG,\n  GROUP,\n  PATH,\n  RECT,\n  LINE,\n  CIRCLE,\n  ELLIPSE,\n  POLYGON,\n  POLYLINE,\n  DEFS,\n  TSPAN,\n  CLIP_PATH,\n  STOP,\n  LINEAR_GRADIENT,\n  RADIAL_GRADIENT,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\nconst Svg = SVG;\nconst G = GROUP;\nconst Path = PATH;\nconst Rect = RECT;\nconst Line = LINE;\nconst Circle = CIRCLE;\nconst Ellipse = ELLIPSE;\nconst Polygon = POLYGON;\nconst Polyline = POLYLINE;\nconst Defs = DEFS;\nconst Tspan = TSPAN;\nconst ClipPath = CLIP_PATH;\nconst Stop = STOP;\nconst LinearGradient = LINEAR_GRADIENT;\nconst RadialGradient = RADIAL_GRADIENT;\n\nconst pdf = ({ initialValue, onChange }) => {\n  const container = { type: 'ROOT', document: null };\n  const PDFRenderer = createRenderer({ onChange });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    console.time('layout');\n    const layout = await layoutDocument(container.document);\n    console.timeEnd('layout');\n\n    return renderPDF(ctx, layout);\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    callOnRender();\n    return render();\n  }\n\n  function toString() {\n    let result = '';\n    const instance = render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        instance.on('end', function() {\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    layout,\n    container,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Defs,\n  Tspan,\n  ClipPath,\n  Polyline,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  StyleSheet,\n  pdf,\n};\n","import React from 'react';\n\nconst svgpath = require('svgpath');\n\nimport { pdf } from './index';\n\nconst queue = require('queue');\n\nconst canvasInstance = canvas => {\n  const instance = {};\n  const images = {};\n  const ctx = canvas.getContext('2d');\n\n  let fillColor = 'white';\n\n  const nil = () => {\n    return instance;\n  };\n\n  instance.info = {};\n  instance.end = nil;\n  instance.font = nil;\n\n  instance.translate = (x, y) => {\n    ctx.translate(x, y);\n    return instance;\n  };\n\n  instance.addPage = ({ size }) => {\n    canvas.width = size[0];\n    canvas.height = size[1];\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  instance.save = () => {\n    ctx.save();\n    return instance;\n  };\n\n  instance.restore = () => {\n    ctx.restore();\n    return instance;\n  };\n\n  instance.moveTo = (x, y) => {\n    ctx.moveTo(x, y);\n    return instance;\n  };\n\n  instance.lineTo = (x, y) => {\n    ctx.lineTo(x, y);\n    return instance;\n  };\n\n  instance.bezierCurveTo = (a, b, c, d, e, f) => {\n    ctx.bezierCurveTo(a, b, c, d, e, f);\n    return instance;\n  };\n\n  instance.closePath = () => {\n    ctx.closePath();\n    return instance;\n  };\n\n  instance.clip = () => {\n    ctx.clip();\n    return instance;\n  };\n\n  instance.fillColor = color => {\n    fillColor = color;\n    return instance;\n  };\n\n  instance.rect = (a, b, c, d) => {\n    ctx.rect(a, b, c, d);\n    return instance;\n  };\n\n  instance.fill = () => {\n    ctx.fillStyle = fillColor;\n    ctx.fill();\n    return instance;\n  };\n\n  instance.fillOpacity = opacity => {\n    ctx.globalAlpha = opacity;\n    return instance;\n  };\n\n  instance._addGlyphs = (glyphs, positions) => {\n    let xAdvance = 0;\n    const fontSize = 20;\n    const unitsPerEm = 2048;\n\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const position = positions[i];\n\n      const path = svgpath(glyph.path.toSVG())\n        .scale(1, -1)\n        .scale(fontSize / unitsPerEm)\n        .translate(xAdvance, 0)\n        .toString();\n\n      xAdvance += position.xAdvance;\n\n      ctx.fillStyle = '#000';\n\n      const p = new Path2D(path);\n\n      ctx.stroke(p);\n      ctx.fill(p);\n    }\n\n    return instance;\n  };\n\n  instance.image = (data, x, y, { width, height }) => {\n    const base64Data = btoa(String.fromCharCode.apply(null, data));\n\n    if (images[base64Data]) {\n      ctx.drawImage(images[base64Data], x, y, width, height);\n    } else {\n      const img = document.createElement('img');\n      img.src = 'data:image/png;base64,' + base64Data;\n\n      images[base64Data] = img;\n\n      img.onload = () => {\n        ctx.drawImage(img, x, y, width, height);\n      };\n    }\n\n    return instance;\n  };\n\n  instance.clear = () => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return instance;\n};\n\nexport class CanvasViewer extends React.Component {\n  ctx = null;\n  instance = pdf();\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { layout: null, error: null };\n\n  componentDidMount() {\n    this.ctx = canvasInstance(this.canvas);\n    this.queueDocumentRender(this.props.children);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.queueDocumentRender(this.props.children);\n    }\n  }\n\n  componentWillUnmount() {\n    this.renderQueue.end();\n  }\n\n  queueDocumentRender(doc) {\n    this.renderQueue.splice(0, this.renderQueue.length, () => {\n      this.instance.updateContainer(doc);\n\n      if (this.instance.isDirty() && !this.state.error) {\n        return this.instance.renderWithContext(this.ctx);\n      }\n\n      return Promise.resolve();\n    });\n  }\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = layout => {\n    this.setState({ layout });\n  };\n\n  render() {\n    return (\n      <canvas\n        height={900}\n        id=\"myCanvas\"\n        ref={ref => (this.canvas = ref)}\n        style={{ border: '1px solid black' }}\n        width={900}\n      />\n    );\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { CanvasViewer } from './canvas';\n\nimport warning from '../src/utils/warning';\n\nconst queue = require('queue');\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  StyleSheet,\n  // createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { blob: null, url: null, loading: true, error: null };\n\n  componentDidMount() {\n    this.instance = pdf({ onChange: this.queueDocumentRender });\n    this.instance.updateContainer(this.props.document);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  componentWillUnmount() {\n    this.renderQueue.end();\n  }\n\n  queueDocumentRender = () => {\n    this.renderQueue.splice(0, this.renderQueue.length, () =>\n      this.state.error ? Promise.resolve() : this.instance.toBlob(),\n    );\n  };\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = blob => {\n    const oldBlobUrl = this.state.url;\n\n    this.setState(\n      { blob, url: URL.createObjectURL(blob), loading: false },\n      () => URL.revokeObjectURL(oldBlobUrl),\n    );\n  };\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  StyleSheet,\n} from './index';\n\nexport { CanvasViewer } from './canvas';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  CanvasViewer,\n  BlobProvider,\n  PDFDownloadLink,\n};\n"],"names":["emojiSource","hyphenationCallback","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","INHERITED_PROPERTIES","SVG_INHERITED_PROPS","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isNumber","Number","processFontWeight","key","value","toLowerCase","matchNumber","String","castFloat","v","parseFloat","transformStyle","match","Error","result","transformOffsetKeywords","split","transformStyles","fetchFont","src","options","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","this","headers","body","method","fontkit","create","Promise","resolve","reject","open","_this","err","Font","family","sources","register","push","descriptor","res","styleSources","filter","s","exactFit","find","leftOffset","rightOffset","length","lt","gt","registerEmojiSource","url","format","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","fonts","getFont","standardFonts","includes","font","i","getRegisteredFonts","getRegisteredFontFamilies","Object","keys","clear","reset","hasOwnProperty","emoji","hyphenation","ctx","node","save","PROTOCOL_REGEXP","DEST_REGEXP","isSrcId","getSource","box","top","left","width","height","instanceMethod","slice","getURL","restore","isSvg","isText","isPage","hasSource","isLink","isNote","isImage","isCanvas","KAPPA","Math","sqrt","style","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","rtr","min","ctr","moveTo","lineTo","bezierCurveTo","rbr","cbr","rbl","cbl","rtl","ctl","closePath","clip","renderPath","path","props","d","getProp","p","renderRect","x","y","rx","ry","krx","kry","renderLine","x1","y1","x2","y2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderRun","run","runAdvanceWidth","runWidth","attributes","fontSize","color","opacity","fillColor","fillOpacity","sbix","COLR","CPAL","translate","ascent","glyphs","position","positions","glyph","xOffset","yOffset","render","xAdvance","yAdvance","_addGlyphs","error","console","log","renderSpan","line","textAnchor","lineWidth","runs","renderSvgText","children","span","lines","lengthIsOdd","parsePoints","renderPolyline","points","forEach","drawPolyline","renderPolygon","__DEV__","process","env","NODE_ENV","warning","condition","undefined","args","argIndex","message","replace","paddingTop","paddingLeft","image","href","drawImage","getTranslateX","transform","matchX","exec","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","origin","test","rotate","PI","getRotation","scale","getMatrix","re","isPath","isRect","isLine","isTspan","isGroup","isCircle","isTextInstance","isEllipse","isPolygon","isPolyline","normalizePath","prev","bezierX","bezierY","startX","startY","quadX","quadY","len","seg","command","curves","arcToCurve","px","py","xAxisRotation","largeArcFlag","sweepFlag","c","j","quadratic","max","Infinity","getPolylineBoundingBox","xValues","yValues","getBoundingBox","absPath","parsePath","bounds","l","warnUnsupportedNode","warn","type","hasLinearGradientFill","hasRadialGradientFill","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","fill","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","renderNode","renderSvgImage","drawNode","stroke","fillAndStroke","fillRule","draw","applyTransformations","setOpacity","setFillOpacity","strokeOpacity","setStrokeOpacity","setFill","strokeColor","setStrokeColor","setStrokeWidth","lineJoin","setLineJoin","dashArray","dash","space","setLineDash","lineCap","setLineCap","drawChildren","clipPath","defaultsZero","viewBox","preserveAspectRatio","meetOrSlice","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","scaleX","scaleY","moveToOrigin","clipNode","initialY","PDFRenderer","addPage","size","margin","note","matchPercent","isPercent","percent","absValue","abs","absPercent","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","cr","ir","pxp","pyp","pxv","pyv","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","objectFit","availableMethods","availableWidth","availableHeight","paint","reduce","acc","prop","painter","hasVerticalRuler","hasHorizontalRuler","range","steps","Array","ceil","_","matchPercentage","renderVerticalRuler","page","hRange","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","rect","map","step","text","round","renderHorizontalRuler","verticalRulerSteps","getHorizontalSteps","doc","target","or","setProp","info","setPDFMetadata","title","author","subject","keywords","creator","producer","shouldDebug","renderDebug","circle","debugOrigin","marginLeft","marginTop","marginRight","marginBottom","roundedWidth","roundedHeight","debugText","debugMargin","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","debugPadding","debugContent","shouldRenderBorders","borderTopColor","borderTopStyle","borderLeftColor","borderLeftStyle","borderRightColor","borderRightStyle","borderBottomColor","borderBottomStyle","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","clipBorderTop","undash","fillBorderTop","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","clipBorderRight","fillBorderRight","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","clipBorderBottom","fillBorderBottom","topLeftCoordX","bottomLeftXCoord","clipBorderLeft","fillBorderLeft","shouldRenderBackground","backgroundColor","drawBackground","shouldRenderChildren","id","addNamedDestination","setDestination","renderChildren","setLink","renderText","renderNote","renderImage","renderCanvas","renderSvg","renderBorders","renderBackground","renderPage","addMetadata","renderRulers","renderDocument","end","upperFirst","transformText","transformation","toUpperCase","StandardFont","PDFFont","str","encode","encoded","stringIndices","g","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","fontSubstitution","string","lastFont","lastIndex","index","defaultFont","start","char","codePointAt","unitsPerEm","engine","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","layoutOptions","shrinkWhitespaceFactor","before","after","getAttributedString","instance","AttributedString","fromFragments","getFragments","fragments","textDecorationColor","textDecorationStyle","textTransform","obj","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","child","layoutText","attributedString","container","isDefs","getChildren","getId","getDefs","isNotDefs","detachDefs","URL_REGEX","replaceDef","defs","parseNodeDefs","replaceDefs","root","parseViewbox","values","getInheritProps","inheritProps","isRgb","isRgba","isHsl","isHsla","parseRgb","colorString","to","hex","get","rgb","parseHsl","hlsToHex","hsl","transformColor","transformColors","styles","STYLE_PROPS","VERTICAL_PROPS","HORIZONTAL_PROPS","transformPercent","parsePercent","mergeStyles","removeNoneValues","pickStyleProps","styleProps","parseSvgProps","addMissingTspan","resolveSvgNode","parseProps","parseText","resolveSvgRoot","viewbox","parseViewBox","getContainer","resolveChildren","getZIndex","isType","shouldNotSort","sortZIndex","a","b","za","zb","adjustPageSize","resolveRulers","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","limit","cache","IMAGE_CACHE","set","shift","fetchRemoteFile","uri","getImage","extension","resolveBufferImage","guessFormat","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","toString","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","isNotNil","firstPass","fns","fn","resolveSrc","fetchImage","source","_context2","emojis","regex","emojiRegex","_removeNoColor","buildEmojiUrl","join","fetchEmojis","promises","promise","emojiUrl","fetchEmojiImage","then","fetchAssets","listToExplore","childNode","isNotArray","castArray","compact","Boolean","isArray","flatten","prototype","styleShorthands","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","transformOriginX","transformOriginY","flex","flexGrow","flexShrink","flexBasis","expandStyles","propsArray","resolvedStyle","expandedProps","propName","call","transformUnit","scalar","unit","parseValue","matchMedia","LINK_STYLES","filterNoneValues","resolveStyles","transformUnits","resolveMediaQueries","flattenStyles","resolveNodeStyles","getTransformStyle","getOrigin","percentX","percentY","resolveOrigin","resolveNodeOrigin","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getNumberSize","throwInvalidError","resolvePageSizes","getPageSize","assocIfNil","zero","getTop","getWidows","getOrphans","hasFixedHeight","splitNode","nodeTop","current","nextHeight","isString","isNotString","createInstance","element","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","shouldBreak","futureElements","minPresenceAhead","presenceAhead","elements","isElementInside","getPresenceAhead","futureHeight","nodes","getNodesHeight","shouldSplit","shouldWrap","getComputedPadding","edge","yogaNode","_yogaNode","getPadding","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragment","charSubset","fromCharCode","subsetRegex","RegExp","emojiSize","chunk","attachment","floor","textAlign","lineHeight","letterSpacing","textIndent","indent","link","characterSpacing","preprocessor","maxLines","truncateMode","hyphenationPenalty","isNotSvg","shouldLayoutText","fixed","hasLines","resolveTextLayout","getInheritStyles","resolveInheritance","inheritStyles","getComputedMargin","getMargin","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlexGrow","setFlexBasis","setAlign","yogaValue","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setAlignItems","setFlexShrink","setAlignContent","isRow","isRowReverse","isColumnReverse","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","widthMode","heightMode","aspectRatio","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","linesWidth","linesHeight","getRatio","isHeightAuto","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","nil","addPoint","w","h","ellipse","polygon","roundedRect","quadraticCurveTo","miterLimit","getWidth","getHeight","measureCtx","YOGA_CONFIG","Config","setPointScaleFactor","setYogaValues","setNodeHeight","minWidth","maxWidth","minHeight","maxHeight","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","display","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setFlexDirection","flexDirection","alignSelf","alignContent","alignItems","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setJustifyContent","justifyContent","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setFlexWrap","flexWrap","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setOverflow","overflow","setAspectRatio","isNotText","isNotNote","isNotTextInstance","isLayoutElement","createYogaNodes","parent","Node","createWithConfig","setMeasureFunc","measureText","measureImage","measureCanvas","measureSvg","insertChild","getChildCount","calculateLayout","persistDimensions","destroyYogaNodes","destroy","resolvePageDimensions","assingChildren","isElementOutside","isFixed","allFixed","isDynamic","relayoutPage","slicedLineIndex","widows","orphans","linesQuantity","slicedLine","lineIndexAtHeight","getLineBreak","currentHeight","counter","heightAtLineIndex","currentNode","nextNode","splitChildren","currentChilds","nextChildren","splitNodes","currentChildren","futureNodes","futureFixedNodes","nodeHeight","isOutside","shouldNodeBreak","next","break","currentChild","nextChild","splitPage","pageNumber","contentArea","getContentArea","dynamicPage","resolveDynamicPage","nextChilds","currentPage","shouldResolveDynamicNodes","resolveDynamicNodes","isNodeDynamic","paginate","splittedPage","pages","nextPage","resolvePageIndices","totalPages","removeMargins","resolvePageMargins","getNodesText","wrapTextInstance","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolveRadius","transformHeight","hasHeight","resolveNodePercentHeight","getPageArea","resolvePercentHeight","hasRenderProp","hasTextInstanceChilds","asyncCompose","resolveZIndex","resolveOrigins","subpages","concat","resolvePercentRadius","resolveSvg","all","resolvePagePaddings","resolveNoteChildren","resolveLinkSubstitution","emptyObject","createRenderer","onChange","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","parentInstance","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","newProps","propsEqual","oldPropsKeys","newPropsKeys","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","document","insertBefore","beforeChild","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","hairlineWidth","absoluteFillObject","View","Text","Link","Page","Note","Image","Canvas","Svg","G","Path","Rect","Line","Circle","Ellipse","Polygon","Polyline","Defs","Tspan","ClipPath","Stop","LinearGradient","RadialGradient","pdf","initialValue","mountNode","createContainer","updateContainer","PDFDocument","autoFirstPage","time","layoutDocument","timeEnd","renderPDF","callOnRender","params","onRender","stream","pipe","BlobStream","on","blob","toBlob","toBuffer","svgpath","require","queue","CanvasViewer","renderQueue","autostart","concurrency","state","onRenderFailed","setState","onRenderSuccessful","componentDidMount","canvas","images","getContext","clearRect","f","fillStyle","globalAlpha","toSVG","Path2D","base64Data","btoa","apply","img","createElement","onload","queueDocumentRender","componentDidUpdate","prevProps","componentWillUnmount","_this2","isDirty","renderWithContext","React","ref","_this3","Component","flatStyles","stylesArray","Document","InternalBlobProvider","oldBlobUrl","URL","createObjectURL","revokeObjectURL","PureComponent","BlobProvider","PDFViewer","className","innerRef","PDFDownloadLink","fileName","download","onClick","window","navigator","msSaveBlob","version","StyleSheet"],"mappings":"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"}