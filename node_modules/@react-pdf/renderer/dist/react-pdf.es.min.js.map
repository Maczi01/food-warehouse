{"version":3,"file":"react-pdf.es.min.js","sources":["../src/constants.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/render/save.js","../src/utils/url.js","../src/render/setLink.js","../src/render/restore.js","../src/node/isSvg.js","../src/node/isText.js","../src/node/isPage.js","../src/node/isLink.js","../src/node/isNote.js","../src/node/isImage.js","../src/node/isCanvas.js","../src/render/clipNode.js","../src/render/renderPath.js","../src/render/renderRect.js","../src/render/renderLine.js","../src/render/renderEllipse.js","../src/render/renderCircle.js","../src/render/renderSvgText.js","../src/svg/parsePoints.js","../src/render/renderPolyline.js","../src/render/renderPolygon.js","../src/utils/warning.js","../src/render/renderSvgImage.js","../src/render/applyTransformations.js","../src/node/isPath.js","../src/node/isRect.js","../src/node/isLine.js","../src/node/isTspan.js","../src/node/isGroup.js","../src/node/isCircle.js","../src/node/isTextInstance.js","../src/render/renderGroup.js","../src/node/isEllipse.js","../src/node/isPolygon.js","../src/node/isPolyline.js","../src/svg/normalizePath.js","../src/svg/getBoundingBox.js","../src/render/renderSvg.js","../src/render/renderText.js","../src/render/renderPage.js","../src/render/renderNote.js","../src/utils/matchPercent.js","../src/image/resolveObjectFit.js","../src/render/renderImage.js","../src/canvas/painter.js","../src/render/renderCanvas.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/render/renderRulers.js","../src/render/addMetadata.js","../src/render/renderDebug.js","../src/render/renderBorders.js","../src/render/renderBackground.js","../src/render/index.js","../src/render/setDestination.js","../src/utils/upperFirst.js","../src/text/transformText.js","../src/utils/capitalize.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/svg/layoutText.js","../src/node/isDefs.js","../src/svg/getDefs.js","../src/svg/replaceDefs.js","../src/svg/parseViewbox.js","../src/svg/inheritProps.js","../src/stylesheet/transformColors.js","../src/layout/resolveSvg.js","../src/svg/parseAspectRatio.js","../src/svg/getContainer.js","../src/layout/resolveZIndex.js","../src/layout/resolveRulers.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/utils/firstPass.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/utils/castArray.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/text/splitText.js","../src/node/splitNode.js","../src/node/createInstance.js","../src/node/shouldBreak.js","../src/node/getNodesHeight.js","../src/node/getPadding.js","../src/text/ignorableChars.js","../src/text/getAttributedString.js","../src/text/layoutText.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/getMargin.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/node/setYogaValue.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setAlignItems.js","../src/node/setFlexShrink.js","../src/node/setAlignContent.js","../src/node/setFlexDirection.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/svg/measureSvg.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/node/setPositionType.js","../src/node/setDisplay.js","../src/node/setJustifyContent.js","../src/node/setFlexWrap.js","../src/node/setOverflow.js","../src/node/setAspectRatio.js","../src/layout/resolvePagination.js","../src/text/lineIndexAtHeight.js","../src/text/heightAtLineIndex.js","../src/page/getContentArea.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/layout/resolveLinkSubstitution.js","../src/layout/index.js","../src/utils/asyncCompose.js","../src/utils/propsEqual.js","../src/renderer.js","../src/stylesheet/index.js","../src/index.js","../src/node.js"],"sourcesContent":["export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\nexport const SVG = 'SVG';\nexport const GROUP = 'G';\nexport const PATH = 'PATH';\nexport const RECT = 'RECT';\nexport const LINE = 'LINE';\nexport const CIRCLE = 'CIRCLE';\nexport const ELLIPSE = 'ELLIPSE';\nexport const POLYGON = 'POLYGON';\nexport const POLYLINE = 'POLYLINE';\nexport const DEFS = 'DEFS';\nexport const TSPAN = 'TSPAN';\nexport const CLIP_PATH = 'CLIP_PATH';\nexport const STOP = 'STOP';\nexport const LINEAR_GRADIENT = 'LINEAR_GRADIENT';\nexport const RADIAL_GRADIENT = 'RADIAL_GRADIENT';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const SVG_INHERITED_PROPS = [\n  'x',\n  'y',\n  'clipPath',\n  'clipRule',\n  'opacity',\n  'fill',\n  'fillOpacity',\n  'fillRule',\n  'stroke',\n  'strokeLinecap',\n  'strokeLinejoin',\n  'strokeOpacity',\n  'strokeWidth',\n  'textAnchor',\n  ...INHERITED_PROPERTIES,\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isNumber = R.is(Number);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst isFlexGrow = key => key === 'flexGrow';\n\nconst isFlexShrink = key => key === 'flexShrink';\n\nconst isFlexBasis = key => key === 'flexBasis';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/Color$/)) {\n      return match[4] || value;\n    } else if (key.match(/Style$/)) {\n      return match[3] || value;\n    } else if (key.match(/Width$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/Top$/)) {\n      return match[0];\n    } else if (key.match(/Right$/)) {\n      return match[1] || match[0];\n    } else if (key.match(/Bottom$/)) {\n      return match[2] || match[0];\n    } else if (key.match(/Left$/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/X$/)) {\n      return match[0] || value;\n    } else if (key.match(/Y$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/X$/)) {\n      result = match[0] || value;\n    } else if (key.match(/Y$/)) {\n      result = match[1] || match[0] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst processFlexGrow = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[0];\n};\n\nconst processFlexShrink = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[1];\n};\n\nconst processFlexBasis = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[2];\n};\n\nconst keepSame = (key, value) => value;\n\nconst matchNumber = R.when(R.is(String), R.test(/^-?\\d*\\.?\\d*$/));\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\nconst transformStyle = R.compose(\n  castFloat,\n  R.cond([\n    [isBorderStyle, processBorders],\n    [isBoxModelStyle, processBoxModel],\n    [isObjectPositionStyle, processObjectPosition],\n    [isTransformOriginStyle, processTransformOrigin],\n    [isFontWeightStyle, processFontWeight],\n    [isFlexGrow, processFlexGrow],\n    [isFlexShrink, processFlexShrink],\n    [isFlexBasis, processFlexBasis],\n    [R.T, keepSame],\n  ]),\n);\n\n/**\n * Transforms already expanded styles shortcuts into appropiate values\n * Ex. marginTopWidth: '2 solid red' -> marginTopWidth: 2\n *\n * @param {Object} styles expanded object\n * @returns {Object} transformed styles\n */\nconst transformStyles = R.mapObjIndexed(R.flip(transformStyle));\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\n\nlet fonts = {};\n\nconst register = data => {\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nconst save = (ctx, node) => {\n  ctx.save();\n  return node;\n};\n\nexport default R.curryN(2, save);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\nconst DEST_REGEXP = /^#.+/;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (isSrcId(value)) return value; // don't modify it if it is an id\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n\nexport const isSrcId = src => src.match(DEST_REGEXP);\n\nexport const setLink = node => {\n  if (!node.src) {\n    return;\n  }\n\n  const { top, left, width, height } = node.getAbsoluteLayout();\n  const instanceMethod = isSrcId(node.src) ? 'goTo' : 'link';\n  const nodeSrc = isSrcId(node.src) ? node.src.slice(1) : node.src;\n\n  node.root.instance[instanceMethod](left, top, width, height, nodeSrc);\n};\n\nexport const setDestination = node => {\n  if (!node.props.id) {\n    return;\n  }\n\n  const { top } = node.getAbsoluteLayout();\n  node.root.instance.addNamedDestination(node.props.id, 'XYZ', null, top, null);\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst DEST_REGEXP = /^#.+/;\n\nconst isSrcId = R.test(DEST_REGEXP);\n\nconst getSource = R.compose(\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nconst setLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n  const instanceMethod = isSrcId(src) ? 'goTo' : 'link';\n  const value = isSrcId(src) ? src.slice(1) : getURL(src);\n\n  if (value) {\n    ctx[instanceMethod](left, top, width, height, value);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, setLink);\n","import * as R from 'ramda';\n\nconst restore = (ctx, node) => {\n  ctx.restore();\n  return node;\n};\n\nexport default R.curryN(2, restore);\n","import * as R from 'ramda';\n\nimport { SVG } from '../constants';\n\n/**\n * Checks if node is svg\n *\n * @param {Object} node\n * @returns {Boolean} is node svg?\n */\nconst isSvg = R.propEq('type', SVG);\n\nexport default isSvg;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { LINK, TEXT } from '../constants';\n\n/**\n * Checks if node has valid source prop\n *\n * @param {Object} node\n * @returns {Boolean} does node have source prop?\n */\nconst hasSource = R.either(\n  R.hasPath(['props', 'src']),\n  R.hasPath(['props', 'href']),\n);\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.either(\n  R.propEq('type', LINK),\n  R.both(R.propEq('type', TEXT), hasSource),\n);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import * as R from 'ramda';\n\nconst renderPath = ctx =>\n  R.tap(node => {\n    const d = R.path(['props', 'd'], node);\n    if (d) ctx.path(node.props.d);\n  });\n\nexport default renderPath;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst renderRect = ctx => node => {\n  const x = getProp(0, 'x', node);\n  const y = getProp(0, 'y', node);\n  const rx = getProp(0, 'rx', node);\n  const ry = getProp(0, 'ry', node);\n  const width = getProp(0, 'width', node);\n  const height = getProp(0, 'height', node);\n\n  if (!width || !height) return node;\n\n  if (rx && ry) {\n    const krx = rx * KAPPA;\n    const kry = ry * KAPPA;\n\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(\n      x - rx + width + krx,\n      y,\n      x + width,\n      y + ry - kry,\n      x + width,\n      y + ry,\n    );\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(\n      x + width,\n      y + height - ry + kry,\n      x - rx + width + krx,\n      y + height,\n      x - rx + width,\n      y + height,\n    );\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(\n      x + rx - krx,\n      y + height,\n      x,\n      y + height - ry + kry,\n      x,\n      y + height - ry,\n    );\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n\n  return node;\n};\n\nexport default renderRect;\n","import * as R from 'ramda';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderLine = ctx => node => {\n  const x1 = getProp('x1', node);\n  const y1 = getProp('y1', node);\n  const x2 = getProp('x2', node);\n  const y2 = getProp('y2', node);\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n\n  return node;\n};\n\nexport default renderLine;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nexport const drawEllipse = (ctx, cx, cy, rx, ry) => {\n  const x = cx - rx;\n  const y = cy - ry;\n  const ox = rx * KAPPA;\n  const oy = ry * KAPPA;\n  const xe = x + rx * 2;\n  const ye = y + ry * 2;\n  const xm = x + rx;\n  const ym = y + ry;\n\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nconst renderEllipse = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const rx = getProp('rx', node);\n    const ry = getProp('ry', node);\n\n    drawEllipse(ctx, cx, cy, rx, ry);\n  });\n\nexport default renderEllipse;\n","import * as R from 'ramda';\n\nimport { drawEllipse } from './renderEllipse';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderCircle = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const r = getProp('r', node);\n\n    drawEllipse(ctx, cx, cy, r, r);\n  });\n\nexport default renderCircle;\n","import * as R from 'ramda';\n\nimport runWidth from '@react-pdf/textkit/run/advanceWidth';\nimport lineWidth from '@react-pdf/textkit/attributedString/advanceWidth';\n\nconst renderRun = (ctx, run) => {\n  const runAdvanceWidth = runWidth(run);\n  const { font, fontSize, color, opacity } = run.attributes;\n\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || (font.COLR && font.CPAL)) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (let i = 0; i < run.glyphs.length; i++) {\n      const position = run.positions[i];\n      const glyph = run.glyphs[i];\n\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n\n      glyph.render(ctx, fontSize);\n\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      ctx._addGlyphs(run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nconst renderSpan = (ctx, line, textAnchor) => {\n  ctx.save();\n\n  const x = R.pathOr(0, ['box', 'x'], line);\n  const y = R.pathOr(0, ['box', 'y'], line);\n  const width = lineWidth(line);\n\n  switch (textAnchor) {\n    case 'middle':\n      ctx.translate(x - width / 2, y);\n      break;\n    case 'end':\n      ctx.translate(x - width, y);\n      break;\n    default:\n      ctx.translate(x, y);\n      break;\n  }\n\n  for (const run of line.runs) {\n    renderRun(ctx, run);\n  }\n\n  ctx.restore();\n};\n\nconst renderSvgText = ctx => node => {\n  for (const span of node.children) {\n    renderSpan(ctx, span.lines[0], span.props.textAnchor);\n  }\n\n  return node;\n};\n\nexport default renderSvgText;\n","import * as R from 'ramda';\n\nconst isOdd = x => x % 2 !== 0;\n\nconst lengthIsOdd = R.o(isOdd, R.prop('length'));\n\nconst parsePoints = R.compose(\n  R.splitEvery(2),\n  R.map(parseFloat),\n  R.when(lengthIsOdd, R.slice(0, -1)),\n  R.split(/\\s+/),\n  R.replace(/(\\d)-(\\d)/g, '$1 -$2'),\n  R.replace(/,/g, ' '),\n  R.trim,\n);\n\nexport default parsePoints;\n","import * as R from 'ramda';\n\nimport parsePoints from '../svg/parsePoints';\n\nexport const drawPolyline = ctx => points => {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(p => ctx.lineTo(p[0], p[1]));\n  }\n};\n\nconst renderPolyline = ctx =>\n  R.tap(\n    R.compose(\n      drawPolyline(ctx),\n      parsePoints,\n      R.pathOr('', ['props', 'points']),\n    ),\n  );\n\nexport default renderPolyline;\n","import * as R from 'ramda';\n\nimport renderPolyline from './renderPolyline';\n\nconst closePath = ctx => R.tap(() => ctx.closePath());\n\nconst renderPolygon = ctx =>\n  R.compose(\n    closePath(ctx),\n    renderPolyline(ctx),\n  );\n\nexport default renderPolygon;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport warning from '../utils/warning';\n\nconst drawImage = ctx => node => {\n  const { x, y } = node.props;\n  const { width, height, opacity } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(node.image.data, x + paddingLeft, y + paddingTop, {\n          width,\n          height,\n        });\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.href}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*(,|\\s)\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*(,|\\s)\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[3]) return matchGeneric[3];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform =\n    (node.style && node.style.transform) ||\n    (node.props && node.props.transform) ||\n    '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport { PATH } from '../constants';\n\n/**\n * Checks if node is path\n *\n * @param {Object} node\n * @returns {Boolean} is node path?\n */\nconst isPath = R.propEq('type', PATH);\n\nexport default isPath;\n","import * as R from 'ramda';\n\nimport { RECT } from '../constants';\n\n/**\n * Checks if node is rect\n *\n * @param {Object} node\n * @returns {Boolean} is node rect?\n */\nconst isRect = R.propEq('type', RECT);\n\nexport default isRect;\n","import * as R from 'ramda';\n\nimport { LINE } from '../constants';\n\n/**\n * Checks if node is line\n *\n * @param {Object} node\n * @returns {Boolean} is node line?\n */\nconst isLine = R.propEq('type', LINE);\n\nexport default isLine;\n","import * as R from 'ramda';\n\nimport { TSPAN } from '../constants';\n\n/**\n * Checks if node is tspan\n *\n * @param {Object} node\n * @returns {Boolean} is node tspan?\n */\nconst isTspan = R.propEq('type', TSPAN);\n\nexport default isTspan;\n","import * as R from 'ramda';\n\nimport { GROUP } from '../constants';\n\n/**\n * Checks if node is group\n *\n * @param {Object} node\n * @returns {Boolean} is node group?\n */\nconst isGroup = R.propEq('type', GROUP);\n\nexport default isGroup;\n","import * as R from 'ramda';\n\nimport { CIRCLE } from '../constants';\n\n/**\n * Checks if node is circle\n *\n * @param {Object} node\n * @returns {Boolean} is node circle?\n */\nconst isCircle = R.propEq('type', CIRCLE);\n\nexport default isCircle;\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import * as R from 'ramda';\n\nconst renderGroup = () => R.identity;\n\nexport default renderGroup;\n","import * as R from 'ramda';\n\nimport { ELLIPSE } from '../constants';\n\n/**\n * Checks if node is ellipse\n *\n * @param {Object} node\n * @returns {Boolean} is node ellipse?\n */\nconst isEllipse = R.propEq('type', ELLIPSE);\n\nexport default isEllipse;\n","import * as R from 'ramda';\n\nimport { POLYGON } from '../constants';\n\n/**\n * Checks if node is polygon\n *\n * @param {Object} node\n * @returns {Boolean} is node polygon?\n */\nconst isPolygon = R.propEq('type', POLYGON);\n\nexport default isPolygon;\n","import * as R from 'ramda';\n\nimport { POLYLINE } from '../constants';\n\n/**\n * Checks if node is polyline\n *\n * @param {Object} node\n * @returns {Boolean} is node polyline?\n */\nconst isPolyline = R.propEq('type', POLYLINE);\n\nexport default isPolyline;\n","import arcToCurve from 'svg-arc-to-cubic-bezier';\n\n// From https://github.com/jkroso/normalize-svg-path/blob/master/index.js\n// Copied here because an import issue with 'svg-arc-to-cubic-bezier'\nconst normalizePath = path => {\n  const result = [];\n\n  let prev;\n  let bezierX = 0;\n  let bezierY = 0;\n  let startX = 0;\n  let startY = 0;\n  let quadX = null;\n  let quadY = null;\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0, len = path.length; i < len; i++) {\n    let seg = path[i];\n    const command = seg[0];\n\n    switch (command) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n      case 'A':\n        const curves = arcToCurve({\n          px: x,\n          py: y,\n          cx: seg[6],\n          cy: seg[7],\n          rx: seg[1],\n          ry: seg[2],\n          xAxisRotation: seg[3],\n          largeArcFlag: seg[4],\n          sweepFlag: seg[5],\n        });\n\n        // null-curves\n        if (!curves.length) continue;\n\n        for (let j = 0, c; j < curves.length; j++) {\n          c = curves[j];\n          seg = ['C', c.x1, c.y1, c.x2, c.y2, c.x, c.y];\n          if (j < curves.length - 1) result.push(seg);\n        }\n\n        break;\n      case 'S':\n        // default control point\n        let cx = x;\n        let cy = y;\n        if (prev === 'C' || prev === 'S') {\n          cx += cx - bezierX; // reflect the previous command's control\n          cy += cy - bezierY; // point relative to the current point\n        }\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        break;\n      case 'T':\n        if (prev === 'Q' || prev === 'T') {\n          quadX = x * 2 - quadX; // as with 'S' reflect previous control point\n          quadY = y * 2 - quadY;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n        break;\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n        break;\n      case 'L':\n        seg = line(x, y, seg[1], seg[2]);\n        break;\n      case 'H':\n        seg = line(x, y, seg[1], y);\n        break;\n      case 'V':\n        seg = line(x, y, x, seg[1]);\n        break;\n      case 'Z':\n        seg = line(x, y, startX, startY);\n        break;\n      default:\n        break;\n    }\n\n    // update state\n    prev = command;\n    x = seg[seg.length - 2];\n    y = seg[seg.length - 1];\n    if (seg.length > 4) {\n      bezierX = seg[seg.length - 4];\n      bezierY = seg[seg.length - 3];\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n    result.push(seg);\n  }\n\n  return result;\n};\n\nconst line = (x1, y1, x2, y2) => {\n  return ['C', x1, y1, x2, y2, x2, y2];\n};\n\nconst quadratic = (x1, y1, cx, cy, x2, y2) => {\n  return [\n    'C',\n    x1 / 3 + (2 / 3) * cx,\n    y1 / 3 + (2 / 3) * cy,\n    x2 / 3 + (2 / 3) * cx,\n    y2 / 3 + (2 / 3) * cy,\n    x2,\n    y2,\n  ];\n};\n\nexport default normalizePath;\n","import * as R from 'ramda';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\n\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isPath from '../node/isPath';\nimport isCircle from '../node/isCircle';\nimport isPolygon from '../node/isPolygon';\nimport isEllipse from '../node/isEllipse';\nimport isPolyline from '../node/isPolyline';\nimport normalizePath from '../svg/normalizePath';\nimport parsePoints from './parsePoints';\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nconst getPathBoundingBox = node => {\n  const path = R.compose(\n    normalizePath,\n    absPath,\n    parsePath,\n    R.pathOr('', ['props', 'd']),\n  )(node);\n\n  if (!path.length) return [0, 0, 0, 0];\n\n  const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (let i = 0, l = path.length; i < l; i++) {\n    const points = path[i].slice(1);\n\n    for (let j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nconst getCircleBoundingBox = node => {\n  const r = R.pathOr(0, ['props', 'r'], node);\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nconst getEllipseBoundingBox = node => {\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n  const rx = R.pathOr(0, ['props', 'rx'], node);\n  const ry = R.pathOr(0, ['props', 'ry'], node);\n\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nconst getLineBoundingBox = node => {\n  const x1 = R.pathOr(0, ['props', 'x1'], node);\n  const y1 = R.pathOr(0, ['props', 'y1'], node);\n  const x2 = R.pathOr(0, ['props', 'x2'], node);\n  const y2 = R.pathOr(0, ['props', 'y2'], node);\n\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nconst getRectBoundingBox = node => {\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n  const width = R.pathOr(0, ['props', 'width'], node);\n  const height = R.pathOr(0, ['props', 'height'], node);\n\n  return [x, y, x + width, y + height];\n};\n\nconst max = R.reduce(R.max, -Infinity);\nconst min = R.reduce(R.min, Infinity);\n\nconst getPolylineBoundingBox = node => {\n  const points = R.compose(\n    parsePoints,\n    R.pathOr([], ['props', 'points']),\n  )(node);\n\n  const xValues = R.pluck(0, points);\n  const yValues = R.pluck(1, points);\n\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nconst getBoundingBox = R.cond([\n  [isRect, getRectBoundingBox],\n  [isLine, getLineBoundingBox],\n  [isPath, getPathBoundingBox],\n  [isCircle, getCircleBoundingBox],\n  [isEllipse, getEllipseBoundingBox],\n  [isPolygon, getPolylineBoundingBox],\n  [isPolyline, getPolylineBoundingBox],\n  [R.T, R.always([0, 0, 0, 0])],\n]);\n\nexport default getBoundingBox;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport renderPath from './renderPath';\nimport renderRect from './renderRect';\nimport renderLine from './renderLine';\nimport renderCircle from './renderCircle';\nimport renderSvgText from './renderSvgText';\nimport renderEllipse from './renderEllipse';\nimport renderPolygon from './renderPolygon';\nimport renderPolyline from './renderPolyline';\nimport renderSvgImage from './renderSvgImage';\nimport applyTransformations from './applyTransformations';\nimport isPath from '../node/isPath';\nimport isText from '../node/isText';\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isTspan from '../node/isTspan';\nimport isImage from '../node/isImage';\nimport isGroup from '../node/isGroup';\nimport isCircle from '../node/isCircle';\nimport isTextInstance from '../node/isTextInstance';\nimport renderGroup from './renderGroup';\nimport isEllipse from '../node/isEllipse';\nimport isPolygon from '../node/isPolygon';\nimport isPolyline from '../node/isPolyline';\nimport getBoundingBox from '../svg/getBoundingBox';\nimport { LINEAR_GRADIENT, RADIAL_GRADIENT } from '../constants';\n\nconst warnUnsupportedNode = R.tap(node => {\n  console.warn(`SVG node of type ${node.type} is not currenty supported`);\n});\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst setStrokeWidth = ctx => node => {\n  const lineWidth = getProp(0, 'strokeWidth', node);\n  if (lineWidth) ctx.lineWidth(lineWidth);\n  return node;\n};\n\nconst setStrokeColor = ctx => node => {\n  const strokeColor = getProp(null, 'stroke', node);\n  if (strokeColor) ctx.strokeColor(strokeColor);\n  return node;\n};\n\nconst setOpacity = ctx => node => {\n  const opacity = getProp(null, 'opacity', node);\n  if (opacity) ctx.opacity(opacity);\n  return node;\n};\n\nconst setFillOpacity = ctx => node => {\n  const fillOpacity = getProp(null, 'fillOpacity', node);\n  if (fillOpacity) ctx.fillOpacity(fillOpacity);\n  return node;\n};\n\nconst setStrokeOpacity = ctx => node => {\n  const strokeOpacity = getProp(null, 'strokeOpacity', node);\n  if (strokeOpacity) ctx.strokeOpacity(strokeOpacity);\n  return node;\n};\n\nconst setLineJoin = ctx => node => {\n  const lineJoin = getProp(null, 'strokeLinejoin', node);\n  if (lineJoin) ctx.lineJoin(lineJoin);\n  return node;\n};\n\nconst setLineCap = ctx => node => {\n  const lineCap = getProp(null, 'strokeLinecap', node);\n  if (lineCap) ctx.lineCap(lineCap);\n  return node;\n};\n\nconst setLineDash = ctx => node => {\n  const value = getProp(null, 'strokeDasharray', node);\n\n  if (value) {\n    const dashArray = R.compose(\n      R.map(R.o(parseFloat, R.trim)),\n      R.split(','),\n    )(value);\n\n    ctx.dash(dashArray[0], { space: dashArray[1] });\n  }\n  return node;\n};\n\nconst hasLinearGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  LINEAR_GRADIENT,\n);\n\nconst hasRadialGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  RADIAL_GRADIENT,\n);\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nconst setLinearGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const x1 = R.pathOr(0, ['props', 'x1'], gradient);\n    const y1 = R.pathOr(0, ['props', 'y1'], gradient);\n    const x2 = R.pathOr(1, ['props', 'x2'], gradient);\n    const y2 = R.pathOr(0, ['props', 'y2'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gx1 = m0 * x1 + m4;\n    const gy1 = m3 * y1 + m5;\n    const gx2 = m0 * x2 + m4;\n    const gy2 = m3 * y2 + m5;\n\n    const grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nconst setRadialGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const cx = R.pathOr(0.5, ['props', 'cx'], gradient);\n    const cy = R.pathOr(0.5, ['props', 'cy'], gradient);\n    const fx = R.pathOr(cx, ['props', 'fx'], gradient);\n    const fy = R.pathOr(cy, ['props', 'fy'], gradient);\n    const r = R.pathOr(0.5, ['props', 'r'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gr = r * m0;\n    const gcx = m0 * cx + m4;\n    const gcy = m3 * cy + m5;\n    const gfx = m0 * fx + m4;\n    const gfy = m3 * fy + m5;\n\n    const grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\nconst setFillColor = ctx =>\n  R.tap(node => {\n    const fillColor = getProp(null, 'fill', node);\n    if (fillColor) ctx.fillColor(fillColor);\n  });\n\nconst setFill = ctx =>\n  R.cond([\n    [hasLinearGradientFill, setLinearGradientFill(ctx)],\n    [hasRadialGradientFill, setRadialGradientFill(ctx)],\n    [R.T, setFillColor(ctx)],\n  ]);\n\nconst draw = ctx => node => {\n  const props = R.propOr({}, 'props', node);\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n\n  return node;\n};\n\nconst renderNode = ctx =>\n  R.cond([\n    [isTspan, R.identity],\n    [isTextInstance, R.identity],\n    [isPath, renderPath(ctx)],\n    [isRect, renderRect(ctx)],\n    [isLine, renderLine(ctx)],\n    [isGroup, renderGroup(ctx)],\n    [isText, renderSvgText(ctx)],\n    [isCircle, renderCircle(ctx)],\n    [isImage, renderSvgImage(ctx)],\n    [isEllipse, renderEllipse(ctx)],\n    [isPolygon, renderPolygon(ctx)],\n    [isPolyline, renderPolyline(ctx)],\n    [R.T, warnUnsupportedNode],\n  ]);\n\nconst drawNode = ctx =>\n  R.compose(\n    draw(ctx),\n    renderNode(ctx),\n    applyTransformations(ctx),\n    setOpacity(ctx),\n    setFillOpacity(ctx),\n    setStrokeOpacity(ctx),\n    setFill(ctx),\n    setStrokeColor(ctx),\n    setStrokeWidth(ctx),\n    setLineJoin(ctx),\n    setLineDash(ctx),\n    setLineCap(ctx),\n  );\n\nconst clipPath = ctx => node => {\n  const value = R.path(['props', 'clipPath'], node);\n\n  if (value) {\n    R.compose(\n      () => ctx.clip(),\n      R.forEach(renderNode(ctx)),\n      R.propOr([], 'children'),\n    )(value);\n  }\n\n  return node;\n};\n\nconst drawChildren = ctx => node =>\n  R.compose(\n    R.map(\n      R.compose(\n        restore(ctx),\n        drawChildren(ctx),\n        drawNode(ctx),\n        clipPath(ctx),\n        save(ctx),\n      ),\n    ),\n    R.propOr([], 'children'),\n  )(node);\n\nconst defaultsZero = R.pathOr(0);\n\nconst preserveAspectRatio = ctx => node => {\n  const { width, height } = node.box;\n  const { viewBox, preserveAspectRatio = {} } = node.props;\n  const { meetOrSlice = 'meet', align = 'xMidYMid' } = preserveAspectRatio;\n\n  if (viewBox == null || width == null || height == null) return node;\n\n  const x = viewBox ? viewBox.minX : 0;\n  const y = viewBox ? viewBox.minY : 0;\n  const logicalWidth = viewBox ? viewBox.maxX : width;\n  const logicalHeight = viewBox ? viewBox.maxY : height;\n\n  const logicalRatio = logicalWidth / logicalHeight;\n  const physicalRatio = width / height;\n  const scaleX = width / logicalWidth;\n  const scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return node;\n  }\n\n  if (\n    (logicalRatio < physicalRatio && meetOrSlice === 'meet') ||\n    (logicalRatio >= physicalRatio && meetOrSlice === 'slice')\n  ) {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height) / 2,\n          -y,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height),\n          -y,\n        );\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width) / 2,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width),\n        );\n    }\n  }\n\n  return node;\n};\n\nconst moveToOrigin = ctx => node => {\n  const { top, left } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n\n  ctx.translate(left + paddingLeft, top + paddingTop);\n\n  return node;\n};\n\nconst renderSvg = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawChildren(ctx),\n    preserveAspectRatio(ctx),\n    moveToOrigin(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderSvg);\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\nconst addMetadata = (ctx, doc) => {\n  const getProp = getDocumentProp(doc);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return doc;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx\n      .fillColor(CONTENT_COLOR)\n      .opacity(0.5)\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + paddingTop + borderTopWidth,\n        width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth,\n        height -\n          paddingTop -\n          paddingBottom -\n          borderTopWidth -\n          borderBottomWidth,\n      )\n      .fill();\n  });\n\nconst debugPadding = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n    // Padding top\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + borderTopWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingTop,\n      )\n      .fill();\n\n    // Padding left\n    ctx\n      .rect(\n        left + borderLeftWidth,\n        top + borderTopWidth,\n        paddingLeft,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding right\n    ctx\n      .rect(\n        left + width - paddingRight - borderRightWidth,\n        top + borderTopWidth,\n        paddingRight,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding bottom\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + height - paddingBottom - borderBottomWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingBottom,\n      )\n      .fill();\n  });\n\nconst debugMargin = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n    // Margin left\n    ctx\n      .rect(\n        left - marginLeft,\n        top - marginTop,\n        marginLeft,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin right\n    ctx\n      .rect(\n        left + width,\n        top - marginTop,\n        marginRight,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n  });\n\nconst debugText = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n\n    const roundedWidth = Math.round(width + marginLeft + marginRight);\n    const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n    ctx\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        left - marginLeft,\n        Math.max(top - marginTop - 4, 1),\n      );\n  });\n\nconst debugOrigin = ctx =>\n  R.tap(node => {\n    if (node.origin) {\n      ctx\n        .circle(node.origin.left, node.origin.top, 3)\n        .fill('red')\n        .circle(node.origin.left, node.origin.top, 5)\n        .stroke('red');\n    }\n  });\n\nconst renderDebug = ctx =>\n  R.tap(\n    R.when(\n      shouldDebug,\n      R.compose(\n        restore(ctx),\n        debugOrigin(ctx),\n        debugText(ctx),\n        debugMargin(ctx),\n        debugPadding(ctx),\n        debugContent(ctx),\n        save(ctx),\n      ),\n    ),\n  );\n\nexport default renderDebug;\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport setLink from './setLink';\nimport restore from './restore';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isLink from '../node/isLink';\nimport isNote from '../node/isNote';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport renderSvg from './renderSvg';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport setDestination from './setDestination';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst shouldRenderChildren = v => !isText(v) && !isSvg(v);\n\nconst renderChildren = ctx => node => {\n  save(ctx, node);\n\n  ctx.translate(node.box.left, node.box.top);\n\n  R.compose(\n    R.forEach(renderNode(ctx)),\n    R.pathOr([], ['children']),\n  )(node);\n\n  restore(ctx, node);\n\n  return node;\n};\n\nconst renderNode = ctx => node =>\n  R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    setDestination(ctx),\n    R.when(shouldRenderChildren, renderChildren(ctx)),\n    R.when(R.either(isText, isLink), setLink(ctx)),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [isSvg, renderSvg(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, doc) => {\n  addMetadata(ctx)(doc);\n  renderDocument(ctx)(doc);\n\n  ctx.end();\n  Font.reset(); // TODO: move outside\n\n  return ctx;\n};\n\nexport default render;\n","import * as R from 'ramda';\n\nconst setDestination = ctx =>\n  R.tap(node => {\n    if (node.props.id) {\n      ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n    }\n  });\n\nexport default setDestination;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default R.memoizeWith(R.identity, upperFirst);\n","import capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nexport default transformText;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport transformText from '../text/transformText';\nimport isTextInstance from '../node/isTextInstance';\nimport fontSubstitution from '../text/fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nconst layoutOptions = {\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n};\n\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  const fragments = [];\n\n  const {\n    fill = 'black',\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    opacity,\n  } = instance.props;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    opacity,\n    fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill,\n  };\n\n  instance.children.forEach(child => {\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  return fragments;\n};\n\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nconst AlmostInfinity = 999999999999;\n\nconst layoutTspan = node => {\n  const attributedString = getAttributedString(node);\n\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n\n  const container = { x, y, width: AlmostInfinity, height: AlmostInfinity };\n\n  const lines = R.compose(\n    R.reduce(R.concat, []),\n    engine,\n  )(attributedString, container, layoutOptions);\n\n  return R.assoc('lines', lines, node);\n};\n\nconst layoutText = R.evolve({\n  children: R.map(layoutTspan),\n});\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport { DEFS } from '../constants';\n\n/**\n * Checks if node is svg defs\n *\n * @param {Object} node\n * @returns {Boolean} is node svg defs?\n */\nconst isDefs = R.propEq('type', DEFS);\n\nexport default isDefs;\n","import * as R from 'ramda';\n\nimport isDefs from '../node/isDefs';\n\nconst getChildren = R.propOr([], 'children');\n\nconst getId = R.path(['props', 'id']);\n\nconst getDefs = R.compose(\n  R.map(R.prop(0)),\n  R.groupBy(getId),\n  getChildren,\n  R.defaultTo({}),\n  R.find(isDefs),\n  getChildren,\n);\n\nexport default getDefs;\n","import * as R from 'ramda';\n\nimport getDefs from './getDefs';\nimport isDefs from '../node/isDefs';\n\nconst isNotDefs = R.complement(isDefs);\n\nconst detachDefs = R.evolve({\n  children: R.filter(isNotDefs),\n});\n\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nconst replaceDef = defs =>\n  R.compose(\n    R.when(\n      R.test(URL_REGEX),\n      R.compose(\n        R.prop(R.__, defs),\n        R.prop(1),\n        R.match(URL_REGEX),\n      ),\n    ),\n    R.defaultTo(''),\n  );\n\nconst parseNodeDefs = defs => node =>\n  R.compose(\n    R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs),\n      }),\n    }),\n    R.evolve({ children: R.map(parseNodeDefs(defs)) }),\n  )(node);\n\nconst parseDefs = root => {\n  const defs = getDefs(root);\n  return R.evolve({ children: R.map(parseNodeDefs(defs)) }, root);\n};\n\nconst replaceDefs = R.compose(\n  detachDefs,\n  parseDefs,\n);\n\nexport default replaceDefs;\n","const parseViewbox = value => {\n  if (!value) return null;\n  const values = value.split(/[,\\s]+/).map(parseFloat);\n  if (values.length !== 4) return null;\n  return { minX: values[0], minY: values[1], maxX: values[2], maxY: values[3] };\n};\n\nexport default parseViewbox;\n","import * as R from 'ramda';\n\nimport { SVG_INHERITED_PROPS } from '../constants';\n\nconst getInheritProps = R.compose(\n  R.pick(SVG_INHERITED_PROPS),\n  R.propOr({}, 'props'),\n);\n\nconst inheritProps = node => {\n  const props = getInheritProps(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        inheritProps,\n        R.evolve({\n          props: R.merge(props),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default inheritProps;\n","import * as R from 'ramda';\nimport colorString from 'color-string';\nimport hlsToHex from 'hsl-to-hex';\n\nconst isRgb = R.test(/rgb/g);\nconst isRgba = R.test(/rgba/g);\nconst isHsl = R.test(/hsl/g);\nconst isHsla = R.test(/hsla/g);\n\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseRgb = R.compose(\n  colorString.to.hex,\n  colorString.get.rgb,\n);\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseHsl = R.compose(\n  R.toUpper,\n  R.apply(hlsToHex),\n  R.map(Math.round),\n  colorString.get.hsl,\n);\n\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nexport const transformColor = value =>\n  R.cond([\n    [isRgba, parseRgb],\n    [isRgb, parseRgb],\n    [isHsla, parseHsl],\n    [isHsl, parseHsl],\n    [R.T, R.always(value)],\n  ])(value);\n\n/**\n * Transform rbg and cmyk colors to hexa\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformColors = styles => R.map(transformColor, styles);\n\nexport default transformColors;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\n\nimport layoutText from '../svg/layoutText';\nimport replaceDefs from '../svg/replaceDefs';\nimport getContainer from '../svg/getContainer';\nimport parseViewbox from '../svg/parseViewbox';\nimport inheritProps from '../svg/inheritProps';\nimport matchPercent from '../utils/matchPercent';\nimport isTextInstance from '../node/isTextInstance';\nimport parseAspectRatio from '../svg/parseAspectRatio';\nimport { transformColor } from '../stylesheet/transformColors';\n\nconst STYLE_PROPS = [\n  'width',\n  'height',\n  'color',\n  'stroke',\n  'strokeWidth',\n  'opacity',\n  'fillOpacity',\n  'strokeOpacity',\n  'fill',\n  'fillRule',\n  'clipPath',\n  'offset',\n  'transform',\n  'strokeLinejoin',\n  'strokeLinecap',\n  'strokeDasharray',\n];\n\nconst VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nconst HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\n\nconst transformPercent = container =>\n  R.mapObjIndexed((value, key) => {\n    const match = matchPercent(value);\n\n    if (match && VERTICAL_PROPS.includes(key)) {\n      return match.percent * container.height;\n    }\n\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n      return match.percent * container.width;\n    }\n\n    return value;\n  });\n\nconst parsePercent = value => {\n  const match = matchPercent(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nconst parseProps = container =>\n  R.compose(\n    R.evolve({\n      props: R.o(\n        R.evolve({\n          x: parseFloat,\n          x1: parseFloat,\n          x2: parseFloat,\n          y: parseFloat,\n          y1: parseFloat,\n          y2: parseFloat,\n          r: parseFloat,\n          rx: parseFloat,\n          ry: parseFloat,\n          cx: parseFloat,\n          cy: parseFloat,\n          width: parseFloat,\n          height: parseFloat,\n          offset: parsePercent,\n          fill: transformColor,\n          opacity: parsePercent,\n          stroke: transformColor,\n          stopOpacity: parsePercent,\n          stopColor: transformColor,\n        }),\n        transformPercent(container),\n      ),\n    }),\n  );\n\nconst mergeStyles = node => {\n  const style = R.propOr({}, 'style', node);\n  return R.evolve({ props: R.merge(style) }, node);\n};\n\nconst removeNoneValues = R.evolve({\n  props: R.map(R.when(R.equals('none'), R.always(null))),\n});\n\nconst pickStyleProps = node => {\n  const styleProps = R.o(R.pick(STYLE_PROPS), R.propOr({}, 'props'))(node);\n  return R.evolve({ style: R.merge(styleProps) }, node);\n};\n\nconst parseSvgProps = R.evolve({\n  props: R.evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: parseViewbox,\n    preserveAspectRatio: parseAspectRatio,\n  }),\n});\n\nconst wrapBetweenTspan = node => ({\n  type: 'TSPAN',\n  props: {},\n  children: [node],\n});\n\nconst addMissingTspan = R.when(\n  isText,\n  R.evolve({\n    children: R.map(R.when(isTextInstance, wrapBetweenTspan)),\n  }),\n);\n\nconst resolveSvgNode = container =>\n  R.compose(\n    parseProps(container),\n    addMissingTspan,\n    removeNoneValues,\n    mergeStyles,\n  );\n\nconst resolveChildren = container => node =>\n  R.evolve({\n    children: R.map(\n      R.compose(\n        resolveChildren(container),\n        resolveSvgNode(container),\n      ),\n    ),\n  })(node);\n\nconst parseText = node =>\n  R.ifElse(\n    isText,\n    layoutText,\n    R.evolve({\n      children: R.map(parseText),\n    }),\n  )(node);\n\nconst resolveSvgRoot = node => {\n  const container = getContainer(node);\n\n  return R.compose(\n    replaceDefs,\n    parseText,\n    parseSvgProps,\n    pickStyleProps,\n    inheritProps,\n    resolveChildren(container),\n  )(node);\n};\n\nconst resolveSvg = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveSvg) }),\n    R.when(isSvg, resolveSvgRoot),\n  )(node);\n\nexport default resolveSvg;\n","const parseAspectRatio = value => {\n  const match = value\n    .replace(/[\\s\\r\\t\\n]+/gm, ' ')\n    .replace(/^defer\\s/, '')\n    .split(' ');\n\n  const align = match[0] || 'xMidYMid';\n  const meetOrSlice = match[1] || 'meet';\n\n  return { align, meetOrSlice };\n};\n\nexport default parseAspectRatio;\n","import parseViewBox from './parseViewbox';\n\nconst getContainer = node => {\n  const viewbox = parseViewBox(node.props.viewBox);\n\n  if (viewbox) {\n    return { width: viewbox.maxX, height: viewbox.maxY };\n  }\n\n  if (node.props.width && node.props.height) {\n    return {\n      width: parseFloat(node.props.width),\n      height: parseFloat(node.props.height),\n    };\n  }\n\n  return { width: 0, height: 0 };\n};\n\nexport default getContainer;\n","import * as R from 'ramda';\nimport { SVG, DOCUMENT } from '../constants';\n\nconst getZIndex = R.path(['style', 'zIndex']);\n\nconst isType = R.propEq('type');\n\nconst shouldNotSort = R.anyPass([isType(DOCUMENT), isType(SVG)]);\n\nconst sortZIndex = (a, b) => {\n  const za = getZIndex(a);\n  const zb = getZIndex(b);\n\n  if (!za && !zb) return 0;\n  if (!za) return 1;\n  if (!zb) return -1;\n\n  return zb - za;\n};\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveZIndex) }),\n    R.unless(shouldNotSort, R.evolve({ children: R.sort(sortZIndex) })),\n  )(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(adjustPageSize),\n});\n\nexport default resolveRulers;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\n\nimport firstPass from '../utils/firstPass';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  firstPass(\n    R.path(['props', 'src']),\n    R.path(['props', 'source']),\n    R.path(['props', 'href']),\n  ),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\n/**\n * Resolves async src if passed\n *\n * @param {string | Function} src\n * @returns {object} resolved src\n */\nconst resolveSrc = async src =>\n  typeof src === 'function' ? { uri: await src() } : src;\n\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    const source = await resolveSrc(src);\n    node.image = await resolveImage(source, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(R.is(Array));\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\nexport default castArray;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n  flex: {\n    flexGrow: true,\n    flexShrink: true,\n    flexBasis: true,\n  },\n};\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (styleShorthands[key]) {\n      const expandedProps = styleShorthands[key];\n\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\nconst MM_FACTOR = (1 / 25.4) * DPI;\n\nconst CM_FACTOR = (1 / 2.54) * DPI;\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * MM_FACTOR;\n    case 'cm':\n      return scalar.value * CM_FACTOR;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport isLink from '../node/isLink';\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport transformColors from '../stylesheet/transformColors';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\nconst LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline',\n};\n\n/**\n * Filter styles with `none` value\n *\n * @param {Object} style object\n * @returns {Object} style without none values\n */\nconst filterNoneValues = R.reject(R.equals('none'));\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} node\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformColors,\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    filterNoneValues,\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = container => node =>\n  R.o(\n    R.when(isLink, R.evolve({ style: R.merge(LINK_STYLES) })),\n    R.evolve({\n      style: resolveStyles(container),\n      children: R.map(resolveNodeStyles(container)),\n    }),\n  )(node);\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const box = R.prop('box', page);\n  const style = R.prop('style', page);\n  const container = R.isEmpty(box) ? style : box;\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(container)),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(resolvePageStyles),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(resolveNodeOrigin),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = page => {\n  const size = getPageSize(page);\n  return R.evolve({ style: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = R.evolve({\n  children: R.map(\n    R.compose(\n      resolvePageSize,\n      assocIfNil('style', {}),\n    ),\n  ),\n});\n\nexport default resolvePageSizes;\n","import * as R from 'ramda';\n\nimport lineIndexAtHeight from './lineIndexAtHeight';\nimport heightAtLineIndex from './heightAtLineIndex';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getWidows = R.pathOr(2, ['props', 'widows']);\n\nconst getOrphans = R.pathOr(2, ['props', 'orphans']);\n\nconst getLineBreak = (node, height) => {\n  const top = getTop(node);\n  const widows = getWidows(node);\n  const orphans = getOrphans(node);\n  const linesQuantity = node.lines.length;\n  const slicedLine = lineIndexAtHeight(node, height - top);\n\n  if (slicedLine === 0) {\n    return 0;\n  } else if (linesQuantity < orphans) {\n    return linesQuantity;\n  } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  } else if (linesQuantity === orphans + widows) {\n    return orphans;\n  } else if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n\n  return slicedLine;\n};\n\nconst splitText = (node, height) => {\n  const slicedLineIndex = getLineBreak(node, height);\n  const currentHeight = heightAtLineIndex(node, slicedLineIndex);\n  const nextHeight = node.box.height - currentHeight;\n\n  const current = R.evolve(\n    {\n      lines: R.slice(0, slicedLineIndex),\n      style: R.evolve({\n        marginBottom: zero,\n        paddingBottom: zero,\n        borderBottomWidth: zero,\n        borderBottomLeftRadius: zero,\n        borderBottomRightRadius: zero,\n      }),\n      box: {\n        height: R.always(currentHeight),\n        borderBottomWidth: zero,\n      },\n    },\n    node,\n  );\n\n  const next = R.evolve(\n    {\n      lines: R.slice(slicedLineIndex, Infinity),\n      style: R.evolve({\n        marginTop: zero,\n        paddingTop: zero,\n        borderTopWidth: zero,\n        borderTopLeftRadius: zero,\n        borderTopRightRadius: zero,\n      }),\n      box: {\n        top: zero,\n        height: R.always(nextHeight),\n        borderTopWidth: zero,\n      },\n    },\n    node,\n  );\n\n  return [current, next];\n};\n\nexport default splitText;\n","import * as R from 'ramda';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst hasFixedHeight = R.hasPath(['style', 'height']);\n\nconst subtractHeight = value =>\n  R.o(R.subtract(R.__, value), R.path(['box', 'height']));\n\nconst splitNode = (node, height) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n\n  // TODO: We should keep style untouched\n  const current = R.evolve({\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero,\n    }),\n    box: {\n      height: R.always(height - nodeTop),\n      borderBottomWidth: zero,\n    },\n  })(node);\n\n  const nextHeight = R.ifElse(\n    hasFixedHeight,\n    subtractHeight(height - nodeTop),\n    R.always(null),\n  )(node);\n\n  // TODO: We should keep style untouched\n  const next = R.evolve({\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero,\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero,\n    },\n  })(node);\n\n  return [current, next];\n};\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\nimport { TEXT_INSTANCE } from '../constants';\n\nconst isString = R.is(String);\n\nconst isNumber = R.is(Number);\n\nconst isNotString = R.complement(isString);\n\n/**\n * Transforms a react element instance to internal element format\n *\n * @param {Object} React element\n * @returns {Object} parsed react element\n */\nconst createInstance = element => {\n  if (isString(element) || isNumber(element))\n    return { type: TEXT_INSTANCE, value: `${element}` };\n\n  if (isNotString(element.type))\n    return createInstance(element.type(element.props));\n\n  const {\n    type,\n    props: { style = {}, children = [], ...props },\n  } = element;\n\n  const nextChildren = R.compose(\n    R.map(createInstance),\n    castArray,\n  )(children);\n\n  return {\n    type,\n    style,\n    props,\n    box: {},\n    children: nextChildren,\n  };\n};\n\nexport default createInstance;\n","import * as R from 'ramda';\n\nimport isSvg from './isSvg';\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isSvg, isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport transformText from './transformText';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst isNotSvg = R.complement(isSvg);\n\nconst hasLines = node =>\n  node.props.fixed ? !R.isEmpty(node.lines) : !!node.lines;\n\nconst shouldLayoutText = node => isText(node) && !hasLines(node);\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({\n      children: R.map(R.when(isNotSvg, resolveTextLayout)),\n    }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  if (isSvg(node)) return node;\n\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = isNotNil(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [\n          R.T,\n          R.always(attr === 'items' ? Yoga.ALIGN_STRETCH : Yoga.ALIGN_AUTO),\n        ],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import setAlign from './setAlign';\n\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignItems = setAlign('items');\n\nexport default setAlignItems;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getAspectRatio = viewbox => {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node, width, widthMode, height, heightMode) => {\n  const aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY ||\n    widthMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    return { width, height: width / aspectRatio };\n  }\n\n  if (heightMode === Yoga.MEASURE_MODE_EXACTLY) {\n    return { width: height * aspectRatio };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureCanvas);\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setAlignItems from '../node/setAlignItems';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureSvg from '../svg/measureSvg';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setAlignItems(node.style.alignItems),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  if (isSvg(node)) {\n    yogaNode.setMeasureFunc(measureSvg(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isNotSvg = R.complement(isSvg);\nconst isNotTextInstance = R.complement(isTextInstance);\nconst isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = node =>\n  R.evolve({\n    children: R.map(resolvePageDimensions),\n  })(node);\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport splitText from '../text/splitText';\nimport splitNode from '../node/splitNode';\nimport createInstance from '../node/createInstance';\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport { resolvePageDimensions } from './resolveDimensions';\n\n// Prevent splitting elements by low decimal numbers\nconst SAFTY_THRESHOLD = 0.001;\n\nconst assingChildren = R.assoc('children');\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst isFixed = R.pathEq(['props', 'fixed'], true);\n\nconst allFixed = R.all(isFixed);\n\nconst isDynamic = R.hasPath(['props', 'render']);\n\nconst relayoutPage = R.compose(\n  resolveTextLayout,\n  resolveInheritance,\n  resolvePageDimensions,\n);\n\nconst splitView = (node, height) => {\n  const [currentNode, nextNode] = splitNode(node, height);\n  const [currentChilds, nextChildren] = splitChildren(height, node);\n\n  return [\n    assingChildren(currentChilds)(currentNode),\n    assingChildren(nextChildren)(nextNode),\n  ];\n};\n\nconst split = R.ifElse(isText, splitText, splitView);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const futureNodes = nodes.slice(i + 1);\n    const futureFixedNodes = R.filter(isFixed, futureNodes);\n\n    const nodeTop = getTop(child);\n    const nodeHeight = getHeight(child);\n    const isOutside = isElementOutside(height, child);\n    const shouldBreak = shouldNodeBreak(child, futureNodes, height);\n    const shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (shouldBreak) {\n      const next = R.evolve({\n        box: { top: R.subtract(R.__, height) },\n        props: R.evolve({ break: R.always(false) }),\n      })(child);\n\n      currentChildren.push(...futureFixedNodes);\n      nextChildren.push(next, ...futureNodes);\n      break;\n    }\n\n    if (shouldSplit) {\n      const [currentChild, nextChild] = split(child, height);\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitPage = (page, pageNumber) => {\n  const contentArea = getContentArea(page);\n  const height = R.path(['style', 'height'], page);\n  const dynamicPage = resolveDynamicPage({ pageNumber }, page);\n\n  const [currentChilds, nextChilds] = splitNodes(\n    contentArea,\n    dynamicPage.children,\n  );\n\n  const currentPage = R.compose(\n    relayoutPage,\n    assingChildren(currentChilds),\n    R.assocPath(['box', 'height'], height),\n  )(page);\n\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n\n  const nextPage = R.compose(\n    relayoutPage,\n    assingChildren(nextChilds),\n    R.dissocPath(['box', 'height']),\n  )(page);\n\n  return [currentPage, nextPage];\n};\n\nconst shouldResolveDynamicNodes = node =>\n  R.either(\n    isDynamic,\n    R.compose(\n      R.any(shouldResolveDynamicNodes),\n      R.propOr([], 'children'),\n    ),\n  )(node);\n\nconst resolveDynamicPage = (props, page) =>\n  R.when(\n    shouldResolveDynamicNodes,\n    R.compose(\n      relayoutPage,\n      resolveDynamicNodes(props),\n    ),\n  )(page);\n\nconst resolveDynamicNodes = props => node => {\n  const isNodeDynamic = R.always(isDynamic(node));\n\n  const resolveRender = () => {\n    const res = node.props.render(props);\n    return [createInstance(res)];\n  };\n\n  return R.evolve(\n    {\n      children: R.ifElse(\n        isNodeDynamic,\n        resolveRender,\n        R.map(resolveDynamicNodes(props)),\n      ),\n      lines: R.when(isNodeDynamic, R.always([])),\n    },\n    node,\n  );\n};\n\nconst paginate = (page, pageNumber) => {\n  if (!page) return [];\n\n  let splittedPage = splitPage(page, pageNumber);\n\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length);\n\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageIndices = (page, pageNumber, pages) => {\n  const totalPages = pages.length;\n  return resolveDynamicPage({ pageNumber: pageNumber + 1, totalPages }, page);\n};\n\nconst resolvePagination = doc => {\n  let pages = [];\n  let pageNumber = 1;\n\n  for (let i = 0; i < doc.children.length; i++) {\n    const page = doc.children[i];\n    const subpages = paginate(page, pageNumber);\n\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(resolvePageIndices);\n\n  return assingChildren(pages, doc);\n};\n\nexport default resolvePagination;\n","/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {Number} height\n */\nconst lineIndexAtHeight = (node, height) => {\n  let y = 0;\n\n  if (!node.lines) return 0;\n\n  for (let i = 0; i < node.lines.length; i++) {\n    const line = node.lines[i];\n    if (y + line.box.height > height) return i;\n    y += line.box.height;\n  }\n\n  return node.lines.length;\n};\n\nexport default lineIndexAtHeight;\n","/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nconst heightAtLineIndex = (node, index) => {\n  let counter = 0;\n\n  if (!node.lines) return counter;\n\n  for (let i = 0; i < index; i++) {\n    const line = node.lines[i];\n\n    if (!line) break;\n\n    counter += line.box.height;\n  }\n\n  return counter;\n};\n\nexport default heightAtLineIndex;\n","import * as R from 'ramda';\n\nimport getPadding from '../node/getPadding';\n\nconst getContentArea = page => {\n  const { paddingTop } = getPadding(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingTop;\n};\n\nexport default getContentArea;\n","import * as R from 'ramda';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} document root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(removeMargins),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page => {\n  const container = R.pathOr({}, ['props', 'size'], page);\n\n  return R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(container),\n      paddingRight: resolvePageHorizontalPadding(container),\n      paddingTop: resolvePageVerticalPadding(container),\n      paddingBottom: resolvePageVerticalPadding(container),\n    }),\n  })(page);\n};\n\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(resolvePagePaddings),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(resolvePagePercentHeight),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a string child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","// import * as R from 'ramda';\n\nimport resolveSvg from './resolveSvg';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolvePagination from './resolvePagination';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport asyncCompose from '../utils/asyncCompose';\n\n// const startTimer = name => R.tap(() => console.time(name));\n// const endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst layout = asyncCompose(\n  resolveZIndex,\n  resolveRulers,\n  resolveOrigins,\n  resolvePagination,\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveDimensions,\n  resolveSvg,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizes,\n);\n\nexport default layout;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = ({ onChange = () => {} }) => {\n  return ReactFiberReconciler({\n    schedulePassiveEffects,\n\n    cancelPassiveEffects,\n\n    supportsMutation: true,\n\n    isPrimaryRenderer: false,\n\n    warnsIfNotActing: false,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit: onChange,\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n      } else {\n        parentInstance.children.push(child);\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n    },\n  });\n};\n\nexport default createRenderer;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport Font from './font';\nimport renderPDF from './render';\nimport layoutDocument from './layout';\nimport createRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n  SVG,\n  GROUP,\n  PATH,\n  RECT,\n  LINE,\n  CIRCLE,\n  ELLIPSE,\n  POLYGON,\n  POLYLINE,\n  DEFS,\n  TSPAN,\n  CLIP_PATH,\n  STOP,\n  LINEAR_GRADIENT,\n  RADIAL_GRADIENT,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\nconst Svg = SVG;\nconst G = GROUP;\nconst Path = PATH;\nconst Rect = RECT;\nconst Line = LINE;\nconst Circle = CIRCLE;\nconst Ellipse = ELLIPSE;\nconst Polygon = POLYGON;\nconst Polyline = POLYLINE;\nconst Defs = DEFS;\nconst Tspan = TSPAN;\nconst ClipPath = CLIP_PATH;\nconst Stop = STOP;\nconst LinearGradient = LINEAR_GRADIENT;\nconst RadialGradient = RADIAL_GRADIENT;\n\nconst pdf = ({ initialValue, onChange }) => {\n  const container = { type: 'ROOT', document: null };\n  const PDFRenderer = createRenderer({ onChange });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    console.time('layout');\n    const layout = await layoutDocument(container.document);\n    console.timeEnd('layout');\n\n    return renderPDF(ctx, layout);\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    callOnRender();\n    return render();\n  }\n\n  function toString() {\n    let result = '';\n    const instance = render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        instance.on('end', function() {\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    layout,\n    container,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Defs,\n  Tspan,\n  ClipPath,\n  Polyline,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  StyleSheet,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport const renderToStream = async function(element) {\n  const instance = pdf({ initialValue: element });\n  const buffer = await instance.toBuffer();\n  return buffer;\n};\n\nexport const renderToFile = async function(element, filePath, callback) {\n  const output = await renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","INHERITED_PROPERTIES","SVG_INHERITED_PROPS","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isNumber","Number","processFontWeight","key","value","toLowerCase","matchNumber","String","castFloat","v","parseFloat","transformStyle","match","Error","result","transformOffsetKeywords","split","transformStyles","fetchFont","async","src","options","response","fetch","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","BROWSER","this","headers","body","method","fontkit","create","Promise","resolve","reject","open","err","Font","family","sources","register","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","length","lt","gt","emojiSource","hyphenationCallback","fonts","getFont","standardFonts","includes","font","i","getRegisteredFonts","getRegisteredFontFamilies","Object","keys","load","clear","reset","hasOwnProperty","registerEmojiSource","url","format","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","ctx","node","save","PROTOCOL_REGEXP","DEST_REGEXP","isSrcId","getSource","top","left","width","height","box","instanceMethod","slice","getURL","restore","isSvg","isText","isPage","hasSource","isLink","isNote","isImage","isCanvas","KAPPA","Math","sqrt","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","style","rtr","min","ctr","moveTo","lineTo","bezierCurveTo","rbr","cbr","rbl","cbl","rtl","ctl","closePath","clip","renderPath","path","props","d","getProp","p","renderRect","x","y","rx","ry","krx","kry","renderLine","x1","y1","x2","y2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderRun","run","runAdvanceWidth","runWidth","fontSize","color","opacity","attributes","fillColor","fillOpacity","sbix","COLR","CPAL","translate","ascent","glyphs","position","positions","glyph","xOffset","yOffset","render","xAdvance","yAdvance","_addGlyphs","error","console","log","renderSpan","line","textAnchor","lineWidth","runs","renderSvgText","span","children","lines","lengthIsOdd","parsePoints","renderPolyline","points","forEach","drawPolyline","renderPolygon","warning","process","env","NODE_ENV","condition","args","undefined","argIndex","message","replace","printWarning","paddingTop","paddingLeft","image","href","drawImage","getTranslateX","transform","matchX","exec","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","origin","test","rotate","PI","getRotation","scale","getMatrix","re","isPath","isRect","isLine","isTspan","isGroup","isCircle","isTextInstance","renderGroup","isEllipse","isPolygon","isPolyline","normalizePath","prev","bezierX","bezierY","startX","startY","quadX","quadY","len","seg","command","curves","arcToCurve","px","py","xAxisRotation","largeArcFlag","sweepFlag","c","j","quadratic","max","Infinity","getPolylineBoundingBox","xValues","yValues","getBoundingBox","absPath","parsePath","bounds","l","warnUnsupportedNode","warn","type","hasLinearGradientFill","hasRadialGradientFill","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","fill","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","renderNode","renderSvgImage","drawNode","stroke","fillAndStroke","fillRule","draw","applyTransformations","setOpacity","setFillOpacity","strokeOpacity","setStrokeOpacity","setFill","strokeColor","setStrokeColor","setStrokeWidth","lineJoin","setLineJoin","dashArray","dash","space","setLineDash","lineCap","setLineCap","drawChildren","clipPath","defaultsZero","viewBox","preserveAspectRatio","meetOrSlice","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","scaleX","scaleY","moveToOrigin","clipNode","initialY","PDFRenderer","addPage","size","margin","note","matchPercent","isPercent","percent","absValue","abs","absPercent","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","cr","ir","pxp","pyp","pxv","pyv","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","objectFit","availableMethods","availableWidth","availableHeight","paint","reduce","acc","prop","painter","hasVerticalRuler","hasHorizontalRuler","range","steps","Array","ceil","_","matchPercentage","renderVerticalRuler","page","hRange","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","rect","map","step","text","round","renderHorizontalRuler","verticalRulerSteps","getHorizontalSteps","doc","target","or","getDocumentProp","setProp","info","setPDFMetadata","title","author","subject","keywords","creator","producer","shouldDebug","renderDebug","circle","debugOrigin","marginLeft","marginTop","marginRight","marginBottom","roundedWidth","roundedHeight","debugText","debugMargin","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","debugPadding","debugContent","shouldRenderBorders","borderTopColor","borderTopStyle","borderLeftColor","borderLeftStyle","borderRightColor","borderRightStyle","borderBottomColor","borderBottomStyle","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","clipBorderTop","undash","fillBorderTop","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","clipBorderRight","fillBorderRight","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","clipBorderBottom","fillBorderBottom","topLeftCoordX","bottomLeftXCoord","clipBorderLeft","fillBorderLeft","shouldRenderBackground","backgroundColor","drawBackground","shouldRenderChildren","id","addNamedDestination","setDestination","renderChildren","setLink","renderText","renderNote","renderImage","renderCanvas","renderSvg","renderBorders","renderBackground","renderPage","addMetadata","renderRulers","renderDocument","end","upperFirst","transformText","transformation","toUpperCase","capitalize","StandardFont","PDFFont","str","encoded","encode","stringIndices","g","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","fontSubstitution","string","lastFont","lastIndex","index","defaultFont","start","char","codePointAt","unitsPerEm","engine","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","layoutOptions","shrinkWhitespaceFactor","before","after","getFragments","instance","fragments","textDecorationColor","textDecorationStyle","textTransform","obj","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","child","layoutText","attributedString","AttributedString","fromFragments","getAttributedString","container","isDefs","getChildren","getId","getDefs","isNotDefs","detachDefs","URL_REGEX","replaceDef","defs","parseNodeDefs","replaceDefs","root","parseViewbox","values","getInheritProps","inheritProps","isRgb","isRgba","isHsl","isHsla","parseRgb","colorString","to","hex","get","rgb","parseHsl","hlsToHex","hsl","transformColor","transformColors","styles","STYLE_PROPS","VERTICAL_PROPS","HORIZONTAL_PROPS","transformPercent","parsePercent","mergeStyles","removeNoneValues","pickStyleProps","styleProps","parseSvgProps","addMissingTspan","resolveSvgNode","parseProps","resolveChildren","parseText","resolveSvgRoot","viewbox","parseViewBox","getContainer","resolveSvg","getZIndex","isType","shouldNotSort","sortZIndex","a","b","za","zb","resolveZIndex","adjustPageSize","resolveRulers","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","IMAGE_CACHE","limit","cache","set","shift","createCache","getAbsoluteLocalPath","protocol","auth","host","port","hostname","pathname","parse","absolutePath","getImage","extension","resolveBufferImage","guessFormat","resolveImageFromUrl","uri","fs","readFile","fetchLocalFile","fetchRemoteFile","isPng","isJpg","getImageFormat","resolveImage","cacheKey","toString","isCompatibleBase64","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","isNotNil","firstPass","fns","fn","fetchImage","source","resolveSrc","emojis","regex","emojiRegex","makeFetchEmojiImage","promise","then","reflect","_removeNoColor","buildEmojiUrl","emoji","join","getCodePoints","fetchEmojis","promises","emojiUrl","fetchEmojiImage","fetchAssets","listToExplore","childNode","isNotArray","castArray","compact","Boolean","isArray","flatten","prototype","styleShorthands","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","transformOriginX","transformOriginY","flex","flexGrow","flexShrink","flexBasis","expandStyles","propsArray","resolvedStyle","expandedProps","propName","call","transformUnit","scalar","unit","parseValue","matchMedia","LINK_STYLES","filterNoneValues","resolveStyles","transformUnits","resolveMediaQueries","flattenStyles","resolveNodeStyles","getTransformStyle","getOrigin","percentX","percentY","resolveNodeOrigin","resolveOrigin","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getNumberSize","throwInvalidError","resolvePageSizes","getPageSize","assocIfNil","zero","getTop","getWidows","getOrphans","hasFixedHeight","splitNode","nodeTop","current","nextHeight","subtractHeight","isString","isNotString","createInstance","element","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","shouldBreak","futureElements","minPresenceAhead","presenceAhead","elements","isElementInside","getPresenceAhead","futureHeight","nodes","getNodesHeight","shouldSplit","shouldWrap","getComputedPadding","edge","yogaNode","_yogaNode","getPadding","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragment","charSubset","fromCharCode","buildSubsetForFont","subsetRegex","RegExp","emojiSize","chunk","attachment","floor","textAlign","lineHeight","letterSpacing","textIndent","indent","link","characterSpacing","preprocessor","maxLines","truncateMode","hyphenationPenalty","isNotSvg","shouldLayoutText","fixed","hasLines","resolveTextLayout","getInheritStyles","resolveInheritance","inheritStyles","getComputedMargin","getMargin","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlexGrow","setFlexBasis","setAlign","yogaValue","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setAlignItems","setFlexShrink","setAlignContent","isRow","isRowReverse","isColumnReverse","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","widthMode","heightMode","aspectRatio","getAspectRatio","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","linesWidth","linesHeight","getRatio","isHeightAuto","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","nil","addPoint","w","h","ellipse","polygon","pts","roundedRect","quadraticCurveTo","miterLimit","getWidth","getHeight","measureCtx","YOGA_CONFIG","Config","setPointScaleFactor","setYogaValues","setNodeHeight","minWidth","maxWidth","minHeight","maxHeight","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","display","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setFlexDirection","flexDirection","alignSelf","alignContent","alignItems","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setJustifyContent","justifyContent","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setFlexWrap","flexWrap","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setOverflow","overflow","setAspectRatio","insertYogaNodes","parent","insertChild","getChildCount","isNotText","isNotNote","isNotTextInstance","isLayoutElement","createYogaNodes","Node","createWithConfig","setMeasureFunc","measureText","measureImage","measureCanvas","measureSvg","calculateLayout","persistDimensions","destroyYogaNodes","destroy","resolvePageDimensions","assingChildren","isElementOutside","isFixed","allFixed","isDynamic","relayoutPage","slicedLineIndex","widows","orphans","linesQuantity","slicedLine","lineIndexAtHeight","getLineBreak","currentHeight","counter","heightAtLineIndex","currentNode","nextNode","currentChilds","nextChildren","splitChildren","splitNodes","currentChildren","futureNodes","futureFixedNodes","nodeHeight","isOutside","shouldNodeBreak","next","break","currentChild","nextChild","splitPage","pageNumber","contentArea","getContentArea","dynamicPage","resolveDynamicPage","nextChilds","currentPage","shouldResolveDynamicNodes","resolveDynamicNodes","isNodeDynamic","paginate","splittedPage","pages","nextPage","resolvePageIndices","totalPages","removeMargins","resolvePageMargins","getNodesText","wrapTextInstance","resolveNoteChildren","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolveRadius","resolvePercentRadius","transformHeight","hasHeight","resolveNodePercentHeight","getPageArea","resolvePercentHeight","hasRenderProp","hasTextInstanceChilds","resolveLinkSubstitution","asyncCompose","resolveOrigins","subpages","concat","all","resolvePagePaddings","propsEqual","oldPropsKeys","newPropsKeys","emptyObject","hairlineWidth","absoluteFillObject","View","Text","Link","Page","Note","Image","Document","Canvas","Svg","G","Path","Rect","Line","Circle","Ellipse","Polygon","Polyline","Defs","Tspan","ClipPath","Stop","LinearGradient","RadialGradient","pdf","initialValue","onChange","document","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","parentInstance","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","insertBefore","beforeChild","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","createRenderer","mountNode","createContainer","updateContainer","PDFDocument","autoFirstPage","time","layoutDocument","timeEnd","renderPDF","callOnRender","params","onRender","toBuffer","toBlob","stream","pipe","BlobStream","on","blob","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version","StyleSheet"],"mappings":"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"}