{"version":3,"file":"react-pdf.cjs.js","sources":["../src/constants.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/render/save.js","../src/utils/url.js","../src/render/setLink.js","../src/render/restore.js","../src/node/isSvg.js","../src/node/isText.js","../src/node/isPage.js","../src/node/isLink.js","../src/node/isNote.js","../src/node/isImage.js","../src/node/isCanvas.js","../src/render/clipNode.js","../src/render/renderPath.js","../src/render/renderRect.js","../src/render/renderLine.js","../src/render/renderEllipse.js","../src/render/renderCircle.js","../src/render/renderSvgText.js","../src/svg/parsePoints.js","../src/render/renderPolyline.js","../src/render/renderPolygon.js","../src/utils/warning.js","../src/render/renderSvgImage.js","../src/render/applyTransformations.js","../src/node/isPath.js","../src/node/isRect.js","../src/node/isLine.js","../src/node/isTspan.js","../src/node/isGroup.js","../src/node/isCircle.js","../src/node/isTextInstance.js","../src/render/renderGroup.js","../src/node/isEllipse.js","../src/node/isPolygon.js","../src/node/isPolyline.js","../src/svg/normalizePath.js","../src/svg/getBoundingBox.js","../src/render/renderSvg.js","../src/render/renderText.js","../src/render/renderPage.js","../src/render/renderNote.js","../src/utils/matchPercent.js","../src/image/resolveObjectFit.js","../src/render/renderImage.js","../src/canvas/painter.js","../src/render/renderCanvas.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/render/renderRulers.js","../src/render/addMetadata.js","../src/render/renderDebug.js","../src/render/renderBorders.js","../src/render/setDestination.js","../src/render/renderBackground.js","../src/render/index.js","../src/utils/capitalize.js","../src/utils/upperFirst.js","../src/text/transformText.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/svg/layoutText.js","../src/node/isDefs.js","../src/svg/getDefs.js","../src/svg/replaceDefs.js","../src/svg/parseViewbox.js","../src/svg/getContainer.js","../src/svg/inheritProps.js","../src/svg/parseAspectRatio.js","../src/stylesheet/transformColors.js","../src/layout/resolveSvg.js","../src/layout/resolveZIndex.js","../src/layout/resolveRulers.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/utils/firstPass.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/utils/castArray.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/text/lineIndexAtHeight.js","../src/text/heightAtLineIndex.js","../src/text/splitText.js","../src/node/splitNode.js","../src/node/createInstance.js","../src/node/getNodesHeight.js","../src/node/shouldBreak.js","../src/node/getPadding.js","../src/page/getContentArea.js","../src/text/ignorableChars.js","../src/text/getAttributedString.js","../src/text/layoutText.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/getMargin.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/node/setDisplay.js","../src/node/setOverflow.js","../src/node/setFlexWrap.js","../src/node/setYogaValue.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setAlignItems.js","../src/node/setFlexShrink.js","../src/node/setAspectRatio.js","../src/node/setAlignContent.js","../src/node/setPositionType.js","../src/node/setFlexDirection.js","../src/node/setJustifyContent.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/svg/measureSvg.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/layout/resolvePagination.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/layout/resolveLinkSubstitution.js","../src/utils/asyncCompose.js","../src/layout/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/stylesheet/index.js","../src/index.js","../src/node.js"],"sourcesContent":["export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\nexport const SVG = 'SVG';\nexport const GROUP = 'G';\nexport const PATH = 'PATH';\nexport const RECT = 'RECT';\nexport const LINE = 'LINE';\nexport const CIRCLE = 'CIRCLE';\nexport const ELLIPSE = 'ELLIPSE';\nexport const POLYGON = 'POLYGON';\nexport const POLYLINE = 'POLYLINE';\nexport const DEFS = 'DEFS';\nexport const TSPAN = 'TSPAN';\nexport const CLIP_PATH = 'CLIP_PATH';\nexport const STOP = 'STOP';\nexport const LINEAR_GRADIENT = 'LINEAR_GRADIENT';\nexport const RADIAL_GRADIENT = 'RADIAL_GRADIENT';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const SVG_INHERITED_PROPS = [\n  'x',\n  'y',\n  'clipPath',\n  'clipRule',\n  'opacity',\n  'fill',\n  'fillOpacity',\n  'fillRule',\n  'stroke',\n  'strokeLinecap',\n  'strokeLinejoin',\n  'strokeOpacity',\n  'strokeWidth',\n  'textAnchor',\n  ...INHERITED_PROPERTIES,\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh|px)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh|px)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isNumber = R.is(Number);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst isFlexGrow = key => key === 'flexGrow';\n\nconst isFlexShrink = key => key === 'flexShrink';\n\nconst isFlexBasis = key => key === 'flexBasis';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/Color$/)) {\n      return match[4] || value;\n    } else if (key.match(/Style$/)) {\n      return match[3] || value;\n    } else if (key.match(/Width$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/Top$/)) {\n      return match[0];\n    } else if (key.match(/Right$/)) {\n      return match[1] || match[0];\n    } else if (key.match(/Bottom$/)) {\n      return match[2] || match[0];\n    } else if (key.match(/Left$/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/X$/)) {\n      return match[0] || value;\n    } else if (key.match(/Y$/)) {\n      return match[1] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/X$/)) {\n      result = match[0] || value;\n    } else if (key.match(/Y$/)) {\n      result = match[1] || match[0] || value;\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst processFlexGrow = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[0];\n};\n\nconst processFlexShrink = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[1];\n};\n\nconst processFlexBasis = (key, value) => {\n  if (isNumber(value)) return value;\n  const matches = value.split(' ');\n  return matches[2];\n};\n\nconst keepSame = (key, value) => value;\n\nconst matchNumber = R.when(R.is(String), R.test(/^-?\\d*\\.?\\d*$/));\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\nconst transformStyle = R.compose(\n  castFloat,\n  R.cond([\n    [isBorderStyle, processBorders],\n    [isBoxModelStyle, processBoxModel],\n    [isObjectPositionStyle, processObjectPosition],\n    [isTransformOriginStyle, processTransformOrigin],\n    [isFontWeightStyle, processFontWeight],\n    [isFlexGrow, processFlexGrow],\n    [isFlexShrink, processFlexShrink],\n    [isFlexBasis, processFlexBasis],\n    [R.T, keepSame],\n  ]),\n);\n\n/**\n * Transforms already expanded styles shortcuts into appropiate values\n * Ex. marginTopWidth: '2 solid red' -> marginTopWidth: 2\n *\n * @param {Object} styles expanded object\n * @returns {Object} transformed styles\n */\nconst transformStyles = R.mapObjIndexed(R.flip(transformStyle));\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\n\nlet fonts = {};\n\nconst register = data => {\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nconst save = (ctx, node) => {\n  ctx.save();\n  return node;\n};\n\nexport default R.curryN(2, save);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\nconst DEST_REGEXP = /^#.+/;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (isSrcId(value)) return value; // don't modify it if it is an id\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n\nexport const isSrcId = src => src.match(DEST_REGEXP);\n\nexport const setLink = node => {\n  if (!node.src) {\n    return;\n  }\n\n  const { top, left, width, height } = node.getAbsoluteLayout();\n  const instanceMethod = isSrcId(node.src) ? 'goTo' : 'link';\n  const nodeSrc = isSrcId(node.src) ? node.src.slice(1) : node.src;\n\n  node.root.instance[instanceMethod](left, top, width, height, nodeSrc);\n};\n\nexport const setDestination = node => {\n  if (!node.props.id) {\n    return;\n  }\n\n  const { top } = node.getAbsoluteLayout();\n  node.root.instance.addNamedDestination(node.props.id, 'XYZ', null, top, null);\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst DEST_REGEXP = /^#.+/;\n\nconst isSrcId = R.test(DEST_REGEXP);\n\nconst getSource = R.compose(\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nconst setLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n  const instanceMethod = isSrcId(src) ? 'goTo' : 'link';\n  const value = isSrcId(src) ? src.slice(1) : getURL(src);\n\n  if (value) {\n    ctx[instanceMethod](left, top, width, height, value);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, setLink);\n","import * as R from 'ramda';\n\nconst restore = (ctx, node) => {\n  ctx.restore();\n  return node;\n};\n\nexport default R.curryN(2, restore);\n","import * as R from 'ramda';\n\nimport { SVG } from '../constants';\n\n/**\n * Checks if node is svg\n *\n * @param {Object} node\n * @returns {Boolean} is node svg?\n */\nconst isSvg = R.propEq('type', SVG);\n\nexport default isSvg;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { LINK, TEXT } from '../constants';\n\n/**\n * Checks if node has valid source prop\n *\n * @param {Object} node\n * @returns {Boolean} does node have source prop?\n */\nconst hasSource = R.either(\n  R.hasPath(['props', 'src']),\n  R.hasPath(['props', 'href']),\n);\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.either(\n  R.propEq('type', LINK),\n  R.both(R.propEq('type', TEXT), hasSource),\n);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import * as R from 'ramda';\n\nconst renderPath = ctx =>\n  R.tap(node => {\n    const d = R.path(['props', 'd'], node);\n    if (d) ctx.path(node.props.d);\n  });\n\nexport default renderPath;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst renderRect = ctx => node => {\n  const x = getProp(0, 'x', node);\n  const y = getProp(0, 'y', node);\n  const rx = getProp(0, 'rx', node);\n  const ry = getProp(0, 'ry', node);\n  const width = getProp(0, 'width', node);\n  const height = getProp(0, 'height', node);\n\n  if (!width || !height) return node;\n\n  if (rx && ry) {\n    const krx = rx * KAPPA;\n    const kry = ry * KAPPA;\n\n    ctx.moveTo(x + rx, y);\n    ctx.lineTo(x - rx + width, y);\n    ctx.bezierCurveTo(\n      x - rx + width + krx,\n      y,\n      x + width,\n      y + ry - kry,\n      x + width,\n      y + ry,\n    );\n    ctx.lineTo(x + width, y + height - ry);\n    ctx.bezierCurveTo(\n      x + width,\n      y + height - ry + kry,\n      x - rx + width + krx,\n      y + height,\n      x - rx + width,\n      y + height,\n    );\n    ctx.lineTo(x + rx, y + height);\n    ctx.bezierCurveTo(\n      x + rx - krx,\n      y + height,\n      x,\n      y + height - ry + kry,\n      x,\n      y + height - ry,\n    );\n    ctx.lineTo(x, y + ry);\n    ctx.bezierCurveTo(x, y + ry - kry, x + rx - krx, y, x + rx, y);\n  } else {\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n  }\n\n  ctx.closePath();\n\n  return node;\n};\n\nexport default renderRect;\n","import * as R from 'ramda';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderLine = ctx => node => {\n  const x1 = getProp('x1', node);\n  const y1 = getProp('y1', node);\n  const x2 = getProp('x2', node);\n  const y2 = getProp('y2', node);\n\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n\n  return node;\n};\n\nexport default renderLine;\n","import * as R from 'ramda';\n\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nexport const drawEllipse = (ctx, cx, cy, rx, ry) => {\n  const x = cx - rx;\n  const y = cy - ry;\n  const ox = rx * KAPPA;\n  const oy = ry * KAPPA;\n  const xe = x + rx * 2;\n  const ye = y + ry * 2;\n  const xm = x + rx;\n  const ym = y + ry;\n\n  ctx.moveTo(x, ym);\n  ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n  ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n  ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n  ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n  ctx.closePath();\n};\n\nconst renderEllipse = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const rx = getProp('rx', node);\n    const ry = getProp('ry', node);\n\n    drawEllipse(ctx, cx, cy, rx, ry);\n  });\n\nexport default renderEllipse;\n","import * as R from 'ramda';\n\nimport { drawEllipse } from './renderEllipse';\n\nconst getProp = (p, v) => R.path(['props', p], v);\n\nconst renderCircle = ctx =>\n  R.tap(node => {\n    const cx = getProp('cx', node);\n    const cy = getProp('cy', node);\n    const r = getProp('r', node);\n\n    drawEllipse(ctx, cx, cy, r, r);\n  });\n\nexport default renderCircle;\n","import * as R from 'ramda';\n\nimport runWidth from '@react-pdf/textkit/run/advanceWidth';\nimport lineWidth from '@react-pdf/textkit/attributedString/advanceWidth';\n\nconst renderRun = (ctx, run) => {\n  const runAdvanceWidth = runWidth(run);\n  const { font, fontSize, color, opacity } = run.attributes;\n\n  ctx.fillColor(color);\n  ctx.fillOpacity(opacity);\n\n  if (font.sbix || (font.COLR && font.CPAL)) {\n    ctx.save();\n    ctx.translate(0, -run.ascent);\n\n    for (let i = 0; i < run.glyphs.length; i++) {\n      const position = run.positions[i];\n      const glyph = run.glyphs[i];\n\n      ctx.save();\n      ctx.translate(position.xOffset, position.yOffset);\n\n      glyph.render(ctx, fontSize);\n\n      ctx.restore();\n      ctx.translate(position.xAdvance, position.yAdvance);\n    }\n\n    ctx.restore();\n  } else {\n    ctx.font(typeof font.name === 'string' ? font.name : font, fontSize);\n\n    try {\n      ctx._addGlyphs(run.glyphs, run.positions, 0, 0);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  ctx.translate(runAdvanceWidth, 0);\n};\n\nconst renderSpan = (ctx, line, textAnchor) => {\n  ctx.save();\n\n  const x = R.pathOr(0, ['box', 'x'], line);\n  const y = R.pathOr(0, ['box', 'y'], line);\n  const width = lineWidth(line);\n\n  switch (textAnchor) {\n    case 'middle':\n      ctx.translate(x - width / 2, y);\n      break;\n    case 'end':\n      ctx.translate(x - width, y);\n      break;\n    default:\n      ctx.translate(x, y);\n      break;\n  }\n\n  for (const run of line.runs) {\n    renderRun(ctx, run);\n  }\n\n  ctx.restore();\n};\n\nconst renderSvgText = ctx => node => {\n  for (const span of node.children) {\n    renderSpan(ctx, span.lines[0], span.props.textAnchor);\n  }\n\n  return node;\n};\n\nexport default renderSvgText;\n","import * as R from 'ramda';\n\nconst isOdd = x => x % 2 !== 0;\n\nconst lengthIsOdd = R.o(isOdd, R.prop('length'));\n\nconst parsePoints = R.compose(\n  R.splitEvery(2),\n  R.map(parseFloat),\n  R.when(lengthIsOdd, R.slice(0, -1)),\n  R.split(/\\s+/),\n  R.replace(/(\\d)-(\\d)/g, '$1 -$2'),\n  R.replace(/,/g, ' '),\n  R.trim,\n);\n\nexport default parsePoints;\n","import * as R from 'ramda';\n\nimport parsePoints from '../svg/parsePoints';\n\nexport const drawPolyline = ctx => points => {\n  if (points.length > 0) {\n    ctx.moveTo(points[0][0], points[0][1]);\n    points.slice(1).forEach(p => ctx.lineTo(p[0], p[1]));\n  }\n};\n\nconst renderPolyline = ctx =>\n  R.tap(\n    R.compose(\n      drawPolyline(ctx),\n      parsePoints,\n      R.pathOr('', ['props', 'points']),\n    ),\n  );\n\nexport default renderPolyline;\n","import * as R from 'ramda';\n\nimport renderPolyline from './renderPolyline';\n\nconst closePath = ctx => R.tap(() => ctx.closePath());\n\nconst renderPolygon = ctx =>\n  R.compose(\n    closePath(ctx),\n    renderPolyline(ctx),\n  );\n\nexport default renderPolygon;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport warning from '../utils/warning';\n\nconst drawImage = ctx => node => {\n  const { x, y } = node.props;\n  const { width, height, opacity } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(node.image.data, x + paddingLeft, y + paddingTop, {\n          width,\n          height,\n        });\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.href}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*(,|\\s)\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*(,|\\s)\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[3]) return matchGeneric[3];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,?\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform =\n    (node.style && node.style.transform) ||\n    (node.props && node.props.transform) ||\n    '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport { PATH } from '../constants';\n\n/**\n * Checks if node is path\n *\n * @param {Object} node\n * @returns {Boolean} is node path?\n */\nconst isPath = R.propEq('type', PATH);\n\nexport default isPath;\n","import * as R from 'ramda';\n\nimport { RECT } from '../constants';\n\n/**\n * Checks if node is rect\n *\n * @param {Object} node\n * @returns {Boolean} is node rect?\n */\nconst isRect = R.propEq('type', RECT);\n\nexport default isRect;\n","import * as R from 'ramda';\n\nimport { LINE } from '../constants';\n\n/**\n * Checks if node is line\n *\n * @param {Object} node\n * @returns {Boolean} is node line?\n */\nconst isLine = R.propEq('type', LINE);\n\nexport default isLine;\n","import * as R from 'ramda';\n\nimport { TSPAN } from '../constants';\n\n/**\n * Checks if node is tspan\n *\n * @param {Object} node\n * @returns {Boolean} is node tspan?\n */\nconst isTspan = R.propEq('type', TSPAN);\n\nexport default isTspan;\n","import * as R from 'ramda';\n\nimport { GROUP } from '../constants';\n\n/**\n * Checks if node is group\n *\n * @param {Object} node\n * @returns {Boolean} is node group?\n */\nconst isGroup = R.propEq('type', GROUP);\n\nexport default isGroup;\n","import * as R from 'ramda';\n\nimport { CIRCLE } from '../constants';\n\n/**\n * Checks if node is circle\n *\n * @param {Object} node\n * @returns {Boolean} is node circle?\n */\nconst isCircle = R.propEq('type', CIRCLE);\n\nexport default isCircle;\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import * as R from 'ramda';\n\nconst renderGroup = () => R.identity;\n\nexport default renderGroup;\n","import * as R from 'ramda';\n\nimport { ELLIPSE } from '../constants';\n\n/**\n * Checks if node is ellipse\n *\n * @param {Object} node\n * @returns {Boolean} is node ellipse?\n */\nconst isEllipse = R.propEq('type', ELLIPSE);\n\nexport default isEllipse;\n","import * as R from 'ramda';\n\nimport { POLYGON } from '../constants';\n\n/**\n * Checks if node is polygon\n *\n * @param {Object} node\n * @returns {Boolean} is node polygon?\n */\nconst isPolygon = R.propEq('type', POLYGON);\n\nexport default isPolygon;\n","import * as R from 'ramda';\n\nimport { POLYLINE } from '../constants';\n\n/**\n * Checks if node is polyline\n *\n * @param {Object} node\n * @returns {Boolean} is node polyline?\n */\nconst isPolyline = R.propEq('type', POLYLINE);\n\nexport default isPolyline;\n","import arcToCurve from 'svg-arc-to-cubic-bezier';\n\n// From https://github.com/jkroso/normalize-svg-path/blob/master/index.js\n// Copied here because an import issue with 'svg-arc-to-cubic-bezier'\nconst normalizePath = path => {\n  const result = [];\n\n  let prev;\n  let bezierX = 0;\n  let bezierY = 0;\n  let startX = 0;\n  let startY = 0;\n  let quadX = null;\n  let quadY = null;\n  let x = 0;\n  let y = 0;\n\n  for (let i = 0, len = path.length; i < len; i++) {\n    let seg = path[i];\n    const command = seg[0];\n\n    switch (command) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n      case 'A':\n        const curves = arcToCurve({\n          px: x,\n          py: y,\n          cx: seg[6],\n          cy: seg[7],\n          rx: seg[1],\n          ry: seg[2],\n          xAxisRotation: seg[3],\n          largeArcFlag: seg[4],\n          sweepFlag: seg[5],\n        });\n\n        // null-curves\n        if (!curves.length) continue;\n\n        for (let j = 0, c; j < curves.length; j++) {\n          c = curves[j];\n          seg = ['C', c.x1, c.y1, c.x2, c.y2, c.x, c.y];\n          if (j < curves.length - 1) result.push(seg);\n        }\n\n        break;\n      case 'S':\n        // default control point\n        let cx = x;\n        let cy = y;\n        if (prev === 'C' || prev === 'S') {\n          cx += cx - bezierX; // reflect the previous command's control\n          cy += cy - bezierY; // point relative to the current point\n        }\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        break;\n      case 'T':\n        if (prev === 'Q' || prev === 'T') {\n          quadX = x * 2 - quadX; // as with 'S' reflect previous control point\n          quadY = y * 2 - quadY;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n        break;\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n        break;\n      case 'L':\n        seg = line(x, y, seg[1], seg[2]);\n        break;\n      case 'H':\n        seg = line(x, y, seg[1], y);\n        break;\n      case 'V':\n        seg = line(x, y, x, seg[1]);\n        break;\n      case 'Z':\n        seg = line(x, y, startX, startY);\n        break;\n      default:\n        break;\n    }\n\n    // update state\n    prev = command;\n    x = seg[seg.length - 2];\n    y = seg[seg.length - 1];\n    if (seg.length > 4) {\n      bezierX = seg[seg.length - 4];\n      bezierY = seg[seg.length - 3];\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n    result.push(seg);\n  }\n\n  return result;\n};\n\nconst line = (x1, y1, x2, y2) => {\n  return ['C', x1, y1, x2, y2, x2, y2];\n};\n\nconst quadratic = (x1, y1, cx, cy, x2, y2) => {\n  return [\n    'C',\n    x1 / 3 + (2 / 3) * cx,\n    y1 / 3 + (2 / 3) * cy,\n    x2 / 3 + (2 / 3) * cx,\n    y2 / 3 + (2 / 3) * cy,\n    x2,\n    y2,\n  ];\n};\n\nexport default normalizePath;\n","import * as R from 'ramda';\nimport absPath from 'abs-svg-path';\nimport parsePath from 'parse-svg-path';\n\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isPath from '../node/isPath';\nimport isCircle from '../node/isCircle';\nimport isPolygon from '../node/isPolygon';\nimport isEllipse from '../node/isEllipse';\nimport isPolyline from '../node/isPolyline';\nimport normalizePath from '../svg/normalizePath';\nimport parsePoints from './parsePoints';\n\n// From https://github.com/dy/svg-path-bounds/blob/master/index.js\nconst getPathBoundingBox = node => {\n  const path = R.compose(\n    normalizePath,\n    absPath,\n    parsePath,\n    R.pathOr('', ['props', 'd']),\n  )(node);\n\n  if (!path.length) return [0, 0, 0, 0];\n\n  const bounds = [Infinity, Infinity, -Infinity, -Infinity];\n\n  for (let i = 0, l = path.length; i < l; i++) {\n    const points = path[i].slice(1);\n\n    for (let j = 0; j < points.length; j += 2) {\n      if (points[j + 0] < bounds[0]) bounds[0] = points[j + 0];\n      if (points[j + 1] < bounds[1]) bounds[1] = points[j + 1];\n      if (points[j + 0] > bounds[2]) bounds[2] = points[j + 0];\n      if (points[j + 1] > bounds[3]) bounds[3] = points[j + 1];\n    }\n  }\n\n  return bounds;\n};\n\nconst getCircleBoundingBox = node => {\n  const r = R.pathOr(0, ['props', 'r'], node);\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n\n  return [cx - r, cy - r, cx + r, cy + r];\n};\n\nconst getEllipseBoundingBox = node => {\n  const cx = R.pathOr(0, ['props', 'cx'], node);\n  const cy = R.pathOr(0, ['props', 'cy'], node);\n  const rx = R.pathOr(0, ['props', 'rx'], node);\n  const ry = R.pathOr(0, ['props', 'ry'], node);\n\n  return [cx - rx, cy - ry, cx + rx, cy + ry];\n};\n\nconst getLineBoundingBox = node => {\n  const x1 = R.pathOr(0, ['props', 'x1'], node);\n  const y1 = R.pathOr(0, ['props', 'y1'], node);\n  const x2 = R.pathOr(0, ['props', 'x2'], node);\n  const y2 = R.pathOr(0, ['props', 'y2'], node);\n\n  return [R.min(x1, x2), R.min(y1, y2), R.max(x1, x2), R.max(y1, y2)];\n};\n\nconst getRectBoundingBox = node => {\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n  const width = R.pathOr(0, ['props', 'width'], node);\n  const height = R.pathOr(0, ['props', 'height'], node);\n\n  return [x, y, x + width, y + height];\n};\n\nconst max = R.reduce(R.max, -Infinity);\nconst min = R.reduce(R.min, Infinity);\n\nconst getPolylineBoundingBox = node => {\n  const points = R.compose(\n    parsePoints,\n    R.pathOr([], ['props', 'points']),\n  )(node);\n\n  const xValues = R.pluck(0, points);\n  const yValues = R.pluck(1, points);\n\n  return [min(xValues), min(yValues), max(xValues), max(yValues)];\n};\n\nconst getBoundingBox = R.cond([\n  [isRect, getRectBoundingBox],\n  [isLine, getLineBoundingBox],\n  [isPath, getPathBoundingBox],\n  [isCircle, getCircleBoundingBox],\n  [isEllipse, getEllipseBoundingBox],\n  [isPolygon, getPolylineBoundingBox],\n  [isPolyline, getPolylineBoundingBox],\n  [R.T, R.always([0, 0, 0, 0])],\n]);\n\nexport default getBoundingBox;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport renderPath from './renderPath';\nimport renderRect from './renderRect';\nimport renderLine from './renderLine';\nimport renderCircle from './renderCircle';\nimport renderSvgText from './renderSvgText';\nimport renderEllipse from './renderEllipse';\nimport renderPolygon from './renderPolygon';\nimport renderPolyline from './renderPolyline';\nimport renderSvgImage from './renderSvgImage';\nimport applyTransformations from './applyTransformations';\nimport isPath from '../node/isPath';\nimport isText from '../node/isText';\nimport isRect from '../node/isRect';\nimport isLine from '../node/isLine';\nimport isTspan from '../node/isTspan';\nimport isImage from '../node/isImage';\nimport isGroup from '../node/isGroup';\nimport isCircle from '../node/isCircle';\nimport isTextInstance from '../node/isTextInstance';\nimport renderGroup from './renderGroup';\nimport isEllipse from '../node/isEllipse';\nimport isPolygon from '../node/isPolygon';\nimport isPolyline from '../node/isPolyline';\nimport getBoundingBox from '../svg/getBoundingBox';\nimport { LINEAR_GRADIENT, RADIAL_GRADIENT } from '../constants';\n\nconst warnUnsupportedNode = R.tap(node => {\n  console.warn(`SVG node of type ${node.type} is not currenty supported`);\n});\n\nconst getProp = (d, p, v) => R.pathOr(d, ['props', p], v);\n\nconst setStrokeWidth = ctx => node => {\n  const lineWidth = getProp(0, 'strokeWidth', node);\n  if (lineWidth) ctx.lineWidth(lineWidth);\n  return node;\n};\n\nconst setStrokeColor = ctx => node => {\n  const strokeColor = getProp(null, 'stroke', node);\n  if (strokeColor) ctx.strokeColor(strokeColor);\n  return node;\n};\n\nconst setOpacity = ctx => node => {\n  const opacity = getProp(null, 'opacity', node);\n  if (opacity) ctx.opacity(opacity);\n  return node;\n};\n\nconst setFillOpacity = ctx => node => {\n  const fillOpacity = getProp(null, 'fillOpacity', node);\n  if (fillOpacity) ctx.fillOpacity(fillOpacity);\n  return node;\n};\n\nconst setStrokeOpacity = ctx => node => {\n  const strokeOpacity = getProp(null, 'strokeOpacity', node);\n  if (strokeOpacity) ctx.strokeOpacity(strokeOpacity);\n  return node;\n};\n\nconst setLineJoin = ctx => node => {\n  const lineJoin = getProp(null, 'strokeLinejoin', node);\n  if (lineJoin) ctx.lineJoin(lineJoin);\n  return node;\n};\n\nconst setLineCap = ctx => node => {\n  const lineCap = getProp(null, 'strokeLinecap', node);\n  if (lineCap) ctx.lineCap(lineCap);\n  return node;\n};\n\nconst setLineDash = ctx => node => {\n  const value = getProp(null, 'strokeDasharray', node);\n\n  if (value) {\n    const dashArray = R.compose(\n      R.map(R.o(parseFloat, R.trim)),\n      R.split(','),\n    )(value);\n\n    ctx.dash(dashArray[0], { space: dashArray[1] });\n  }\n  return node;\n};\n\nconst hasLinearGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  LINEAR_GRADIENT,\n);\n\nconst hasRadialGradientFill = R.pathEq(\n  ['props', 'fill', 'type'],\n  RADIAL_GRADIENT,\n);\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L104\nconst setLinearGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const x1 = R.pathOr(0, ['props', 'x1'], gradient);\n    const y1 = R.pathOr(0, ['props', 'y1'], gradient);\n    const x2 = R.pathOr(1, ['props', 'x2'], gradient);\n    const y2 = R.pathOr(0, ['props', 'y2'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gx1 = m0 * x1 + m4;\n    const gy1 = m3 * y1 + m5;\n    const gx2 = m0 * x2 + m4;\n    const gy2 = m3 * y2 + m5;\n\n    const grad = ctx.linearGradient(gx1, gy1, gx2, gy2);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\n// Math simplified from https://github.com/devongovett/svgkit/blob/master/src/elements/SVGGradient.js#L155\nconst setRadialGradientFill = ctx =>\n  R.tap(node => {\n    const bbox = getBoundingBox(node);\n    const gradient = getProp(null, 'fill', node);\n\n    const cx = R.pathOr(0.5, ['props', 'cx'], gradient);\n    const cy = R.pathOr(0.5, ['props', 'cy'], gradient);\n    const fx = R.pathOr(cx, ['props', 'fx'], gradient);\n    const fy = R.pathOr(cy, ['props', 'fy'], gradient);\n    const r = R.pathOr(0.5, ['props', 'r'], gradient);\n\n    const m0 = bbox[2] - bbox[0];\n    const m3 = bbox[3] - bbox[1];\n    const m4 = bbox[0];\n    const m5 = bbox[1];\n\n    const gr = r * m0;\n    const gcx = m0 * cx + m4;\n    const gcy = m3 * cy + m5;\n    const gfx = m0 * fx + m4;\n    const gfy = m3 * fy + m5;\n\n    const grad = ctx.radialGradient(gfx, gfy, 0, gcx, gcy, gr);\n\n    gradient.children.forEach(stop => {\n      grad.stop(\n        stop.props.offset,\n        stop.props.stopColor,\n        stop.props.stopOpacity,\n      );\n    });\n\n    ctx.fill(grad);\n  });\n\nconst setFillColor = ctx =>\n  R.tap(node => {\n    const fillColor = getProp(null, 'fill', node);\n    if (fillColor) ctx.fillColor(fillColor);\n  });\n\nconst setFill = ctx =>\n  R.cond([\n    [hasLinearGradientFill, setLinearGradientFill(ctx)],\n    [hasRadialGradientFill, setRadialGradientFill(ctx)],\n    [R.T, setFillColor(ctx)],\n  ]);\n\nconst draw = ctx => node => {\n  const props = R.propOr({}, 'props', node);\n\n  if (props.fill && props.stroke) {\n    ctx.fillAndStroke(props.fillRule);\n  } else if (props.fill) {\n    ctx.fill(props.fillRule);\n  } else if (props.stroke) {\n    ctx.stroke();\n  } else {\n    ctx.save();\n    ctx.opacity(0);\n    ctx.fill(null);\n    ctx.restore();\n  }\n\n  return node;\n};\n\nconst renderNode = ctx =>\n  R.cond([\n    [isTspan, R.identity],\n    [isTextInstance, R.identity],\n    [isPath, renderPath(ctx)],\n    [isRect, renderRect(ctx)],\n    [isLine, renderLine(ctx)],\n    [isGroup, renderGroup(ctx)],\n    [isText, renderSvgText(ctx)],\n    [isCircle, renderCircle(ctx)],\n    [isImage, renderSvgImage(ctx)],\n    [isEllipse, renderEllipse(ctx)],\n    [isPolygon, renderPolygon(ctx)],\n    [isPolyline, renderPolyline(ctx)],\n    [R.T, warnUnsupportedNode],\n  ]);\n\nconst drawNode = ctx =>\n  R.compose(\n    draw(ctx),\n    renderNode(ctx),\n    applyTransformations(ctx),\n    setOpacity(ctx),\n    setFillOpacity(ctx),\n    setStrokeOpacity(ctx),\n    setFill(ctx),\n    setStrokeColor(ctx),\n    setStrokeWidth(ctx),\n    setLineJoin(ctx),\n    setLineDash(ctx),\n    setLineCap(ctx),\n  );\n\nconst clipPath = ctx => node => {\n  const value = R.path(['props', 'clipPath'], node);\n\n  if (value) {\n    R.compose(\n      () => ctx.clip(),\n      R.forEach(renderNode(ctx)),\n      R.propOr([], 'children'),\n    )(value);\n  }\n\n  return node;\n};\n\nconst drawChildren = ctx => node =>\n  R.compose(\n    R.map(\n      R.compose(\n        restore(ctx),\n        drawChildren(ctx),\n        drawNode(ctx),\n        clipPath(ctx),\n        save(ctx),\n      ),\n    ),\n    R.propOr([], 'children'),\n  )(node);\n\nconst defaultsZero = R.pathOr(0);\n\nconst preserveAspectRatio = ctx => node => {\n  const { width, height } = node.box;\n  const { viewBox, preserveAspectRatio = {} } = node.props;\n  const { meetOrSlice = 'meet', align = 'xMidYMid' } = preserveAspectRatio;\n\n  if (viewBox == null || width == null || height == null) return node;\n\n  const x = viewBox ? viewBox.minX : 0;\n  const y = viewBox ? viewBox.minY : 0;\n  const logicalWidth = viewBox ? viewBox.maxX : width;\n  const logicalHeight = viewBox ? viewBox.maxY : height;\n\n  const logicalRatio = logicalWidth / logicalHeight;\n  const physicalRatio = width / height;\n  const scaleX = width / logicalWidth;\n  const scaleY = height / logicalHeight;\n\n  if (align === 'none') {\n    ctx.scale(scaleX, scaleY);\n    ctx.translate(-x, -y);\n    return node;\n  }\n\n  if (\n    (logicalRatio < physicalRatio && meetOrSlice === 'meet') ||\n    (logicalRatio >= physicalRatio && meetOrSlice === 'slice')\n  ) {\n    ctx.scale(scaleY, scaleY);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMinYMid':\n      case 'xMinYMax':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMidYMin':\n      case 'xMidYMid':\n      case 'xMidYMax':\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height) / 2,\n          -y,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x - (logicalWidth - (width * logicalHeight) / height),\n          -y,\n        );\n    }\n  } else {\n    ctx.scale(scaleX, scaleX);\n\n    switch (align) {\n      case 'xMinYMin':\n      case 'xMidYMin':\n      case 'xMaxYMin':\n        ctx.translate(-x, -y);\n        break;\n\n      case 'xMinYMid':\n      case 'xMidYMid':\n      case 'xMaxYMid':\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width) / 2,\n        );\n        break;\n\n      default:\n        ctx.translate(\n          -x,\n          -y - (logicalHeight - (height * logicalWidth) / width),\n        );\n    }\n  }\n\n  return node;\n};\n\nconst moveToOrigin = ctx => node => {\n  const { top, left } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n\n  ctx.translate(left + paddingLeft, top + paddingTop);\n\n  return node;\n};\n\nconst renderSvg = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawChildren(ctx),\n    preserveAspectRatio(ctx),\n    moveToOrigin(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderSvg);\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} doc document root\n */\nconst addMetadata = (ctx, doc) => {\n  const getProp = getDocumentProp(doc);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return doc;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx\n      .fillColor(CONTENT_COLOR)\n      .opacity(0.5)\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + paddingTop + borderTopWidth,\n        width - paddingLeft - paddingRight - borderRightWidth - borderLeftWidth,\n        height -\n          paddingTop -\n          paddingBottom -\n          borderTopWidth -\n          borderBottomWidth,\n      )\n      .fill();\n  });\n\nconst debugPadding = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      paddingLeft,\n      paddingTop,\n      paddingRight,\n      paddingBottom,\n      borderLeftWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n    } = node.box;\n\n    ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n    // Padding top\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + borderTopWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingTop,\n      )\n      .fill();\n\n    // Padding left\n    ctx\n      .rect(\n        left + borderLeftWidth,\n        top + borderTopWidth,\n        paddingLeft,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding right\n    ctx\n      .rect(\n        left + width - paddingRight - borderRightWidth,\n        top + borderTopWidth,\n        paddingRight,\n        height - borderTopWidth - borderBottomWidth,\n      )\n      .fill();\n\n    // Padding bottom\n    ctx\n      .rect(\n        left + paddingLeft + borderLeftWidth,\n        top + height - paddingBottom - borderBottomWidth,\n        width - paddingRight - paddingLeft - borderLeftWidth - borderRightWidth,\n        paddingBottom,\n      )\n      .fill();\n  });\n\nconst debugMargin = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n    ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n    // Margin top\n    ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n    // Margin left\n    ctx\n      .rect(\n        left - marginLeft,\n        top - marginTop,\n        marginLeft,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin right\n    ctx\n      .rect(\n        left + width,\n        top - marginTop,\n        marginRight,\n        height + marginTop + marginBottom,\n      )\n      .fill();\n\n    // Margin bottom\n    ctx.rect(left, top + height, width, marginBottom).fill();\n  });\n\nconst debugText = ctx =>\n  R.tap(node => {\n    const {\n      left,\n      top,\n      width,\n      height,\n      marginLeft,\n      marginTop,\n      marginRight,\n      marginBottom,\n    } = node.box;\n\n    const roundedWidth = Math.round(width + marginLeft + marginRight);\n    const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n    ctx\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        left - marginLeft,\n        Math.max(top - marginTop - 4, 1),\n      );\n  });\n\nconst debugOrigin = ctx =>\n  R.tap(node => {\n    if (node.origin) {\n      ctx\n        .circle(node.origin.left, node.origin.top, 3)\n        .fill('red')\n        .circle(node.origin.left, node.origin.top, 5)\n        .stroke('red');\n    }\n  });\n\nconst renderDebug = ctx =>\n  R.tap(\n    R.when(\n      shouldDebug,\n      R.compose(\n        restore(ctx),\n        debugOrigin(ctx),\n        debugText(ctx),\n        debugMargin(ctx),\n        debugPadding(ctx),\n        debugContent(ctx),\n        save(ctx),\n      ),\n    ),\n  );\n\nexport default renderDebug;\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nconst setDestination = ctx =>\n  R.tap(node => {\n    if (node.props.id) {\n      ctx.addNamedDestination(node.props.id, 'XYZ', null, node.box.top, null);\n    }\n  });\n\nexport default setDestination;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport setLink from './setLink';\nimport restore from './restore';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isLink from '../node/isLink';\nimport isNote from '../node/isNote';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport renderSvg from './renderSvg';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport setDestination from './setDestination';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst shouldRenderChildren = v => !isText(v) && !isSvg(v);\n\nconst renderChildren = ctx => node => {\n  save(ctx, node);\n\n  ctx.translate(node.box.left, node.box.top);\n\n  R.compose(\n    R.forEach(renderNode(ctx)),\n    R.pathOr([], ['children']),\n  )(node);\n\n  restore(ctx, node);\n\n  return node;\n};\n\nconst renderNode = ctx => node =>\n  R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    setDestination(ctx),\n    R.when(shouldRenderChildren, renderChildren(ctx)),\n    R.when(R.either(isText, isLink), setLink(ctx)),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [isSvg, renderSvg(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, doc) => {\n  addMetadata(ctx)(doc);\n  renderDocument(ctx)(doc);\n\n  ctx.end();\n  Font.reset(); // TODO: move outside\n\n  return ctx;\n};\n\nexport default render;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default R.memoizeWith(R.identity, upperFirst);\n","import capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nexport default transformText;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport transformText from '../text/transformText';\nimport isTextInstance from '../node/isTextInstance';\nimport fontSubstitution from '../text/fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nconst layoutOptions = {\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n};\n\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  const fragments = [];\n\n  const {\n    fill = 'black',\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    opacity,\n  } = instance.props;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    opacity,\n    fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || fill,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill,\n  };\n\n  instance.children.forEach(child => {\n    if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  return fragments;\n};\n\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nconst AlmostInfinity = 999999999999;\n\nconst layoutTspan = node => {\n  const attributedString = getAttributedString(node);\n\n  const x = R.pathOr(0, ['props', 'x'], node);\n  const y = R.pathOr(0, ['props', 'y'], node);\n\n  const container = { x, y, width: AlmostInfinity, height: AlmostInfinity };\n\n  const lines = R.compose(\n    R.reduce(R.concat, []),\n    engine,\n  )(attributedString, container, layoutOptions);\n\n  return R.assoc('lines', lines, node);\n};\n\nconst layoutText = R.evolve({\n  children: R.map(layoutTspan),\n});\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport { DEFS } from '../constants';\n\n/**\n * Checks if node is svg defs\n *\n * @param {Object} node\n * @returns {Boolean} is node svg defs?\n */\nconst isDefs = R.propEq('type', DEFS);\n\nexport default isDefs;\n","import * as R from 'ramda';\n\nimport isDefs from '../node/isDefs';\n\nconst getChildren = R.propOr([], 'children');\n\nconst getId = R.path(['props', 'id']);\n\nconst getDefs = R.compose(\n  R.map(R.prop(0)),\n  R.groupBy(getId),\n  getChildren,\n  R.defaultTo({}),\n  R.find(isDefs),\n  getChildren,\n);\n\nexport default getDefs;\n","import * as R from 'ramda';\n\nimport getDefs from './getDefs';\nimport isDefs from '../node/isDefs';\n\nconst isNotDefs = R.complement(isDefs);\n\nconst detachDefs = R.evolve({\n  children: R.filter(isNotDefs),\n});\n\nconst URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nconst replaceDef = defs =>\n  R.compose(\n    R.when(\n      R.test(URL_REGEX),\n      R.compose(\n        R.prop(R.__, defs),\n        R.prop(1),\n        R.match(URL_REGEX),\n      ),\n    ),\n    R.defaultTo(''),\n  );\n\nconst parseNodeDefs = defs => node =>\n  R.compose(\n    R.evolve({\n      props: R.evolve({\n        fill: replaceDef(defs),\n        clipPath: replaceDef(defs),\n      }),\n    }),\n    R.evolve({ children: R.map(parseNodeDefs(defs)) }),\n  )(node);\n\nconst parseDefs = root => {\n  const defs = getDefs(root);\n  return R.evolve({ children: R.map(parseNodeDefs(defs)) }, root);\n};\n\nconst replaceDefs = R.compose(\n  detachDefs,\n  parseDefs,\n);\n\nexport default replaceDefs;\n","const parseViewbox = value => {\n  if (!value) return null;\n  const values = value.split(/[,\\s]+/).map(parseFloat);\n  if (values.length !== 4) return null;\n  return { minX: values[0], minY: values[1], maxX: values[2], maxY: values[3] };\n};\n\nexport default parseViewbox;\n","import parseViewBox from './parseViewbox';\n\nconst getContainer = node => {\n  const viewbox = parseViewBox(node.props.viewBox);\n\n  if (viewbox) {\n    return { width: viewbox.maxX, height: viewbox.maxY };\n  }\n\n  if (node.props.width && node.props.height) {\n    return {\n      width: parseFloat(node.props.width),\n      height: parseFloat(node.props.height),\n    };\n  }\n\n  return { width: 0, height: 0 };\n};\n\nexport default getContainer;\n","import * as R from 'ramda';\n\nimport { SVG_INHERITED_PROPS } from '../constants';\n\nconst getInheritProps = R.compose(\n  R.pick(SVG_INHERITED_PROPS),\n  R.propOr({}, 'props'),\n);\n\nconst inheritProps = node => {\n  const props = getInheritProps(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        inheritProps,\n        R.evolve({\n          props: R.merge(props),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default inheritProps;\n","const parseAspectRatio = value => {\n  const match = value\n    .replace(/[\\s\\r\\t\\n]+/gm, ' ')\n    .replace(/^defer\\s/, '')\n    .split(' ');\n\n  const align = match[0] || 'xMidYMid';\n  const meetOrSlice = match[1] || 'meet';\n\n  return { align, meetOrSlice };\n};\n\nexport default parseAspectRatio;\n","import * as R from 'ramda';\nimport colorString from 'color-string';\nimport hlsToHex from 'hsl-to-hex';\n\nconst isRgb = R.test(/rgb/g);\nconst isRgba = R.test(/rgba/g);\nconst isHsl = R.test(/hsl/g);\nconst isHsla = R.test(/hsla/g);\n\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseRgb = R.compose(\n  colorString.to.hex,\n  colorString.get.rgb,\n);\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst parseHsl = R.compose(\n  R.toUpper,\n  R.apply(hlsToHex),\n  R.map(Math.round),\n  colorString.get.hsl,\n);\n\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nexport const transformColor = value =>\n  R.cond([\n    [isRgba, parseRgb],\n    [isRgb, parseRgb],\n    [isHsla, parseHsl],\n    [isHsl, parseHsl],\n    [R.T, R.always(value)],\n  ])(value);\n\n/**\n * Transform rbg and cmyk colors to hexa\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformColors = styles => R.map(transformColor, styles);\n\nexport default transformColors;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\n\nimport layoutText from '../svg/layoutText';\nimport replaceDefs from '../svg/replaceDefs';\nimport getContainer from '../svg/getContainer';\nimport parseViewbox from '../svg/parseViewbox';\nimport inheritProps from '../svg/inheritProps';\nimport matchPercent from '../utils/matchPercent';\nimport isTextInstance from '../node/isTextInstance';\nimport parseAspectRatio from '../svg/parseAspectRatio';\nimport { transformColor } from '../stylesheet/transformColors';\n\nconst STYLE_PROPS = [\n  'width',\n  'height',\n  'color',\n  'stroke',\n  'strokeWidth',\n  'opacity',\n  'fillOpacity',\n  'strokeOpacity',\n  'fill',\n  'fillRule',\n  'clipPath',\n  'offset',\n  'transform',\n  'strokeLinejoin',\n  'strokeLinecap',\n  'strokeDasharray',\n];\n\nconst VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nconst HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\n\nconst transformPercent = container =>\n  R.mapObjIndexed((value, key) => {\n    const match = matchPercent(value);\n\n    if (match && VERTICAL_PROPS.includes(key)) {\n      return match.percent * container.height;\n    }\n\n    if (match && HORIZONTAL_PROPS.includes(key)) {\n      return match.percent * container.width;\n    }\n\n    return value;\n  });\n\nconst parsePercent = value => {\n  const match = matchPercent(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nconst parseProps = container =>\n  R.compose(\n    R.evolve({\n      props: R.o(\n        R.evolve({\n          x: parseFloat,\n          x1: parseFloat,\n          x2: parseFloat,\n          y: parseFloat,\n          y1: parseFloat,\n          y2: parseFloat,\n          r: parseFloat,\n          rx: parseFloat,\n          ry: parseFloat,\n          cx: parseFloat,\n          cy: parseFloat,\n          width: parseFloat,\n          height: parseFloat,\n          offset: parsePercent,\n          fill: transformColor,\n          opacity: parsePercent,\n          stroke: transformColor,\n          stopOpacity: parsePercent,\n          stopColor: transformColor,\n        }),\n        transformPercent(container),\n      ),\n    }),\n  );\n\nconst mergeStyles = node => {\n  const style = R.propOr({}, 'style', node);\n  return R.evolve({ props: R.merge(style) }, node);\n};\n\nconst removeNoneValues = R.evolve({\n  props: R.map(R.when(R.equals('none'), R.always(null))),\n});\n\nconst pickStyleProps = node => {\n  const styleProps = R.o(R.pick(STYLE_PROPS), R.propOr({}, 'props'))(node);\n  return R.evolve({ style: R.merge(styleProps) }, node);\n};\n\nconst parseSvgProps = R.evolve({\n  props: R.evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: parseViewbox,\n    preserveAspectRatio: parseAspectRatio,\n  }),\n});\n\nconst wrapBetweenTspan = node => ({\n  type: 'TSPAN',\n  props: {},\n  children: [node],\n});\n\nconst addMissingTspan = R.when(\n  isText,\n  R.evolve({\n    children: R.map(R.when(isTextInstance, wrapBetweenTspan)),\n  }),\n);\n\nconst resolveSvgNode = container =>\n  R.compose(\n    parseProps(container),\n    addMissingTspan,\n    removeNoneValues,\n    mergeStyles,\n  );\n\nconst resolveChildren = container => node =>\n  R.evolve({\n    children: R.map(\n      R.compose(\n        resolveChildren(container),\n        resolveSvgNode(container),\n      ),\n    ),\n  })(node);\n\nconst parseText = node =>\n  R.ifElse(\n    isText,\n    layoutText,\n    R.evolve({\n      children: R.map(parseText),\n    }),\n  )(node);\n\nconst resolveSvgRoot = node => {\n  const container = getContainer(node);\n\n  return R.compose(\n    replaceDefs,\n    parseText,\n    parseSvgProps,\n    pickStyleProps,\n    inheritProps,\n    resolveChildren(container),\n  )(node);\n};\n\nconst resolveSvg = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveSvg) }),\n    R.when(isSvg, resolveSvgRoot),\n  )(node);\n\nexport default resolveSvg;\n","import * as R from 'ramda';\nimport { SVG, DOCUMENT } from '../constants';\n\nconst getZIndex = R.path(['style', 'zIndex']);\n\nconst isType = R.propEq('type');\n\nconst shouldNotSort = R.anyPass([isType(DOCUMENT), isType(SVG)]);\n\nconst sortZIndex = (a, b) => {\n  const za = getZIndex(a);\n  const zb = getZIndex(b);\n\n  if (!za && !zb) return 0;\n  if (!za) return 1;\n  if (!zb) return -1;\n\n  return zb - za;\n};\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveZIndex) }),\n    R.unless(shouldNotSort, R.evolve({ children: R.sort(sortZIndex) })),\n  )(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(adjustPageSize),\n});\n\nexport default resolveRulers;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\n\nimport firstPass from '../utils/firstPass';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  firstPass(\n    R.path(['props', 'src']),\n    R.path(['props', 'source']),\n    R.path(['props', 'href']),\n  ),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\n/**\n * Resolves async src if passed\n *\n * @param {string | Function} src\n * @returns {object} resolved src\n */\nconst resolveSrc = async src =>\n  typeof src === 'function' ? { uri: await src() } : src;\n\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    const source = await resolveSrc(src);\n    node.image = await resolveImage(source, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(R.is(Array));\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\nexport default castArray;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n  flex: {\n    flexGrow: true,\n    flexShrink: true,\n    flexBasis: true,\n  },\n};\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (styleShorthands[key]) {\n      const expandedProps = styleShorthands[key];\n\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\nconst MM_FACTOR = (1 / 25.4) * DPI;\n\nconst CM_FACTOR = (1 / 2.54) * DPI;\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * MM_FACTOR;\n    case 'cm':\n      return scalar.value * CM_FACTOR;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport isLink from '../node/isLink';\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport transformColors from '../stylesheet/transformColors';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\nconst LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline',\n};\n\n/**\n * Filter styles with `none` value\n *\n * @param {Object} style object\n * @returns {Object} style without none values\n */\nconst filterNoneValues = R.reject(R.equals('none'));\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} node\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformColors,\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    filterNoneValues,\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = container => node =>\n  R.o(\n    R.when(isLink, R.evolve({ style: R.merge(LINK_STYLES) })),\n    R.evolve({\n      style: resolveStyles(container),\n      children: R.map(resolveNodeStyles(container)),\n    }),\n  )(node);\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const box = R.prop('box', page);\n  const style = R.prop('style', page);\n  const container = R.isEmpty(box) ? style : box;\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(container)),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(resolvePageStyles),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(resolveNodeOrigin),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = page => {\n  const size = getPageSize(page);\n  return R.evolve({ style: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = R.evolve({\n  children: R.map(\n    R.compose(\n      resolvePageSize,\n      assocIfNil('style', {}),\n    ),\n  ),\n});\n\nexport default resolvePageSizes;\n","/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {Number} height\n */\nconst lineIndexAtHeight = (node, height) => {\n  let y = 0;\n\n  if (!node.lines) return 0;\n\n  for (let i = 0; i < node.lines.length; i++) {\n    const line = node.lines[i];\n    if (y + line.box.height > height) return i;\n    y += line.box.height;\n  }\n\n  return node.lines.length;\n};\n\nexport default lineIndexAtHeight;\n","/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nconst heightAtLineIndex = (node, index) => {\n  let counter = 0;\n\n  if (!node.lines) return counter;\n\n  for (let i = 0; i < index; i++) {\n    const line = node.lines[i];\n\n    if (!line) break;\n\n    counter += line.box.height;\n  }\n\n  return counter;\n};\n\nexport default heightAtLineIndex;\n","import * as R from 'ramda';\n\nimport lineIndexAtHeight from './lineIndexAtHeight';\nimport heightAtLineIndex from './heightAtLineIndex';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getWidows = R.pathOr(2, ['props', 'widows']);\n\nconst getOrphans = R.pathOr(2, ['props', 'orphans']);\n\nconst getLineBreak = (node, height) => {\n  const top = getTop(node);\n  const widows = getWidows(node);\n  const orphans = getOrphans(node);\n  const linesQuantity = node.lines.length;\n  const slicedLine = lineIndexAtHeight(node, height - top);\n\n  if (slicedLine === 0) {\n    return 0;\n  } else if (linesQuantity < orphans) {\n    return linesQuantity;\n  } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  } else if (linesQuantity === orphans + widows) {\n    return orphans;\n  } else if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n\n  return slicedLine;\n};\n\nconst splitText = (node, height) => {\n  const slicedLineIndex = getLineBreak(node, height);\n  const currentHeight = heightAtLineIndex(node, slicedLineIndex);\n  const nextHeight = node.box.height - currentHeight;\n\n  const current = R.evolve(\n    {\n      lines: R.slice(0, slicedLineIndex),\n      style: R.evolve({\n        marginBottom: zero,\n        paddingBottom: zero,\n        borderBottomWidth: zero,\n        borderBottomLeftRadius: zero,\n        borderBottomRightRadius: zero,\n      }),\n      box: {\n        height: R.always(currentHeight),\n        borderBottomWidth: zero,\n      },\n    },\n    node,\n  );\n\n  const next = R.evolve(\n    {\n      lines: R.slice(slicedLineIndex, Infinity),\n      style: R.evolve({\n        marginTop: zero,\n        paddingTop: zero,\n        borderTopWidth: zero,\n        borderTopLeftRadius: zero,\n        borderTopRightRadius: zero,\n      }),\n      box: {\n        top: zero,\n        height: R.always(nextHeight),\n        borderTopWidth: zero,\n      },\n    },\n    node,\n  );\n\n  return [current, next];\n};\n\nexport default splitText;\n","import * as R from 'ramda';\n\nconst zero = R.always(0);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst hasFixedHeight = R.hasPath(['style', 'height']);\n\nconst subtractHeight = value =>\n  R.o(R.subtract(R.__, value), R.path(['box', 'height']));\n\nconst splitNode = (node, height) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n\n  // TODO: We should keep style untouched\n  const current = R.evolve({\n    style: R.evolve({\n      marginBottom: zero,\n      paddingBottom: zero,\n      borderBottomWidth: zero,\n      borderBottomLeftRadius: zero,\n      borderBottomRightRadius: zero,\n    }),\n    box: {\n      height: R.always(height - nodeTop),\n      borderBottomWidth: zero,\n    },\n  })(node);\n\n  const nextHeight = R.ifElse(\n    hasFixedHeight,\n    subtractHeight(height - nodeTop),\n    R.always(null),\n  )(node);\n\n  // TODO: We should keep style untouched\n  const next = R.evolve({\n    style: R.evolve({\n      marginTop: zero,\n      paddingTop: zero,\n      borderTopWidth: zero,\n      borderTopLeftRadius: zero,\n      borderTopRightRadius: zero,\n    }),\n    box: {\n      top: zero,\n      height: R.always(nextHeight),\n      borderTopWidth: zero,\n    },\n  })(node);\n\n  return [current, next];\n};\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport castArray from '../utils/castArray';\nimport { TEXT_INSTANCE } from '../constants';\n\nconst isString = R.is(String);\n\nconst isNumber = R.is(Number);\n\nconst isNotString = R.complement(isString);\n\n/**\n * Transforms a react element instance to internal element format\n *\n * @param {Object} React element\n * @returns {Object} parsed react element\n */\nconst createInstance = element => {\n  if (isString(element) || isNumber(element))\n    return { type: TEXT_INSTANCE, value: `${element}` };\n\n  if (isNotString(element.type))\n    return createInstance(element.type(element.props));\n\n  const {\n    type,\n    props: { style = {}, children = [], ...props },\n  } = element;\n\n  const nextChildren = R.compose(\n    R.map(createInstance),\n    castArray,\n  )(children);\n\n  return {\n    type,\n    style,\n    props,\n    box: {},\n    children: nextChildren,\n  };\n};\n\nexport default createInstance;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\n\nimport isSvg from './isSvg';\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isSvg, isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","import * as R from 'ramda';\n\nimport getPadding from '../node/getPadding';\n\nconst getContentArea = page => {\n  const { paddingTop } = getPadding(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingTop;\n};\n\nexport default getContentArea;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport transformText from './transformText';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\nexport default layoutText;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst isNotSvg = R.complement(isSvg);\n\nconst hasLines = node =>\n  node.props.fixed ? !R.isEmpty(node.lines) : !!node.lines;\n\nconst shouldLayoutText = node => isText(node) && !hasLines(node);\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({\n      children: R.map(R.when(isNotSvg, resolveTextLayout)),\n    }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport isSvg from '../node/isSvg';\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  if (isSvg(node)) return node;\n\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = isNotNil(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [\n          R.T,\n          R.always(attr === 'items' ? Yoga.ALIGN_STRETCH : Yoga.ALIGN_AUTO),\n        ],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import setAlign from './setAlign';\n\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignItems = setAlign('items');\n\nexport default setAlignItems;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getAspectRatio = viewbox => {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node, width, widthMode, height, heightMode) => {\n  const aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY ||\n    widthMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    return { width, height: width / aspectRatio };\n  }\n\n  if (heightMode === Yoga.MEASURE_MODE_EXACTLY) {\n    return { width: height * aspectRatio };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureCanvas);\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setAlignItems from '../node/setAlignItems';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isSvg from '../node/isSvg';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureSvg from '../svg/measureSvg';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setAlignItems(node.style.alignItems),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  if (isSvg(node)) {\n    yogaNode.setMeasureFunc(measureSvg(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isNotSvg = R.complement(isSvg);\nconst isNotTextInstance = R.complement(isTextInstance);\nconst isLayoutElement = R.allPass([isNotText, isNotNote, isNotSvg]);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = node =>\n  R.evolve({\n    children: R.map(resolvePageDimensions),\n  })(node);\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport splitText from '../text/splitText';\nimport splitNode from '../node/splitNode';\nimport createInstance from '../node/createInstance';\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport { resolvePageDimensions } from './resolveDimensions';\n\n// Prevent splitting elements by low decimal numbers\nconst SAFTY_THRESHOLD = 0.001;\n\nconst assingChildren = R.assoc('children');\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst isFixed = R.pathEq(['props', 'fixed'], true);\n\nconst allFixed = R.all(isFixed);\n\nconst isDynamic = R.hasPath(['props', 'render']);\n\nconst relayoutPage = R.compose(\n  resolveTextLayout,\n  resolveInheritance,\n  resolvePageDimensions,\n);\n\nconst splitView = (node, height) => {\n  const [currentNode, nextNode] = splitNode(node, height);\n  const [currentChilds, nextChildren] = splitChildren(height, node);\n\n  return [\n    assingChildren(currentChilds)(currentNode),\n    assingChildren(nextChildren)(nextNode),\n  ];\n};\n\nconst split = R.ifElse(isText, splitText, splitView);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const futureNodes = nodes.slice(i + 1);\n    const futureFixedNodes = R.filter(isFixed, futureNodes);\n\n    const nodeTop = getTop(child);\n    const nodeHeight = getHeight(child);\n    const isOutside = isElementOutside(height, child);\n    const shouldBreak = shouldNodeBreak(child, futureNodes, height);\n    const shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(child);\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (shouldBreak) {\n      const next = R.evolve({\n        box: { top: R.subtract(R.__, height) },\n        props: R.evolve({ break: R.always(false) }),\n      })(child);\n\n      currentChildren.push(...futureFixedNodes);\n      nextChildren.push(next, ...futureNodes);\n      break;\n    }\n\n    if (shouldSplit) {\n      const [currentChild, nextChild] = split(child, height);\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitPage = (page, pageNumber) => {\n  const contentArea = getContentArea(page);\n  const height = R.path(['style', 'height'], page);\n  const dynamicPage = resolveDynamicPage({ pageNumber }, page);\n\n  const [currentChilds, nextChilds] = splitNodes(\n    contentArea,\n    dynamicPage.children,\n  );\n\n  const currentPage = R.compose(\n    relayoutPage,\n    assingChildren(currentChilds),\n    R.assocPath(['box', 'height'], height),\n  )(page);\n\n  if (R.isEmpty(nextChilds) || allFixed(nextChilds)) return [currentPage, null];\n\n  const nextPage = R.compose(\n    relayoutPage,\n    assingChildren(nextChilds),\n    R.dissocPath(['box', 'height']),\n  )(page);\n\n  return [currentPage, nextPage];\n};\n\nconst shouldResolveDynamicNodes = node =>\n  R.either(\n    isDynamic,\n    R.compose(\n      R.any(shouldResolveDynamicNodes),\n      R.propOr([], 'children'),\n    ),\n  )(node);\n\nconst resolveDynamicPage = (props, page) =>\n  R.when(\n    shouldResolveDynamicNodes,\n    R.compose(\n      relayoutPage,\n      resolveDynamicNodes(props),\n    ),\n  )(page);\n\nconst resolveDynamicNodes = props => node => {\n  const isNodeDynamic = R.always(isDynamic(node));\n\n  const resolveRender = () => {\n    const res = node.props.render(props);\n    return [createInstance(res)];\n  };\n\n  return R.evolve(\n    {\n      children: R.ifElse(\n        isNodeDynamic,\n        resolveRender,\n        R.map(resolveDynamicNodes(props)),\n      ),\n      lines: R.when(isNodeDynamic, R.always([])),\n    },\n    node,\n  );\n};\n\nconst paginate = (page, pageNumber) => {\n  if (!page) return [];\n\n  let splittedPage = splitPage(page, pageNumber);\n\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length);\n\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageIndices = (page, pageNumber, pages) => {\n  const totalPages = pages.length;\n  return resolveDynamicPage({ pageNumber: pageNumber + 1, totalPages }, page);\n};\n\nconst resolvePagination = doc => {\n  let pages = [];\n  let pageNumber = 1;\n\n  for (let i = 0; i < doc.children.length; i++) {\n    const page = doc.children[i];\n    const subpages = paginate(page, pageNumber);\n\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(resolvePageIndices);\n\n  return assingChildren(pages, doc);\n};\n\nexport default resolvePagination;\n","import * as R from 'ramda';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} document root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(removeMargins),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page => {\n  const container = R.pathOr({}, ['props', 'size'], page);\n\n  return R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(container),\n      paddingRight: resolvePageHorizontalPadding(container),\n      paddingTop: resolvePageVerticalPadding(container),\n      paddingBottom: resolvePageVerticalPadding(container),\n    }),\n  })(page);\n};\n\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(resolvePagePaddings),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(resolvePagePercentHeight),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a string child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","// import * as R from 'ramda';\n\nimport resolveSvg from './resolveSvg';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolvePagination from './resolvePagination';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport asyncCompose from '../utils/asyncCompose';\n\n// const startTimer = name => R.tap(() => console.time(name));\n// const endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst layout = asyncCompose(\n  resolveZIndex,\n  resolveRulers,\n  resolveOrigins,\n  resolvePagination,\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveDimensions,\n  resolveSvg,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizes,\n);\n\nexport default layout;\n","/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects,\n} from 'scheduler';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = ({ onChange = () => {} }) => {\n  return ReactFiberReconciler({\n    schedulePassiveEffects,\n\n    cancelPassiveEffects,\n\n    supportsMutation: true,\n\n    isPrimaryRenderer: false,\n\n    warnsIfNotActing: false,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit: onChange,\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      if (parentInstance.type === 'ROOT') {\n        parentInstance.document = child;\n      } else {\n        parentInstance.children.push(child);\n      }\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n    },\n  });\n};\n\nexport default createRenderer;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport Font from './font';\nimport renderPDF from './render';\nimport layoutDocument from './layout';\nimport createRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n  SVG,\n  GROUP,\n  PATH,\n  RECT,\n  LINE,\n  CIRCLE,\n  ELLIPSE,\n  POLYGON,\n  POLYLINE,\n  DEFS,\n  TSPAN,\n  CLIP_PATH,\n  STOP,\n  LINEAR_GRADIENT,\n  RADIAL_GRADIENT,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\nconst Svg = SVG;\nconst G = GROUP;\nconst Path = PATH;\nconst Rect = RECT;\nconst Line = LINE;\nconst Circle = CIRCLE;\nconst Ellipse = ELLIPSE;\nconst Polygon = POLYGON;\nconst Polyline = POLYLINE;\nconst Defs = DEFS;\nconst Tspan = TSPAN;\nconst ClipPath = CLIP_PATH;\nconst Stop = STOP;\nconst LinearGradient = LINEAR_GRADIENT;\nconst RadialGradient = RADIAL_GRADIENT;\n\nconst pdf = ({ initialValue, onChange }) => {\n  const container = { type: 'ROOT', document: null };\n  const PDFRenderer = createRenderer({ onChange });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (initialValue) updateContainer(initialValue);\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    console.time('layout');\n    const layout = await layoutDocument(container.document);\n    console.timeEnd('layout');\n\n    return renderPDF(ctx, layout);\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      container.document.props.onRender(params);\n    }\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    callOnRender();\n    return render();\n  }\n\n  function toString() {\n    let result = '';\n    const instance = render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        instance.on('end', function() {\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    layout,\n    container,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Defs,\n  Tspan,\n  ClipPath,\n  Polyline,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  StyleSheet,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport const renderToStream = async function(element) {\n  const instance = pdf({ initialValue: element });\n  const buffer = await instance.toBuffer();\n  return buffer;\n};\n\nexport const renderToFile = async function(element, filePath, callback) {\n  const output = await renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  Svg,\n  G,\n  Path,\n  Rect,\n  Line,\n  Circle,\n  Ellipse,\n  Polygon,\n  Polyline,\n  Defs,\n  Tspan,\n  ClipPath,\n  Stop,\n  LinearGradient,\n  RadialGradient,\n  version,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["VIEW","TEXT","LINK","PAGE","NOTE","IMAGE","DOCUMENT","CANVAS","TEXT_INSTANCE","SVG","GROUP","PATH","RECT","LINE","CIRCLE","ELLIPSE","POLYGON","POLYLINE","DEFS","TSPAN","CLIP_PATH","STOP","LINEAR_GRADIENT","RADIAL_GRADIENT","DPI","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","PORTRAIT","LANDSCAPE","INHERITED_PROPERTIES","SVG_INHERITED_PROPS","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","BOX_MODEL_REGEX","OBJECT_POSITION_REGEX","BORDER_SHORTHAND_REGEX","TRANSFORM_ORIGIN_REGEX","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isNumber","Number","isFontWeightStyle","key","match","isBorderStyle","value","isBoxModelStyle","isObjectPositionStyle","isTransformOriginStyle","isFlexGrow","isFlexShrink","isFlexBasis","processBorders","Error","processBoxModel","processFontWeight","toLowerCase","processObjectPosition","transformOffsetKeywords","processTransformOrigin","result","processFlexGrow","matches","split","processFlexShrink","processFlexBasis","keepSame","matchNumber","String","castFloat","v","parseFloat","transformStyle","transformStyles","fetchFont","src","options","response","fetch","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","BROWSER","isUrl","headers","body","method","fontkit","create","Promise","resolve","reject","open","err","Font","family","sources","register","push","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","length","lt","gt","emojiSource","registerEmojiSource","url","format","getEmojiSource","hyphenationCallback","registerHyphenationCallback","callback","getHyphenationCallback","fonts","font","i","getRegisteredFonts","getRegisteredFontFamilies","Object","keys","getFont","isStandard","standardFonts","includes","reset","hasOwnProperty","clear","emoji","hyphenation","save","ctx","node","PROTOCOL_REGEXP","DEST_REGEXP","getURL","isSrcId","getSource","setLink","top","left","width","height","box","instanceMethod","slice","restore","isSvg","isText","isPage","hasSource","isLink","isNote","isImage","isCanvas","KAPPA","Math","sqrt","clipNode","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","style","rtr","min","ctr","moveTo","lineTo","bezierCurveTo","rbr","cbr","rbl","cbl","rtl","ctl","closePath","clip","renderPath","d","path","props","getProp","p","renderRect","x","y","rx","ry","krx","kry","renderLine","x1","y1","x2","y2","drawEllipse","cx","cy","ox","oy","xe","ye","xm","ym","renderEllipse","renderCircle","r","renderRun","run","runAdvanceWidth","runWidth","fontSize","color","opacity","attributes","fillColor","fillOpacity","sbix","COLR","CPAL","translate","ascent","glyphs","position","positions","glyph","xOffset","yOffset","render","xAdvance","yAdvance","_addGlyphs","error","console","log","renderSpan","line","textAnchor","lineWidth","runs","renderSvgText","span","children","lines","isOdd","lengthIsOdd","parsePoints","drawPolyline","points","forEach","renderPolyline","renderPolygon","printWarning","args","argIndex","message","replace","__DEV__","process","env","NODE_ENV","warning","condition","undefined","drawImage","paddingTop","paddingLeft","image","href","renderImage","getRotation","transform","exec","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","origin","test","rotate","scale","applyTransformations","re","isPath","isRect","isLine","isTspan","isGroup","isCircle","isTextInstance","renderGroup","isEllipse","isPolygon","isPolyline","normalizePath","prev","bezierX","bezierY","startX","startY","quadX","quadY","len","seg","command","curves","arcToCurve","px","py","xAxisRotation","largeArcFlag","sweepFlag","j","c","quadratic","getPathBoundingBox","absPath","parsePath","bounds","Infinity","l","getCircleBoundingBox","getEllipseBoundingBox","getLineBoundingBox","getRectBoundingBox","max","getPolylineBoundingBox","xValues","yValues","getBoundingBox","warnUnsupportedNode","warn","type","setStrokeWidth","setStrokeColor","strokeColor","setOpacity","setFillOpacity","setStrokeOpacity","strokeOpacity","setLineJoin","lineJoin","setLineCap","lineCap","setLineDash","dashArray","dash","space","hasLinearGradientFill","hasRadialGradientFill","setLinearGradientFill","bbox","gradient","m0","m3","m4","m5","gx1","gy1","gx2","gy2","grad","linearGradient","stop","offset","stopColor","stopOpacity","fill","setRadialGradientFill","fx","fy","gr","gcx","gcy","gfx","gfy","radialGradient","setFillColor","setFill","draw","stroke","fillAndStroke","fillRule","renderNode","renderSvgImage","drawNode","clipPath","drawChildren","defaultsZero","preserveAspectRatio","viewBox","meetOrSlice","align","minX","minY","logicalWidth","maxX","logicalHeight","maxY","logicalRatio","physicalRatio","scaleX","scaleY","moveToOrigin","renderSvg","renderText","initialY","PDFRenderer","renderPage","addPage","size","margin","renderNote","note","isPercent","matchPercent","percent","absValue","abs","absPercent","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","cr","ir","pxp","pyp","pxv","pyv","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","objectPositionX","objectPositionY","paddingRight","paddingBottom","objectFit","availableMethods","painter","reduce","acc","prop","renderCanvas","availableWidth","availableHeight","paint","hasVerticalRuler","hasHorizontalRuler","range","steps","Array","ceil","_","matchPercentage","getVerticalSteps","page","horizontalRulerSteps","rulerSteps","percentage","getHorizontalSteps","verticalRulerSteps","renderVerticalRuler","hRange","rect","map","step","text","round","renderHorizontalRuler","renderRulers","getDocumentProp","target","or","setPDFMetadata","info","addMetadata","doc","setProp","title","author","subject","keywords","creator","producer","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","shouldDebug","debugContent","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","debugPadding","debugMargin","marginLeft","marginTop","marginRight","marginBottom","debugText","roundedWidth","roundedHeight","debugOrigin","circle","renderDebug","clipBorderTop","layout","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","fillBorderTop","borderTopColor","borderTopStyle","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","borderRightColor","borderRightStyle","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","borderBottomColor","borderBottomStyle","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","borderLeftColor","borderLeftStyle","shouldRenderBorders","renderBorders","setDestination","id","addNamedDestination","drawBackground","backgroundColor","shouldRenderBackground","renderBackground","shouldRenderChildren","renderChildren","renderDocument","end","capitalize","toUpperCase","upperFirst","transformText","transformation","StandardFont","PDFFont","str","encoded","encode","stringIndices","g","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","descent","lineGap","unitsPerEm","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","fontSubstitution","string","lastFont","lastIndex","index","defaultFont","start","char","codePointAt","shouldFallback","engines","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","engine","layoutEngine","layoutOptions","shrinkWhitespaceFactor","before","after","getFragments","instance","fragments","textDecorationColor","textDecorationStyle","textTransform","obj","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","child","getAttributedString","AttributedString","fromFragments","AlmostInfinity","layoutTspan","attributedString","container","layoutText","isDefs","getChildren","getId","getDefs","isNotDefs","detachDefs","URL_REGEX","replaceDef","defs","parseNodeDefs","parseDefs","root","replaceDefs","parseViewbox","values","getContainer","viewbox","parseViewBox","getInheritProps","inheritProps","parseAspectRatio","isRgb","isRgba","isHsl","isHsla","parseRgb","colorString","to","hex","get","rgb","parseHsl","hlsToHex","hsl","transformColor","transformColors","styles","STYLE_PROPS","VERTICAL_PROPS","HORIZONTAL_PROPS","transformPercent","parsePercent","parseProps","mergeStyles","removeNoneValues","pickStyleProps","styleProps","parseSvgProps","wrapBetweenTspan","addMissingTspan","resolveSvgNode","resolveChildren","parseText","resolveSvgRoot","resolveSvg","getZIndex","isType","shouldNotSort","sortZIndex","a","b","za","zb","resolveZIndex","adjustPageSize","resolveRulers","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","createCache","limit","cache","set","shift","IMAGE_CACHE","getAbsoluteLocalPath","protocol","auth","host","port","hostname","pathname","parse","absolutePath","fetchLocalFile","fs","readFile","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","getImage","extension","resolveBase64Image","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","toString","isNotNil","firstPass","fns","fn","resolveSrc","fetchImage","source","emojis","regex","emojiRegex","reflect","promise","then","makeFetchEmojiImage","_removeNoColor","getCodePoints","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragment","emojiSize","chunk","fromCharCode","attachment","floor","fetchAssets","listToExplore","childNode","resolveAssets","all","isNotArray","castArray","compact","Boolean","isArray","flatten","prototype","styleShorthands","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","transformOriginX","transformOriginY","flex","flexGrow","flexShrink","flexBasis","expandStyles","propsArray","resolvedStyle","expandedProps","propName","call","MM_FACTOR","CM_FACTOR","parseValue","unit","transformUnit","scalar","transformUnits","resolveMediaQueries","matchMedia","LINK_STYLES","filterNoneValues","resolveStyles","flattenStyles","resolveNodeStyles","resolvePageStyles","getTransformStyle","getOrigin","percentX","percentY","offsetX","offsetY","resolveNodeOrigin","resolveOrigin","VALID_ORIENTATIONS","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","getNumberSize","throwInvalidError","getSize","assocIfNil","resolvePageSize","getPageSize","resolvePageSizes","lineIndexAtHeight","heightAtLineIndex","counter","zero","getTop","getWidows","getOrphans","getLineBreak","widows","orphans","linesQuantity","slicedLine","splitText","slicedLineIndex","currentHeight","nextHeight","current","next","hasFixedHeight","subtractHeight","splitNode","nodeTop","isString","isNotString","createInstance","element","nextChildren","getNodesHeight","nodes","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","getPresenceAhead","elements","isElementInside","presenceAhead","shouldBreak","futureElements","minPresenceAhead","futureHeight","shouldSplit","shouldWrap","getComputedPadding","edge","yogaNode","_yogaNode","getPadding","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getContentArea","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","textAlign","lineHeight","letterSpacing","textIndent","indent","link","characterSpacing","preprocessor","maxLines","textOverflow","truncateMode","getLayoutOptions","hyphenationPenalty","isNotSvg","hasLines","fixed","shouldLayoutText","resolveTextLayout","getInheritStyles","resolveInheritance","inheritStyles","getComputedMargin","getMargin","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","setOverflow","yogaValue","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setFlexWrap","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlexGrow","setFlexBasis","setAlign","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setAlignItems","setFlexShrink","setAspectRatio","setAlignContent","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","isRow","isRowReverse","isColumnReverse","setFlexDirection","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setJustifyContent","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","getAspectRatio","measureCanvas","widthMode","heightMode","aspectRatio","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","linesWidth","linesHeight","measureText","getRatio","isHeightAuto","SAFETY_HEIGHT","measureImage","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","measureCtx","nil","addPoint","w","h","ellipse","polygon","pts","roundedRect","quadraticCurveTo","miterLimit","getWidth","getHeight","YOGA_NODE","YOGA_CONFIG","Config","setPointScaleFactor","setNodeHeight","setYogaValues","minWidth","maxWidth","minHeight","maxHeight","display","flexDirection","alignSelf","alignContent","alignItems","justifyContent","flexWrap","overflow","insertYogaNodes","parent","insertChild","getChildCount","setMeasureFunc","measureSvg","isNotText","isNotNote","isNotTextInstance","isLayoutElement","createYogaNodes","Node","createWithConfig","calculateLayout","persistDimensions","destroyYogaNodes","destroy","resolvePageDimensions","resolveDimensions","SAFTY_THRESHOLD","assingChildren","isElementOutside","isFixed","allFixed","isDynamic","relayoutPage","splitView","currentNode","nextNode","currentChilds","splitChildren","splitNodes","currentChildren","futureNodes","futureFixedNodes","nodeHeight","isOutside","shouldNodeBreak","break","currentChild","nextChild","splitPage","pageNumber","contentArea","dynamicPage","resolveDynamicPage","nextChilds","currentPage","nextPage","shouldResolveDynamicNodes","resolveDynamicNodes","isNodeDynamic","resolveRender","paginate","splittedPage","pages","resolvePageIndices","totalPages","resolvePagination","subpages","concat","removeMargins","resolvePageMargins","getNodeText","getNodesText","wrapTextInstance","resolveNoteChildren","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolvePagePaddings","resolveRadius","resolvePercentRadius","transformHeight","getPageArea","pageHeight","pagePaddingTop","pagePaddingBottom","hasHeight","resolveNodePercentHeight","resolvePagePercentHeight","resolvePercentHeight","hasRenderProp","hasTextInstanceChilds","resolveLinkSubstitution","asyncCompose","resolveOrigins","propsEqual","oldPropsKeys","newPropsKeys","emptyObject","createRenderer","onChange","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","isPrimaryRenderer","warnsIfNotActing","appendInitialChild","parentInstance","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","document","insertBefore","beforeChild","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","absoluteFillObject","hairlineWidth","View","Text","Link","Page","Note","Image","Document","Canvas","Svg","G","Path","Rect","Line","Circle","Ellipse","Polygon","Polyline","Defs","Tspan","ClipPath","Stop","LinearGradient","RadialGradient","pdf","initialValue","mountNode","createContainer","updateContainer","PDFDocument","autoFirstPage","time","layoutDocument","timeEnd","renderPDF","callOnRender","params","onRender","toBlob","stream","pipe","BlobStream","on","blob","toBuffer","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version","StyleSheet"],"mappings":"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"}